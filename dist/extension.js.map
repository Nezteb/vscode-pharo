{
  "version": 3,
  "sources": ["../node_modules/vscode-languageclient/node_modules/semver/semver.js", "../node_modules/vscode-jsonrpc/lib/is.js", "../node_modules/vscode-jsonrpc/lib/messages.js", "../node_modules/vscode-jsonrpc/lib/events.js", "../node_modules/vscode-jsonrpc/lib/messageReader.js", "../node_modules/vscode-jsonrpc/lib/messageWriter.js", "../node_modules/vscode-jsonrpc/lib/cancellation.js", "../node_modules/vscode-jsonrpc/lib/linkedMap.js", "../node_modules/vscode-jsonrpc/lib/pipeSupport.js", "../node_modules/vscode-jsonrpc/lib/socketSupport.js", "../node_modules/vscode-jsonrpc/lib/main.js", "../node_modules/vscode-languageserver-types/lib/umd/main.js", "../node_modules/vscode-languageserver-protocol/lib/utils/is.js", "../node_modules/vscode-languageserver-protocol/lib/messages.js", "../node_modules/vscode-languageserver-protocol/lib/protocol.implementation.js", "../node_modules/vscode-languageserver-protocol/lib/protocol.typeDefinition.js", "../node_modules/vscode-languageserver-protocol/lib/protocol.workspaceFolders.js", "../node_modules/vscode-languageserver-protocol/lib/protocol.configuration.js", "../node_modules/vscode-languageserver-protocol/lib/protocol.colorProvider.js", "../node_modules/vscode-languageserver-protocol/lib/protocol.foldingRange.js", "../node_modules/vscode-languageserver-protocol/lib/protocol.declaration.js", "../node_modules/vscode-languageserver-protocol/lib/protocol.selectionRange.js", "../node_modules/vscode-languageserver-protocol/lib/protocol.progress.js", "../node_modules/vscode-languageserver-protocol/lib/protocol.js", "../node_modules/vscode-languageserver-protocol/lib/protocol.callHierarchy.proposed.js", "../node_modules/vscode-languageserver-protocol/lib/protocol.sematicTokens.proposed.js", "../node_modules/vscode-languageserver-protocol/lib/main.js", "../node_modules/vscode-languageclient/lib/utils/is.js", "../node_modules/vscode-languageclient/lib/protocolCompletionItem.js", "../node_modules/vscode-languageclient/lib/protocolCodeLens.js", "../node_modules/vscode-languageclient/lib/protocolDocumentLink.js", "../node_modules/vscode-languageclient/lib/codeConverter.js", "../node_modules/vscode-languageclient/lib/protocolConverter.js", "../node_modules/vscode-languageclient/lib/utils/async.js", "../node_modules/vscode-languageclient/lib/utils/uuid.js", "../node_modules/vscode-languageclient/lib/progressPart.js", "../node_modules/vscode-languageclient/lib/client.js", "../node_modules/vscode-languageclient/lib/colorProvider.js", "../node_modules/vscode-languageclient/lib/configuration.js", "../node_modules/vscode-languageclient/lib/implementation.js", "../node_modules/vscode-languageclient/lib/typeDefinition.js", "../node_modules/vscode-languageclient/lib/workspaceFolders.js", "../node_modules/vscode-languageclient/lib/foldingRange.js", "../node_modules/vscode-languageclient/lib/declaration.js", "../node_modules/vscode-languageclient/lib/selectionRange.js", "../node_modules/vscode-languageclient/lib/progress.js", "../node_modules/vscode-languageclient/lib/callHierarchy.proposed.js", "../node_modules/vscode-languageclient/lib/semanticTokens.proposed.js", "../node_modules/vscode-languageclient/lib/utils/processes.js", "../node_modules/vscode-languageclient/lib/main.js", "../src/extension.ts", "../src/requirements.ts", "../src/activateDebug.ts", "../src/debugFactory.ts", "../src/moosebookProvider.ts", "../src/moosebook.ts"],
  "sourcesContent": ["exports = module.exports = SemVer\n\nvar debug\n/* istanbul ignore next */\nif (typeof process === 'object' &&\n    process.env &&\n    process.env.NODE_DEBUG &&\n    /\\bsemver\\b/i.test(process.env.NODE_DEBUG)) {\n  debug = function () {\n    var args = Array.prototype.slice.call(arguments, 0)\n    args.unshift('SEMVER')\n    console.log.apply(console, args)\n  }\n} else {\n  debug = function () {}\n}\n\n// Note: this is the semver.org version of the spec that it implements\n// Not necessarily the package version of this code.\nexports.SEMVER_SPEC_VERSION = '2.0.0'\n\nvar MAX_LENGTH = 256\nvar MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER ||\n  /* istanbul ignore next */ 9007199254740991\n\n// Max safe segment length for coercion.\nvar MAX_SAFE_COMPONENT_LENGTH = 16\n\n// The actual regexps go on exports.re\nvar re = exports.re = []\nvar src = exports.src = []\nvar t = exports.tokens = {}\nvar R = 0\n\nfunction tok (n) {\n  t[n] = R++\n}\n\n// The following Regular Expressions can be used for tokenizing,\n// validating, and parsing SemVer version strings.\n\n// ## Numeric Identifier\n// A single `0`, or a non-zero digit followed by zero or more digits.\n\ntok('NUMERICIDENTIFIER')\nsrc[t.NUMERICIDENTIFIER] = '0|[1-9]\\\\d*'\ntok('NUMERICIDENTIFIERLOOSE')\nsrc[t.NUMERICIDENTIFIERLOOSE] = '[0-9]+'\n\n// ## Non-numeric Identifier\n// Zero or more digits, followed by a letter or hyphen, and then zero or\n// more letters, digits, or hyphens.\n\ntok('NONNUMERICIDENTIFIER')\nsrc[t.NONNUMERICIDENTIFIER] = '\\\\d*[a-zA-Z-][a-zA-Z0-9-]*'\n\n// ## Main Version\n// Three dot-separated numeric identifiers.\n\ntok('MAINVERSION')\nsrc[t.MAINVERSION] = '(' + src[t.NUMERICIDENTIFIER] + ')\\\\.' +\n                   '(' + src[t.NUMERICIDENTIFIER] + ')\\\\.' +\n                   '(' + src[t.NUMERICIDENTIFIER] + ')'\n\ntok('MAINVERSIONLOOSE')\nsrc[t.MAINVERSIONLOOSE] = '(' + src[t.NUMERICIDENTIFIERLOOSE] + ')\\\\.' +\n                        '(' + src[t.NUMERICIDENTIFIERLOOSE] + ')\\\\.' +\n                        '(' + src[t.NUMERICIDENTIFIERLOOSE] + ')'\n\n// ## Pre-release Version Identifier\n// A numeric identifier, or a non-numeric identifier.\n\ntok('PRERELEASEIDENTIFIER')\nsrc[t.PRERELEASEIDENTIFIER] = '(?:' + src[t.NUMERICIDENTIFIER] +\n                            '|' + src[t.NONNUMERICIDENTIFIER] + ')'\n\ntok('PRERELEASEIDENTIFIERLOOSE')\nsrc[t.PRERELEASEIDENTIFIERLOOSE] = '(?:' + src[t.NUMERICIDENTIFIERLOOSE] +\n                                 '|' + src[t.NONNUMERICIDENTIFIER] + ')'\n\n// ## Pre-release Version\n// Hyphen, followed by one or more dot-separated pre-release version\n// identifiers.\n\ntok('PRERELEASE')\nsrc[t.PRERELEASE] = '(?:-(' + src[t.PRERELEASEIDENTIFIER] +\n                  '(?:\\\\.' + src[t.PRERELEASEIDENTIFIER] + ')*))'\n\ntok('PRERELEASELOOSE')\nsrc[t.PRERELEASELOOSE] = '(?:-?(' + src[t.PRERELEASEIDENTIFIERLOOSE] +\n                       '(?:\\\\.' + src[t.PRERELEASEIDENTIFIERLOOSE] + ')*))'\n\n// ## Build Metadata Identifier\n// Any combination of digits, letters, or hyphens.\n\ntok('BUILDIDENTIFIER')\nsrc[t.BUILDIDENTIFIER] = '[0-9A-Za-z-]+'\n\n// ## Build Metadata\n// Plus sign, followed by one or more period-separated build metadata\n// identifiers.\n\ntok('BUILD')\nsrc[t.BUILD] = '(?:\\\\+(' + src[t.BUILDIDENTIFIER] +\n             '(?:\\\\.' + src[t.BUILDIDENTIFIER] + ')*))'\n\n// ## Full Version String\n// A main version, followed optionally by a pre-release version and\n// build metadata.\n\n// Note that the only major, minor, patch, and pre-release sections of\n// the version string are capturing groups.  The build metadata is not a\n// capturing group, because it should not ever be used in version\n// comparison.\n\ntok('FULL')\ntok('FULLPLAIN')\nsrc[t.FULLPLAIN] = 'v?' + src[t.MAINVERSION] +\n                  src[t.PRERELEASE] + '?' +\n                  src[t.BUILD] + '?'\n\nsrc[t.FULL] = '^' + src[t.FULLPLAIN] + '$'\n\n// like full, but allows v1.2.3 and =1.2.3, which people do sometimes.\n// also, 1.0.0alpha1 (prerelease without the hyphen) which is pretty\n// common in the npm registry.\ntok('LOOSEPLAIN')\nsrc[t.LOOSEPLAIN] = '[v=\\\\s]*' + src[t.MAINVERSIONLOOSE] +\n                  src[t.PRERELEASELOOSE] + '?' +\n                  src[t.BUILD] + '?'\n\ntok('LOOSE')\nsrc[t.LOOSE] = '^' + src[t.LOOSEPLAIN] + '$'\n\ntok('GTLT')\nsrc[t.GTLT] = '((?:<|>)?=?)'\n\n// Something like \"2.*\" or \"1.2.x\".\n// Note that \"x.x\" is a valid xRange identifer, meaning \"any version\"\n// Only the first item is strictly required.\ntok('XRANGEIDENTIFIERLOOSE')\nsrc[t.XRANGEIDENTIFIERLOOSE] = src[t.NUMERICIDENTIFIERLOOSE] + '|x|X|\\\\*'\ntok('XRANGEIDENTIFIER')\nsrc[t.XRANGEIDENTIFIER] = src[t.NUMERICIDENTIFIER] + '|x|X|\\\\*'\n\ntok('XRANGEPLAIN')\nsrc[t.XRANGEPLAIN] = '[v=\\\\s]*(' + src[t.XRANGEIDENTIFIER] + ')' +\n                   '(?:\\\\.(' + src[t.XRANGEIDENTIFIER] + ')' +\n                   '(?:\\\\.(' + src[t.XRANGEIDENTIFIER] + ')' +\n                   '(?:' + src[t.PRERELEASE] + ')?' +\n                   src[t.BUILD] + '?' +\n                   ')?)?'\n\ntok('XRANGEPLAINLOOSE')\nsrc[t.XRANGEPLAINLOOSE] = '[v=\\\\s]*(' + src[t.XRANGEIDENTIFIERLOOSE] + ')' +\n                        '(?:\\\\.(' + src[t.XRANGEIDENTIFIERLOOSE] + ')' +\n                        '(?:\\\\.(' + src[t.XRANGEIDENTIFIERLOOSE] + ')' +\n                        '(?:' + src[t.PRERELEASELOOSE] + ')?' +\n                        src[t.BUILD] + '?' +\n                        ')?)?'\n\ntok('XRANGE')\nsrc[t.XRANGE] = '^' + src[t.GTLT] + '\\\\s*' + src[t.XRANGEPLAIN] + '$'\ntok('XRANGELOOSE')\nsrc[t.XRANGELOOSE] = '^' + src[t.GTLT] + '\\\\s*' + src[t.XRANGEPLAINLOOSE] + '$'\n\n// Coercion.\n// Extract anything that could conceivably be a part of a valid semver\ntok('COERCE')\nsrc[t.COERCE] = '(^|[^\\\\d])' +\n              '(\\\\d{1,' + MAX_SAFE_COMPONENT_LENGTH + '})' +\n              '(?:\\\\.(\\\\d{1,' + MAX_SAFE_COMPONENT_LENGTH + '}))?' +\n              '(?:\\\\.(\\\\d{1,' + MAX_SAFE_COMPONENT_LENGTH + '}))?' +\n              '(?:$|[^\\\\d])'\ntok('COERCERTL')\nre[t.COERCERTL] = new RegExp(src[t.COERCE], 'g')\n\n// Tilde ranges.\n// Meaning is \"reasonably at or greater than\"\ntok('LONETILDE')\nsrc[t.LONETILDE] = '(?:~>?)'\n\ntok('TILDETRIM')\nsrc[t.TILDETRIM] = '(\\\\s*)' + src[t.LONETILDE] + '\\\\s+'\nre[t.TILDETRIM] = new RegExp(src[t.TILDETRIM], 'g')\nvar tildeTrimReplace = '$1~'\n\ntok('TILDE')\nsrc[t.TILDE] = '^' + src[t.LONETILDE] + src[t.XRANGEPLAIN] + '$'\ntok('TILDELOOSE')\nsrc[t.TILDELOOSE] = '^' + src[t.LONETILDE] + src[t.XRANGEPLAINLOOSE] + '$'\n\n// Caret ranges.\n// Meaning is \"at least and backwards compatible with\"\ntok('LONECARET')\nsrc[t.LONECARET] = '(?:\\\\^)'\n\ntok('CARETTRIM')\nsrc[t.CARETTRIM] = '(\\\\s*)' + src[t.LONECARET] + '\\\\s+'\nre[t.CARETTRIM] = new RegExp(src[t.CARETTRIM], 'g')\nvar caretTrimReplace = '$1^'\n\ntok('CARET')\nsrc[t.CARET] = '^' + src[t.LONECARET] + src[t.XRANGEPLAIN] + '$'\ntok('CARETLOOSE')\nsrc[t.CARETLOOSE] = '^' + src[t.LONECARET] + src[t.XRANGEPLAINLOOSE] + '$'\n\n// A simple gt/lt/eq thing, or just \"\" to indicate \"any version\"\ntok('COMPARATORLOOSE')\nsrc[t.COMPARATORLOOSE] = '^' + src[t.GTLT] + '\\\\s*(' + src[t.LOOSEPLAIN] + ')$|^$'\ntok('COMPARATOR')\nsrc[t.COMPARATOR] = '^' + src[t.GTLT] + '\\\\s*(' + src[t.FULLPLAIN] + ')$|^$'\n\n// An expression to strip any whitespace between the gtlt and the thing\n// it modifies, so that `> 1.2.3` ==> `>1.2.3`\ntok('COMPARATORTRIM')\nsrc[t.COMPARATORTRIM] = '(\\\\s*)' + src[t.GTLT] +\n                      '\\\\s*(' + src[t.LOOSEPLAIN] + '|' + src[t.XRANGEPLAIN] + ')'\n\n// this one has to use the /g flag\nre[t.COMPARATORTRIM] = new RegExp(src[t.COMPARATORTRIM], 'g')\nvar comparatorTrimReplace = '$1$2$3'\n\n// Something like `1.2.3 - 1.2.4`\n// Note that these all use the loose form, because they'll be\n// checked against either the strict or loose comparator form\n// later.\ntok('HYPHENRANGE')\nsrc[t.HYPHENRANGE] = '^\\\\s*(' + src[t.XRANGEPLAIN] + ')' +\n                   '\\\\s+-\\\\s+' +\n                   '(' + src[t.XRANGEPLAIN] + ')' +\n                   '\\\\s*$'\n\ntok('HYPHENRANGELOOSE')\nsrc[t.HYPHENRANGELOOSE] = '^\\\\s*(' + src[t.XRANGEPLAINLOOSE] + ')' +\n                        '\\\\s+-\\\\s+' +\n                        '(' + src[t.XRANGEPLAINLOOSE] + ')' +\n                        '\\\\s*$'\n\n// Star ranges basically just allow anything at all.\ntok('STAR')\nsrc[t.STAR] = '(<|>)?=?\\\\s*\\\\*'\n\n// Compile to actual regexp objects.\n// All are flag-free, unless they were created above with a flag.\nfor (var i = 0; i < R; i++) {\n  debug(i, src[i])\n  if (!re[i]) {\n    re[i] = new RegExp(src[i])\n  }\n}\n\nexports.parse = parse\nfunction parse (version, options) {\n  if (!options || typeof options !== 'object') {\n    options = {\n      loose: !!options,\n      includePrerelease: false\n    }\n  }\n\n  if (version instanceof SemVer) {\n    return version\n  }\n\n  if (typeof version !== 'string') {\n    return null\n  }\n\n  if (version.length > MAX_LENGTH) {\n    return null\n  }\n\n  var r = options.loose ? re[t.LOOSE] : re[t.FULL]\n  if (!r.test(version)) {\n    return null\n  }\n\n  try {\n    return new SemVer(version, options)\n  } catch (er) {\n    return null\n  }\n}\n\nexports.valid = valid\nfunction valid (version, options) {\n  var v = parse(version, options)\n  return v ? v.version : null\n}\n\nexports.clean = clean\nfunction clean (version, options) {\n  var s = parse(version.trim().replace(/^[=v]+/, ''), options)\n  return s ? s.version : null\n}\n\nexports.SemVer = SemVer\n\nfunction SemVer (version, options) {\n  if (!options || typeof options !== 'object') {\n    options = {\n      loose: !!options,\n      includePrerelease: false\n    }\n  }\n  if (version instanceof SemVer) {\n    if (version.loose === options.loose) {\n      return version\n    } else {\n      version = version.version\n    }\n  } else if (typeof version !== 'string') {\n    throw new TypeError('Invalid Version: ' + version)\n  }\n\n  if (version.length > MAX_LENGTH) {\n    throw new TypeError('version is longer than ' + MAX_LENGTH + ' characters')\n  }\n\n  if (!(this instanceof SemVer)) {\n    return new SemVer(version, options)\n  }\n\n  debug('SemVer', version, options)\n  this.options = options\n  this.loose = !!options.loose\n\n  var m = version.trim().match(options.loose ? re[t.LOOSE] : re[t.FULL])\n\n  if (!m) {\n    throw new TypeError('Invalid Version: ' + version)\n  }\n\n  this.raw = version\n\n  // these are actually numbers\n  this.major = +m[1]\n  this.minor = +m[2]\n  this.patch = +m[3]\n\n  if (this.major > MAX_SAFE_INTEGER || this.major < 0) {\n    throw new TypeError('Invalid major version')\n  }\n\n  if (this.minor > MAX_SAFE_INTEGER || this.minor < 0) {\n    throw new TypeError('Invalid minor version')\n  }\n\n  if (this.patch > MAX_SAFE_INTEGER || this.patch < 0) {\n    throw new TypeError('Invalid patch version')\n  }\n\n  // numberify any prerelease numeric ids\n  if (!m[4]) {\n    this.prerelease = []\n  } else {\n    this.prerelease = m[4].split('.').map(function (id) {\n      if (/^[0-9]+$/.test(id)) {\n        var num = +id\n        if (num >= 0 && num < MAX_SAFE_INTEGER) {\n          return num\n        }\n      }\n      return id\n    })\n  }\n\n  this.build = m[5] ? m[5].split('.') : []\n  this.format()\n}\n\nSemVer.prototype.format = function () {\n  this.version = this.major + '.' + this.minor + '.' + this.patch\n  if (this.prerelease.length) {\n    this.version += '-' + this.prerelease.join('.')\n  }\n  return this.version\n}\n\nSemVer.prototype.toString = function () {\n  return this.version\n}\n\nSemVer.prototype.compare = function (other) {\n  debug('SemVer.compare', this.version, this.options, other)\n  if (!(other instanceof SemVer)) {\n    other = new SemVer(other, this.options)\n  }\n\n  return this.compareMain(other) || this.comparePre(other)\n}\n\nSemVer.prototype.compareMain = function (other) {\n  if (!(other instanceof SemVer)) {\n    other = new SemVer(other, this.options)\n  }\n\n  return compareIdentifiers(this.major, other.major) ||\n         compareIdentifiers(this.minor, other.minor) ||\n         compareIdentifiers(this.patch, other.patch)\n}\n\nSemVer.prototype.comparePre = function (other) {\n  if (!(other instanceof SemVer)) {\n    other = new SemVer(other, this.options)\n  }\n\n  // NOT having a prerelease is > having one\n  if (this.prerelease.length && !other.prerelease.length) {\n    return -1\n  } else if (!this.prerelease.length && other.prerelease.length) {\n    return 1\n  } else if (!this.prerelease.length && !other.prerelease.length) {\n    return 0\n  }\n\n  var i = 0\n  do {\n    var a = this.prerelease[i]\n    var b = other.prerelease[i]\n    debug('prerelease compare', i, a, b)\n    if (a === undefined && b === undefined) {\n      return 0\n    } else if (b === undefined) {\n      return 1\n    } else if (a === undefined) {\n      return -1\n    } else if (a === b) {\n      continue\n    } else {\n      return compareIdentifiers(a, b)\n    }\n  } while (++i)\n}\n\nSemVer.prototype.compareBuild = function (other) {\n  if (!(other instanceof SemVer)) {\n    other = new SemVer(other, this.options)\n  }\n\n  var i = 0\n  do {\n    var a = this.build[i]\n    var b = other.build[i]\n    debug('prerelease compare', i, a, b)\n    if (a === undefined && b === undefined) {\n      return 0\n    } else if (b === undefined) {\n      return 1\n    } else if (a === undefined) {\n      return -1\n    } else if (a === b) {\n      continue\n    } else {\n      return compareIdentifiers(a, b)\n    }\n  } while (++i)\n}\n\n// preminor will bump the version up to the next minor release, and immediately\n// down to pre-release. premajor and prepatch work the same way.\nSemVer.prototype.inc = function (release, identifier) {\n  switch (release) {\n    case 'premajor':\n      this.prerelease.length = 0\n      this.patch = 0\n      this.minor = 0\n      this.major++\n      this.inc('pre', identifier)\n      break\n    case 'preminor':\n      this.prerelease.length = 0\n      this.patch = 0\n      this.minor++\n      this.inc('pre', identifier)\n      break\n    case 'prepatch':\n      // If this is already a prerelease, it will bump to the next version\n      // drop any prereleases that might already exist, since they are not\n      // relevant at this point.\n      this.prerelease.length = 0\n      this.inc('patch', identifier)\n      this.inc('pre', identifier)\n      break\n    // If the input is a non-prerelease version, this acts the same as\n    // prepatch.\n    case 'prerelease':\n      if (this.prerelease.length === 0) {\n        this.inc('patch', identifier)\n      }\n      this.inc('pre', identifier)\n      break\n\n    case 'major':\n      // If this is a pre-major version, bump up to the same major version.\n      // Otherwise increment major.\n      // 1.0.0-5 bumps to 1.0.0\n      // 1.1.0 bumps to 2.0.0\n      if (this.minor !== 0 ||\n          this.patch !== 0 ||\n          this.prerelease.length === 0) {\n        this.major++\n      }\n      this.minor = 0\n      this.patch = 0\n      this.prerelease = []\n      break\n    case 'minor':\n      // If this is a pre-minor version, bump up to the same minor version.\n      // Otherwise increment minor.\n      // 1.2.0-5 bumps to 1.2.0\n      // 1.2.1 bumps to 1.3.0\n      if (this.patch !== 0 || this.prerelease.length === 0) {\n        this.minor++\n      }\n      this.patch = 0\n      this.prerelease = []\n      break\n    case 'patch':\n      // If this is not a pre-release version, it will increment the patch.\n      // If it is a pre-release it will bump up to the same patch version.\n      // 1.2.0-5 patches to 1.2.0\n      // 1.2.0 patches to 1.2.1\n      if (this.prerelease.length === 0) {\n        this.patch++\n      }\n      this.prerelease = []\n      break\n    // This probably shouldn't be used publicly.\n    // 1.0.0 \"pre\" would become 1.0.0-0 which is the wrong direction.\n    case 'pre':\n      if (this.prerelease.length === 0) {\n        this.prerelease = [0]\n      } else {\n        var i = this.prerelease.length\n        while (--i >= 0) {\n          if (typeof this.prerelease[i] === 'number') {\n            this.prerelease[i]++\n            i = -2\n          }\n        }\n        if (i === -1) {\n          // didn't increment anything\n          this.prerelease.push(0)\n        }\n      }\n      if (identifier) {\n        // 1.2.0-beta.1 bumps to 1.2.0-beta.2,\n        // 1.2.0-beta.fooblz or 1.2.0-beta bumps to 1.2.0-beta.0\n        if (this.prerelease[0] === identifier) {\n          if (isNaN(this.prerelease[1])) {\n            this.prerelease = [identifier, 0]\n          }\n        } else {\n          this.prerelease = [identifier, 0]\n        }\n      }\n      break\n\n    default:\n      throw new Error('invalid increment argument: ' + release)\n  }\n  this.format()\n  this.raw = this.version\n  return this\n}\n\nexports.inc = inc\nfunction inc (version, release, loose, identifier) {\n  if (typeof (loose) === 'string') {\n    identifier = loose\n    loose = undefined\n  }\n\n  try {\n    return new SemVer(version, loose).inc(release, identifier).version\n  } catch (er) {\n    return null\n  }\n}\n\nexports.diff = diff\nfunction diff (version1, version2) {\n  if (eq(version1, version2)) {\n    return null\n  } else {\n    var v1 = parse(version1)\n    var v2 = parse(version2)\n    var prefix = ''\n    if (v1.prerelease.length || v2.prerelease.length) {\n      prefix = 'pre'\n      var defaultResult = 'prerelease'\n    }\n    for (var key in v1) {\n      if (key === 'major' || key === 'minor' || key === 'patch') {\n        if (v1[key] !== v2[key]) {\n          return prefix + key\n        }\n      }\n    }\n    return defaultResult // may be undefined\n  }\n}\n\nexports.compareIdentifiers = compareIdentifiers\n\nvar numeric = /^[0-9]+$/\nfunction compareIdentifiers (a, b) {\n  var anum = numeric.test(a)\n  var bnum = numeric.test(b)\n\n  if (anum && bnum) {\n    a = +a\n    b = +b\n  }\n\n  return a === b ? 0\n    : (anum && !bnum) ? -1\n    : (bnum && !anum) ? 1\n    : a < b ? -1\n    : 1\n}\n\nexports.rcompareIdentifiers = rcompareIdentifiers\nfunction rcompareIdentifiers (a, b) {\n  return compareIdentifiers(b, a)\n}\n\nexports.major = major\nfunction major (a, loose) {\n  return new SemVer(a, loose).major\n}\n\nexports.minor = minor\nfunction minor (a, loose) {\n  return new SemVer(a, loose).minor\n}\n\nexports.patch = patch\nfunction patch (a, loose) {\n  return new SemVer(a, loose).patch\n}\n\nexports.compare = compare\nfunction compare (a, b, loose) {\n  return new SemVer(a, loose).compare(new SemVer(b, loose))\n}\n\nexports.compareLoose = compareLoose\nfunction compareLoose (a, b) {\n  return compare(a, b, true)\n}\n\nexports.compareBuild = compareBuild\nfunction compareBuild (a, b, loose) {\n  var versionA = new SemVer(a, loose)\n  var versionB = new SemVer(b, loose)\n  return versionA.compare(versionB) || versionA.compareBuild(versionB)\n}\n\nexports.rcompare = rcompare\nfunction rcompare (a, b, loose) {\n  return compare(b, a, loose)\n}\n\nexports.sort = sort\nfunction sort (list, loose) {\n  return list.sort(function (a, b) {\n    return exports.compareBuild(a, b, loose)\n  })\n}\n\nexports.rsort = rsort\nfunction rsort (list, loose) {\n  return list.sort(function (a, b) {\n    return exports.compareBuild(b, a, loose)\n  })\n}\n\nexports.gt = gt\nfunction gt (a, b, loose) {\n  return compare(a, b, loose) > 0\n}\n\nexports.lt = lt\nfunction lt (a, b, loose) {\n  return compare(a, b, loose) < 0\n}\n\nexports.eq = eq\nfunction eq (a, b, loose) {\n  return compare(a, b, loose) === 0\n}\n\nexports.neq = neq\nfunction neq (a, b, loose) {\n  return compare(a, b, loose) !== 0\n}\n\nexports.gte = gte\nfunction gte (a, b, loose) {\n  return compare(a, b, loose) >= 0\n}\n\nexports.lte = lte\nfunction lte (a, b, loose) {\n  return compare(a, b, loose) <= 0\n}\n\nexports.cmp = cmp\nfunction cmp (a, op, b, loose) {\n  switch (op) {\n    case '===':\n      if (typeof a === 'object')\n        a = a.version\n      if (typeof b === 'object')\n        b = b.version\n      return a === b\n\n    case '!==':\n      if (typeof a === 'object')\n        a = a.version\n      if (typeof b === 'object')\n        b = b.version\n      return a !== b\n\n    case '':\n    case '=':\n    case '==':\n      return eq(a, b, loose)\n\n    case '!=':\n      return neq(a, b, loose)\n\n    case '>':\n      return gt(a, b, loose)\n\n    case '>=':\n      return gte(a, b, loose)\n\n    case '<':\n      return lt(a, b, loose)\n\n    case '<=':\n      return lte(a, b, loose)\n\n    default:\n      throw new TypeError('Invalid operator: ' + op)\n  }\n}\n\nexports.Comparator = Comparator\nfunction Comparator (comp, options) {\n  if (!options || typeof options !== 'object') {\n    options = {\n      loose: !!options,\n      includePrerelease: false\n    }\n  }\n\n  if (comp instanceof Comparator) {\n    if (comp.loose === !!options.loose) {\n      return comp\n    } else {\n      comp = comp.value\n    }\n  }\n\n  if (!(this instanceof Comparator)) {\n    return new Comparator(comp, options)\n  }\n\n  debug('comparator', comp, options)\n  this.options = options\n  this.loose = !!options.loose\n  this.parse(comp)\n\n  if (this.semver === ANY) {\n    this.value = ''\n  } else {\n    this.value = this.operator + this.semver.version\n  }\n\n  debug('comp', this)\n}\n\nvar ANY = {}\nComparator.prototype.parse = function (comp) {\n  var r = this.options.loose ? re[t.COMPARATORLOOSE] : re[t.COMPARATOR]\n  var m = comp.match(r)\n\n  if (!m) {\n    throw new TypeError('Invalid comparator: ' + comp)\n  }\n\n  this.operator = m[1] !== undefined ? m[1] : ''\n  if (this.operator === '=') {\n    this.operator = ''\n  }\n\n  // if it literally is just '>' or '' then allow anything.\n  if (!m[2]) {\n    this.semver = ANY\n  } else {\n    this.semver = new SemVer(m[2], this.options.loose)\n  }\n}\n\nComparator.prototype.toString = function () {\n  return this.value\n}\n\nComparator.prototype.test = function (version) {\n  debug('Comparator.test', version, this.options.loose)\n\n  if (this.semver === ANY || version === ANY) {\n    return true\n  }\n\n  if (typeof version === 'string') {\n    try {\n      version = new SemVer(version, this.options)\n    } catch (er) {\n      return false\n    }\n  }\n\n  return cmp(version, this.operator, this.semver, this.options)\n}\n\nComparator.prototype.intersects = function (comp, options) {\n  if (!(comp instanceof Comparator)) {\n    throw new TypeError('a Comparator is required')\n  }\n\n  if (!options || typeof options !== 'object') {\n    options = {\n      loose: !!options,\n      includePrerelease: false\n    }\n  }\n\n  var rangeTmp\n\n  if (this.operator === '') {\n    if (this.value === '') {\n      return true\n    }\n    rangeTmp = new Range(comp.value, options)\n    return satisfies(this.value, rangeTmp, options)\n  } else if (comp.operator === '') {\n    if (comp.value === '') {\n      return true\n    }\n    rangeTmp = new Range(this.value, options)\n    return satisfies(comp.semver, rangeTmp, options)\n  }\n\n  var sameDirectionIncreasing =\n    (this.operator === '>=' || this.operator === '>') &&\n    (comp.operator === '>=' || comp.operator === '>')\n  var sameDirectionDecreasing =\n    (this.operator === '<=' || this.operator === '<') &&\n    (comp.operator === '<=' || comp.operator === '<')\n  var sameSemVer = this.semver.version === comp.semver.version\n  var differentDirectionsInclusive =\n    (this.operator === '>=' || this.operator === '<=') &&\n    (comp.operator === '>=' || comp.operator === '<=')\n  var oppositeDirectionsLessThan =\n    cmp(this.semver, '<', comp.semver, options) &&\n    ((this.operator === '>=' || this.operator === '>') &&\n    (comp.operator === '<=' || comp.operator === '<'))\n  var oppositeDirectionsGreaterThan =\n    cmp(this.semver, '>', comp.semver, options) &&\n    ((this.operator === '<=' || this.operator === '<') &&\n    (comp.operator === '>=' || comp.operator === '>'))\n\n  return sameDirectionIncreasing || sameDirectionDecreasing ||\n    (sameSemVer && differentDirectionsInclusive) ||\n    oppositeDirectionsLessThan || oppositeDirectionsGreaterThan\n}\n\nexports.Range = Range\nfunction Range (range, options) {\n  if (!options || typeof options !== 'object') {\n    options = {\n      loose: !!options,\n      includePrerelease: false\n    }\n  }\n\n  if (range instanceof Range) {\n    if (range.loose === !!options.loose &&\n        range.includePrerelease === !!options.includePrerelease) {\n      return range\n    } else {\n      return new Range(range.raw, options)\n    }\n  }\n\n  if (range instanceof Comparator) {\n    return new Range(range.value, options)\n  }\n\n  if (!(this instanceof Range)) {\n    return new Range(range, options)\n  }\n\n  this.options = options\n  this.loose = !!options.loose\n  this.includePrerelease = !!options.includePrerelease\n\n  // First, split based on boolean or ||\n  this.raw = range\n  this.set = range.split(/\\s*\\|\\|\\s*/).map(function (range) {\n    return this.parseRange(range.trim())\n  }, this).filter(function (c) {\n    // throw out any that are not relevant for whatever reason\n    return c.length\n  })\n\n  if (!this.set.length) {\n    throw new TypeError('Invalid SemVer Range: ' + range)\n  }\n\n  this.format()\n}\n\nRange.prototype.format = function () {\n  this.range = this.set.map(function (comps) {\n    return comps.join(' ').trim()\n  }).join('||').trim()\n  return this.range\n}\n\nRange.prototype.toString = function () {\n  return this.range\n}\n\nRange.prototype.parseRange = function (range) {\n  var loose = this.options.loose\n  range = range.trim()\n  // `1.2.3 - 1.2.4` => `>=1.2.3 <=1.2.4`\n  var hr = loose ? re[t.HYPHENRANGELOOSE] : re[t.HYPHENRANGE]\n  range = range.replace(hr, hyphenReplace)\n  debug('hyphen replace', range)\n  // `> 1.2.3 < 1.2.5` => `>1.2.3 <1.2.5`\n  range = range.replace(re[t.COMPARATORTRIM], comparatorTrimReplace)\n  debug('comparator trim', range, re[t.COMPARATORTRIM])\n\n  // `~ 1.2.3` => `~1.2.3`\n  range = range.replace(re[t.TILDETRIM], tildeTrimReplace)\n\n  // `^ 1.2.3` => `^1.2.3`\n  range = range.replace(re[t.CARETTRIM], caretTrimReplace)\n\n  // normalize spaces\n  range = range.split(/\\s+/).join(' ')\n\n  // At this point, the range is completely trimmed and\n  // ready to be split into comparators.\n\n  var compRe = loose ? re[t.COMPARATORLOOSE] : re[t.COMPARATOR]\n  var set = range.split(' ').map(function (comp) {\n    return parseComparator(comp, this.options)\n  }, this).join(' ').split(/\\s+/)\n  if (this.options.loose) {\n    // in loose mode, throw out any that are not valid comparators\n    set = set.filter(function (comp) {\n      return !!comp.match(compRe)\n    })\n  }\n  set = set.map(function (comp) {\n    return new Comparator(comp, this.options)\n  }, this)\n\n  return set\n}\n\nRange.prototype.intersects = function (range, options) {\n  if (!(range instanceof Range)) {\n    throw new TypeError('a Range is required')\n  }\n\n  return this.set.some(function (thisComparators) {\n    return (\n      isSatisfiable(thisComparators, options) &&\n      range.set.some(function (rangeComparators) {\n        return (\n          isSatisfiable(rangeComparators, options) &&\n          thisComparators.every(function (thisComparator) {\n            return rangeComparators.every(function (rangeComparator) {\n              return thisComparator.intersects(rangeComparator, options)\n            })\n          })\n        )\n      })\n    )\n  })\n}\n\n// take a set of comparators and determine whether there\n// exists a version which can satisfy it\nfunction isSatisfiable (comparators, options) {\n  var result = true\n  var remainingComparators = comparators.slice()\n  var testComparator = remainingComparators.pop()\n\n  while (result && remainingComparators.length) {\n    result = remainingComparators.every(function (otherComparator) {\n      return testComparator.intersects(otherComparator, options)\n    })\n\n    testComparator = remainingComparators.pop()\n  }\n\n  return result\n}\n\n// Mostly just for testing and legacy API reasons\nexports.toComparators = toComparators\nfunction toComparators (range, options) {\n  return new Range(range, options).set.map(function (comp) {\n    return comp.map(function (c) {\n      return c.value\n    }).join(' ').trim().split(' ')\n  })\n}\n\n// comprised of xranges, tildes, stars, and gtlt's at this point.\n// already replaced the hyphen ranges\n// turn into a set of JUST comparators.\nfunction parseComparator (comp, options) {\n  debug('comp', comp, options)\n  comp = replaceCarets(comp, options)\n  debug('caret', comp)\n  comp = replaceTildes(comp, options)\n  debug('tildes', comp)\n  comp = replaceXRanges(comp, options)\n  debug('xrange', comp)\n  comp = replaceStars(comp, options)\n  debug('stars', comp)\n  return comp\n}\n\nfunction isX (id) {\n  return !id || id.toLowerCase() === 'x' || id === '*'\n}\n\n// ~, ~> --> * (any, kinda silly)\n// ~2, ~2.x, ~2.x.x, ~>2, ~>2.x ~>2.x.x --> >=2.0.0 <3.0.0\n// ~2.0, ~2.0.x, ~>2.0, ~>2.0.x --> >=2.0.0 <2.1.0\n// ~1.2, ~1.2.x, ~>1.2, ~>1.2.x --> >=1.2.0 <1.3.0\n// ~1.2.3, ~>1.2.3 --> >=1.2.3 <1.3.0\n// ~1.2.0, ~>1.2.0 --> >=1.2.0 <1.3.0\nfunction replaceTildes (comp, options) {\n  return comp.trim().split(/\\s+/).map(function (comp) {\n    return replaceTilde(comp, options)\n  }).join(' ')\n}\n\nfunction replaceTilde (comp, options) {\n  var r = options.loose ? re[t.TILDELOOSE] : re[t.TILDE]\n  return comp.replace(r, function (_, M, m, p, pr) {\n    debug('tilde', comp, _, M, m, p, pr)\n    var ret\n\n    if (isX(M)) {\n      ret = ''\n    } else if (isX(m)) {\n      ret = '>=' + M + '.0.0 <' + (+M + 1) + '.0.0'\n    } else if (isX(p)) {\n      // ~1.2 == >=1.2.0 <1.3.0\n      ret = '>=' + M + '.' + m + '.0 <' + M + '.' + (+m + 1) + '.0'\n    } else if (pr) {\n      debug('replaceTilde pr', pr)\n      ret = '>=' + M + '.' + m + '.' + p + '-' + pr +\n            ' <' + M + '.' + (+m + 1) + '.0'\n    } else {\n      // ~1.2.3 == >=1.2.3 <1.3.0\n      ret = '>=' + M + '.' + m + '.' + p +\n            ' <' + M + '.' + (+m + 1) + '.0'\n    }\n\n    debug('tilde return', ret)\n    return ret\n  })\n}\n\n// ^ --> * (any, kinda silly)\n// ^2, ^2.x, ^2.x.x --> >=2.0.0 <3.0.0\n// ^2.0, ^2.0.x --> >=2.0.0 <3.0.0\n// ^1.2, ^1.2.x --> >=1.2.0 <2.0.0\n// ^1.2.3 --> >=1.2.3 <2.0.0\n// ^1.2.0 --> >=1.2.0 <2.0.0\nfunction replaceCarets (comp, options) {\n  return comp.trim().split(/\\s+/).map(function (comp) {\n    return replaceCaret(comp, options)\n  }).join(' ')\n}\n\nfunction replaceCaret (comp, options) {\n  debug('caret', comp, options)\n  var r = options.loose ? re[t.CARETLOOSE] : re[t.CARET]\n  return comp.replace(r, function (_, M, m, p, pr) {\n    debug('caret', comp, _, M, m, p, pr)\n    var ret\n\n    if (isX(M)) {\n      ret = ''\n    } else if (isX(m)) {\n      ret = '>=' + M + '.0.0 <' + (+M + 1) + '.0.0'\n    } else if (isX(p)) {\n      if (M === '0') {\n        ret = '>=' + M + '.' + m + '.0 <' + M + '.' + (+m + 1) + '.0'\n      } else {\n        ret = '>=' + M + '.' + m + '.0 <' + (+M + 1) + '.0.0'\n      }\n    } else if (pr) {\n      debug('replaceCaret pr', pr)\n      if (M === '0') {\n        if (m === '0') {\n          ret = '>=' + M + '.' + m + '.' + p + '-' + pr +\n                ' <' + M + '.' + m + '.' + (+p + 1)\n        } else {\n          ret = '>=' + M + '.' + m + '.' + p + '-' + pr +\n                ' <' + M + '.' + (+m + 1) + '.0'\n        }\n      } else {\n        ret = '>=' + M + '.' + m + '.' + p + '-' + pr +\n              ' <' + (+M + 1) + '.0.0'\n      }\n    } else {\n      debug('no pr')\n      if (M === '0') {\n        if (m === '0') {\n          ret = '>=' + M + '.' + m + '.' + p +\n                ' <' + M + '.' + m + '.' + (+p + 1)\n        } else {\n          ret = '>=' + M + '.' + m + '.' + p +\n                ' <' + M + '.' + (+m + 1) + '.0'\n        }\n      } else {\n        ret = '>=' + M + '.' + m + '.' + p +\n              ' <' + (+M + 1) + '.0.0'\n      }\n    }\n\n    debug('caret return', ret)\n    return ret\n  })\n}\n\nfunction replaceXRanges (comp, options) {\n  debug('replaceXRanges', comp, options)\n  return comp.split(/\\s+/).map(function (comp) {\n    return replaceXRange(comp, options)\n  }).join(' ')\n}\n\nfunction replaceXRange (comp, options) {\n  comp = comp.trim()\n  var r = options.loose ? re[t.XRANGELOOSE] : re[t.XRANGE]\n  return comp.replace(r, function (ret, gtlt, M, m, p, pr) {\n    debug('xRange', comp, ret, gtlt, M, m, p, pr)\n    var xM = isX(M)\n    var xm = xM || isX(m)\n    var xp = xm || isX(p)\n    var anyX = xp\n\n    if (gtlt === '=' && anyX) {\n      gtlt = ''\n    }\n\n    // if we're including prereleases in the match, then we need\n    // to fix this to -0, the lowest possible prerelease value\n    pr = options.includePrerelease ? '-0' : ''\n\n    if (xM) {\n      if (gtlt === '>' || gtlt === '<') {\n        // nothing is allowed\n        ret = '<0.0.0-0'\n      } else {\n        // nothing is forbidden\n        ret = '*'\n      }\n    } else if (gtlt && anyX) {\n      // we know patch is an x, because we have any x at all.\n      // replace X with 0\n      if (xm) {\n        m = 0\n      }\n      p = 0\n\n      if (gtlt === '>') {\n        // >1 => >=2.0.0\n        // >1.2 => >=1.3.0\n        // >1.2.3 => >= 1.2.4\n        gtlt = '>='\n        if (xm) {\n          M = +M + 1\n          m = 0\n          p = 0\n        } else {\n          m = +m + 1\n          p = 0\n        }\n      } else if (gtlt === '<=') {\n        // <=0.7.x is actually <0.8.0, since any 0.7.x should\n        // pass.  Similarly, <=7.x is actually <8.0.0, etc.\n        gtlt = '<'\n        if (xm) {\n          M = +M + 1\n        } else {\n          m = +m + 1\n        }\n      }\n\n      ret = gtlt + M + '.' + m + '.' + p + pr\n    } else if (xm) {\n      ret = '>=' + M + '.0.0' + pr + ' <' + (+M + 1) + '.0.0' + pr\n    } else if (xp) {\n      ret = '>=' + M + '.' + m + '.0' + pr +\n        ' <' + M + '.' + (+m + 1) + '.0' + pr\n    }\n\n    debug('xRange return', ret)\n\n    return ret\n  })\n}\n\n// Because * is AND-ed with everything else in the comparator,\n// and '' means \"any version\", just remove the *s entirely.\nfunction replaceStars (comp, options) {\n  debug('replaceStars', comp, options)\n  // Looseness is ignored here.  star is always as loose as it gets!\n  return comp.trim().replace(re[t.STAR], '')\n}\n\n// This function is passed to string.replace(re[t.HYPHENRANGE])\n// M, m, patch, prerelease, build\n// 1.2 - 3.4.5 => >=1.2.0 <=3.4.5\n// 1.2.3 - 3.4 => >=1.2.0 <3.5.0 Any 3.4.x will do\n// 1.2 - 3.4 => >=1.2.0 <3.5.0\nfunction hyphenReplace ($0,\n  from, fM, fm, fp, fpr, fb,\n  to, tM, tm, tp, tpr, tb) {\n  if (isX(fM)) {\n    from = ''\n  } else if (isX(fm)) {\n    from = '>=' + fM + '.0.0'\n  } else if (isX(fp)) {\n    from = '>=' + fM + '.' + fm + '.0'\n  } else {\n    from = '>=' + from\n  }\n\n  if (isX(tM)) {\n    to = ''\n  } else if (isX(tm)) {\n    to = '<' + (+tM + 1) + '.0.0'\n  } else if (isX(tp)) {\n    to = '<' + tM + '.' + (+tm + 1) + '.0'\n  } else if (tpr) {\n    to = '<=' + tM + '.' + tm + '.' + tp + '-' + tpr\n  } else {\n    to = '<=' + to\n  }\n\n  return (from + ' ' + to).trim()\n}\n\n// if ANY of the sets match ALL of its comparators, then pass\nRange.prototype.test = function (version) {\n  if (!version) {\n    return false\n  }\n\n  if (typeof version === 'string') {\n    try {\n      version = new SemVer(version, this.options)\n    } catch (er) {\n      return false\n    }\n  }\n\n  for (var i = 0; i < this.set.length; i++) {\n    if (testSet(this.set[i], version, this.options)) {\n      return true\n    }\n  }\n  return false\n}\n\nfunction testSet (set, version, options) {\n  for (var i = 0; i < set.length; i++) {\n    if (!set[i].test(version)) {\n      return false\n    }\n  }\n\n  if (version.prerelease.length && !options.includePrerelease) {\n    // Find the set of versions that are allowed to have prereleases\n    // For example, ^1.2.3-pr.1 desugars to >=1.2.3-pr.1 <2.0.0\n    // That should allow `1.2.3-pr.2` to pass.\n    // However, `1.2.4-alpha.notready` should NOT be allowed,\n    // even though it's within the range set by the comparators.\n    for (i = 0; i < set.length; i++) {\n      debug(set[i].semver)\n      if (set[i].semver === ANY) {\n        continue\n      }\n\n      if (set[i].semver.prerelease.length > 0) {\n        var allowed = set[i].semver\n        if (allowed.major === version.major &&\n            allowed.minor === version.minor &&\n            allowed.patch === version.patch) {\n          return true\n        }\n      }\n    }\n\n    // Version has a -pre, but it's not one of the ones we like.\n    return false\n  }\n\n  return true\n}\n\nexports.satisfies = satisfies\nfunction satisfies (version, range, options) {\n  try {\n    range = new Range(range, options)\n  } catch (er) {\n    return false\n  }\n  return range.test(version)\n}\n\nexports.maxSatisfying = maxSatisfying\nfunction maxSatisfying (versions, range, options) {\n  var max = null\n  var maxSV = null\n  try {\n    var rangeObj = new Range(range, options)\n  } catch (er) {\n    return null\n  }\n  versions.forEach(function (v) {\n    if (rangeObj.test(v)) {\n      // satisfies(v, range, options)\n      if (!max || maxSV.compare(v) === -1) {\n        // compare(max, v, true)\n        max = v\n        maxSV = new SemVer(max, options)\n      }\n    }\n  })\n  return max\n}\n\nexports.minSatisfying = minSatisfying\nfunction minSatisfying (versions, range, options) {\n  var min = null\n  var minSV = null\n  try {\n    var rangeObj = new Range(range, options)\n  } catch (er) {\n    return null\n  }\n  versions.forEach(function (v) {\n    if (rangeObj.test(v)) {\n      // satisfies(v, range, options)\n      if (!min || minSV.compare(v) === 1) {\n        // compare(min, v, true)\n        min = v\n        minSV = new SemVer(min, options)\n      }\n    }\n  })\n  return min\n}\n\nexports.minVersion = minVersion\nfunction minVersion (range, loose) {\n  range = new Range(range, loose)\n\n  var minver = new SemVer('0.0.0')\n  if (range.test(minver)) {\n    return minver\n  }\n\n  minver = new SemVer('0.0.0-0')\n  if (range.test(minver)) {\n    return minver\n  }\n\n  minver = null\n  for (var i = 0; i < range.set.length; ++i) {\n    var comparators = range.set[i]\n\n    comparators.forEach(function (comparator) {\n      // Clone to avoid manipulating the comparator's semver object.\n      var compver = new SemVer(comparator.semver.version)\n      switch (comparator.operator) {\n        case '>':\n          if (compver.prerelease.length === 0) {\n            compver.patch++\n          } else {\n            compver.prerelease.push(0)\n          }\n          compver.raw = compver.format()\n          /* fallthrough */\n        case '':\n        case '>=':\n          if (!minver || gt(minver, compver)) {\n            minver = compver\n          }\n          break\n        case '<':\n        case '<=':\n          /* Ignore maximum versions */\n          break\n        /* istanbul ignore next */\n        default:\n          throw new Error('Unexpected operation: ' + comparator.operator)\n      }\n    })\n  }\n\n  if (minver && range.test(minver)) {\n    return minver\n  }\n\n  return null\n}\n\nexports.validRange = validRange\nfunction validRange (range, options) {\n  try {\n    // Return '*' instead of '' so that truthiness works.\n    // This will throw if it's invalid anyway\n    return new Range(range, options).range || '*'\n  } catch (er) {\n    return null\n  }\n}\n\n// Determine if version is less than all the versions possible in the range\nexports.ltr = ltr\nfunction ltr (version, range, options) {\n  return outside(version, range, '<', options)\n}\n\n// Determine if version is greater than all the versions possible in the range.\nexports.gtr = gtr\nfunction gtr (version, range, options) {\n  return outside(version, range, '>', options)\n}\n\nexports.outside = outside\nfunction outside (version, range, hilo, options) {\n  version = new SemVer(version, options)\n  range = new Range(range, options)\n\n  var gtfn, ltefn, ltfn, comp, ecomp\n  switch (hilo) {\n    case '>':\n      gtfn = gt\n      ltefn = lte\n      ltfn = lt\n      comp = '>'\n      ecomp = '>='\n      break\n    case '<':\n      gtfn = lt\n      ltefn = gte\n      ltfn = gt\n      comp = '<'\n      ecomp = '<='\n      break\n    default:\n      throw new TypeError('Must provide a hilo val of \"<\" or \">\"')\n  }\n\n  // If it satisifes the range it is not outside\n  if (satisfies(version, range, options)) {\n    return false\n  }\n\n  // From now on, variable terms are as if we're in \"gtr\" mode.\n  // but note that everything is flipped for the \"ltr\" function.\n\n  for (var i = 0; i < range.set.length; ++i) {\n    var comparators = range.set[i]\n\n    var high = null\n    var low = null\n\n    comparators.forEach(function (comparator) {\n      if (comparator.semver === ANY) {\n        comparator = new Comparator('>=0.0.0')\n      }\n      high = high || comparator\n      low = low || comparator\n      if (gtfn(comparator.semver, high.semver, options)) {\n        high = comparator\n      } else if (ltfn(comparator.semver, low.semver, options)) {\n        low = comparator\n      }\n    })\n\n    // If the edge version comparator has a operator then our version\n    // isn't outside it\n    if (high.operator === comp || high.operator === ecomp) {\n      return false\n    }\n\n    // If the lowest version comparator has an operator and our version\n    // is less than it then it isn't higher than the range\n    if ((!low.operator || low.operator === comp) &&\n        ltefn(version, low.semver)) {\n      return false\n    } else if (low.operator === ecomp && ltfn(version, low.semver)) {\n      return false\n    }\n  }\n  return true\n}\n\nexports.prerelease = prerelease\nfunction prerelease (version, options) {\n  var parsed = parse(version, options)\n  return (parsed && parsed.prerelease.length) ? parsed.prerelease : null\n}\n\nexports.intersects = intersects\nfunction intersects (r1, r2, options) {\n  r1 = new Range(r1, options)\n  r2 = new Range(r2, options)\n  return r1.intersects(r2)\n}\n\nexports.coerce = coerce\nfunction coerce (version, options) {\n  if (version instanceof SemVer) {\n    return version\n  }\n\n  if (typeof version === 'number') {\n    version = String(version)\n  }\n\n  if (typeof version !== 'string') {\n    return null\n  }\n\n  options = options || {}\n\n  var match = null\n  if (!options.rtl) {\n    match = version.match(re[t.COERCE])\n  } else {\n    // Find the right-most coercible string that does not share\n    // a terminus with a more left-ward coercible string.\n    // Eg, '1.2.3.4' wants to coerce '2.3.4', not '3.4' or '4'\n    //\n    // Walk through the string checking with a /g regexp\n    // Manually set the index so as to pick up overlapping matches.\n    // Stop when we get a match that ends at the string end, since no\n    // coercible string can be more right-ward without the same terminus.\n    var next\n    while ((next = re[t.COERCERTL].exec(version)) &&\n      (!match || match.index + match[0].length !== version.length)\n    ) {\n      if (!match ||\n          next.index + next[0].length !== match.index + match[0].length) {\n        match = next\n      }\n      re[t.COERCERTL].lastIndex = next.index + next[1].length + next[2].length\n    }\n    // leave it in a clean state\n    re[t.COERCERTL].lastIndex = -1\n  }\n\n  if (match === null) {\n    return null\n  }\n\n  return parse(match[2] +\n    '.' + (match[3] || '0') +\n    '.' + (match[4] || '0'), options)\n}\n", "/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nfunction boolean(value) {\r\n    return value === true || value === false;\r\n}\r\nexports.boolean = boolean;\r\nfunction string(value) {\r\n    return typeof value === 'string' || value instanceof String;\r\n}\r\nexports.string = string;\r\nfunction number(value) {\r\n    return typeof value === 'number' || value instanceof Number;\r\n}\r\nexports.number = number;\r\nfunction error(value) {\r\n    return value instanceof Error;\r\n}\r\nexports.error = error;\r\nfunction func(value) {\r\n    return typeof value === 'function';\r\n}\r\nexports.func = func;\r\nfunction array(value) {\r\n    return Array.isArray(value);\r\n}\r\nexports.array = array;\r\nfunction stringArray(value) {\r\n    return array(value) && value.every(elem => string(elem));\r\n}\r\nexports.stringArray = stringArray;\r\n", "/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst is = require(\"./is\");\r\n/**\r\n * Predefined error codes.\r\n */\r\nvar ErrorCodes;\r\n(function (ErrorCodes) {\r\n    // Defined by JSON RPC\r\n    ErrorCodes.ParseError = -32700;\r\n    ErrorCodes.InvalidRequest = -32600;\r\n    ErrorCodes.MethodNotFound = -32601;\r\n    ErrorCodes.InvalidParams = -32602;\r\n    ErrorCodes.InternalError = -32603;\r\n    ErrorCodes.serverErrorStart = -32099;\r\n    ErrorCodes.serverErrorEnd = -32000;\r\n    ErrorCodes.ServerNotInitialized = -32002;\r\n    ErrorCodes.UnknownErrorCode = -32001;\r\n    // Defined by the protocol.\r\n    ErrorCodes.RequestCancelled = -32800;\r\n    ErrorCodes.ContentModified = -32801;\r\n    // Defined by VSCode library.\r\n    ErrorCodes.MessageWriteError = 1;\r\n    ErrorCodes.MessageReadError = 2;\r\n})(ErrorCodes = exports.ErrorCodes || (exports.ErrorCodes = {}));\r\n/**\r\n * An error object return in a response in case a request\r\n * has failed.\r\n */\r\nclass ResponseError extends Error {\r\n    constructor(code, message, data) {\r\n        super(message);\r\n        this.code = is.number(code) ? code : ErrorCodes.UnknownErrorCode;\r\n        this.data = data;\r\n        Object.setPrototypeOf(this, ResponseError.prototype);\r\n    }\r\n    toJson() {\r\n        return {\r\n            code: this.code,\r\n            message: this.message,\r\n            data: this.data,\r\n        };\r\n    }\r\n}\r\nexports.ResponseError = ResponseError;\r\n/**\r\n * An abstract implementation of a MessageType.\r\n */\r\nclass AbstractMessageType {\r\n    constructor(_method, _numberOfParams) {\r\n        this._method = _method;\r\n        this._numberOfParams = _numberOfParams;\r\n    }\r\n    get method() {\r\n        return this._method;\r\n    }\r\n    get numberOfParams() {\r\n        return this._numberOfParams;\r\n    }\r\n}\r\nexports.AbstractMessageType = AbstractMessageType;\r\n/**\r\n * Classes to type request response pairs\r\n *\r\n * The type parameter RO will be removed in the next major version\r\n * of the JSON RPC library since it is a LSP concept and doesn't\r\n * belong here. For now it is tagged as default never.\r\n */\r\nclass RequestType0 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 0);\r\n    }\r\n}\r\nexports.RequestType0 = RequestType0;\r\nclass RequestType extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 1);\r\n    }\r\n}\r\nexports.RequestType = RequestType;\r\nclass RequestType1 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 1);\r\n    }\r\n}\r\nexports.RequestType1 = RequestType1;\r\nclass RequestType2 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 2);\r\n    }\r\n}\r\nexports.RequestType2 = RequestType2;\r\nclass RequestType3 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 3);\r\n    }\r\n}\r\nexports.RequestType3 = RequestType3;\r\nclass RequestType4 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 4);\r\n    }\r\n}\r\nexports.RequestType4 = RequestType4;\r\nclass RequestType5 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 5);\r\n    }\r\n}\r\nexports.RequestType5 = RequestType5;\r\nclass RequestType6 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 6);\r\n    }\r\n}\r\nexports.RequestType6 = RequestType6;\r\nclass RequestType7 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 7);\r\n    }\r\n}\r\nexports.RequestType7 = RequestType7;\r\nclass RequestType8 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 8);\r\n    }\r\n}\r\nexports.RequestType8 = RequestType8;\r\nclass RequestType9 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 9);\r\n    }\r\n}\r\nexports.RequestType9 = RequestType9;\r\n/**\r\n * The type parameter RO will be removed in the next major version\r\n * of the JSON RPC library since it is a LSP concept and doesn't\r\n * belong here. For now it is tagged as default never.\r\n */\r\nclass NotificationType extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 1);\r\n        this._ = undefined;\r\n    }\r\n}\r\nexports.NotificationType = NotificationType;\r\nclass NotificationType0 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 0);\r\n    }\r\n}\r\nexports.NotificationType0 = NotificationType0;\r\nclass NotificationType1 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 1);\r\n    }\r\n}\r\nexports.NotificationType1 = NotificationType1;\r\nclass NotificationType2 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 2);\r\n    }\r\n}\r\nexports.NotificationType2 = NotificationType2;\r\nclass NotificationType3 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 3);\r\n    }\r\n}\r\nexports.NotificationType3 = NotificationType3;\r\nclass NotificationType4 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 4);\r\n    }\r\n}\r\nexports.NotificationType4 = NotificationType4;\r\nclass NotificationType5 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 5);\r\n    }\r\n}\r\nexports.NotificationType5 = NotificationType5;\r\nclass NotificationType6 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 6);\r\n    }\r\n}\r\nexports.NotificationType6 = NotificationType6;\r\nclass NotificationType7 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 7);\r\n    }\r\n}\r\nexports.NotificationType7 = NotificationType7;\r\nclass NotificationType8 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 8);\r\n    }\r\n}\r\nexports.NotificationType8 = NotificationType8;\r\nclass NotificationType9 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 9);\r\n    }\r\n}\r\nexports.NotificationType9 = NotificationType9;\r\n/**\r\n * Tests if the given message is a request message\r\n */\r\nfunction isRequestMessage(message) {\r\n    let candidate = message;\r\n    return candidate && is.string(candidate.method) && (is.string(candidate.id) || is.number(candidate.id));\r\n}\r\nexports.isRequestMessage = isRequestMessage;\r\n/**\r\n * Tests if the given message is a notification message\r\n */\r\nfunction isNotificationMessage(message) {\r\n    let candidate = message;\r\n    return candidate && is.string(candidate.method) && message.id === void 0;\r\n}\r\nexports.isNotificationMessage = isNotificationMessage;\r\n/**\r\n * Tests if the given message is a response message\r\n */\r\nfunction isResponseMessage(message) {\r\n    let candidate = message;\r\n    return candidate && (candidate.result !== void 0 || !!candidate.error) && (is.string(candidate.id) || is.number(candidate.id) || candidate.id === null);\r\n}\r\nexports.isResponseMessage = isResponseMessage;\r\n", "/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Disposable;\r\n(function (Disposable) {\r\n    function create(func) {\r\n        return {\r\n            dispose: func\r\n        };\r\n    }\r\n    Disposable.create = create;\r\n})(Disposable = exports.Disposable || (exports.Disposable = {}));\r\nvar Event;\r\n(function (Event) {\r\n    const _disposable = { dispose() { } };\r\n    Event.None = function () { return _disposable; };\r\n})(Event = exports.Event || (exports.Event = {}));\r\nclass CallbackList {\r\n    add(callback, context = null, bucket) {\r\n        if (!this._callbacks) {\r\n            this._callbacks = [];\r\n            this._contexts = [];\r\n        }\r\n        this._callbacks.push(callback);\r\n        this._contexts.push(context);\r\n        if (Array.isArray(bucket)) {\r\n            bucket.push({ dispose: () => this.remove(callback, context) });\r\n        }\r\n    }\r\n    remove(callback, context = null) {\r\n        if (!this._callbacks) {\r\n            return;\r\n        }\r\n        var foundCallbackWithDifferentContext = false;\r\n        for (var i = 0, len = this._callbacks.length; i < len; i++) {\r\n            if (this._callbacks[i] === callback) {\r\n                if (this._contexts[i] === context) {\r\n                    // callback & context match => remove it\r\n                    this._callbacks.splice(i, 1);\r\n                    this._contexts.splice(i, 1);\r\n                    return;\r\n                }\r\n                else {\r\n                    foundCallbackWithDifferentContext = true;\r\n                }\r\n            }\r\n        }\r\n        if (foundCallbackWithDifferentContext) {\r\n            throw new Error('When adding a listener with a context, you should remove it with the same context');\r\n        }\r\n    }\r\n    invoke(...args) {\r\n        if (!this._callbacks) {\r\n            return [];\r\n        }\r\n        var ret = [], callbacks = this._callbacks.slice(0), contexts = this._contexts.slice(0);\r\n        for (var i = 0, len = callbacks.length; i < len; i++) {\r\n            try {\r\n                ret.push(callbacks[i].apply(contexts[i], args));\r\n            }\r\n            catch (e) {\r\n                // eslint-disable-next-line no-console\r\n                console.error(e);\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n    isEmpty() {\r\n        return !this._callbacks || this._callbacks.length === 0;\r\n    }\r\n    dispose() {\r\n        this._callbacks = undefined;\r\n        this._contexts = undefined;\r\n    }\r\n}\r\nclass Emitter {\r\n    constructor(_options) {\r\n        this._options = _options;\r\n    }\r\n    /**\r\n     * For the public to allow to subscribe\r\n     * to events from this Emitter\r\n     */\r\n    get event() {\r\n        if (!this._event) {\r\n            this._event = (listener, thisArgs, disposables) => {\r\n                if (!this._callbacks) {\r\n                    this._callbacks = new CallbackList();\r\n                }\r\n                if (this._options && this._options.onFirstListenerAdd && this._callbacks.isEmpty()) {\r\n                    this._options.onFirstListenerAdd(this);\r\n                }\r\n                this._callbacks.add(listener, thisArgs);\r\n                let result;\r\n                result = {\r\n                    dispose: () => {\r\n                        this._callbacks.remove(listener, thisArgs);\r\n                        result.dispose = Emitter._noop;\r\n                        if (this._options && this._options.onLastListenerRemove && this._callbacks.isEmpty()) {\r\n                            this._options.onLastListenerRemove(this);\r\n                        }\r\n                    }\r\n                };\r\n                if (Array.isArray(disposables)) {\r\n                    disposables.push(result);\r\n                }\r\n                return result;\r\n            };\r\n        }\r\n        return this._event;\r\n    }\r\n    /**\r\n     * To be kept private to fire an event to\r\n     * subscribers\r\n     */\r\n    fire(event) {\r\n        if (this._callbacks) {\r\n            this._callbacks.invoke.call(this._callbacks, event);\r\n        }\r\n    }\r\n    dispose() {\r\n        if (this._callbacks) {\r\n            this._callbacks.dispose();\r\n            this._callbacks = undefined;\r\n        }\r\n    }\r\n}\r\nexports.Emitter = Emitter;\r\nEmitter._noop = function () { };\r\n", "/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst events_1 = require(\"./events\");\r\nconst Is = require(\"./is\");\r\nlet DefaultSize = 8192;\r\nlet CR = Buffer.from('\\r', 'ascii')[0];\r\nlet LF = Buffer.from('\\n', 'ascii')[0];\r\nlet CRLF = '\\r\\n';\r\nclass MessageBuffer {\r\n    constructor(encoding = 'utf8') {\r\n        this.encoding = encoding;\r\n        this.index = 0;\r\n        this.buffer = Buffer.allocUnsafe(DefaultSize);\r\n    }\r\n    append(chunk) {\r\n        var toAppend = chunk;\r\n        if (typeof (chunk) === 'string') {\r\n            var str = chunk;\r\n            var bufferLen = Buffer.byteLength(str, this.encoding);\r\n            toAppend = Buffer.allocUnsafe(bufferLen);\r\n            toAppend.write(str, 0, bufferLen, this.encoding);\r\n        }\r\n        if (this.buffer.length - this.index >= toAppend.length) {\r\n            toAppend.copy(this.buffer, this.index, 0, toAppend.length);\r\n        }\r\n        else {\r\n            var newSize = (Math.ceil((this.index + toAppend.length) / DefaultSize) + 1) * DefaultSize;\r\n            if (this.index === 0) {\r\n                this.buffer = Buffer.allocUnsafe(newSize);\r\n                toAppend.copy(this.buffer, 0, 0, toAppend.length);\r\n            }\r\n            else {\r\n                this.buffer = Buffer.concat([this.buffer.slice(0, this.index), toAppend], newSize);\r\n            }\r\n        }\r\n        this.index += toAppend.length;\r\n    }\r\n    tryReadHeaders() {\r\n        let result = undefined;\r\n        let current = 0;\r\n        while (current + 3 < this.index && (this.buffer[current] !== CR || this.buffer[current + 1] !== LF || this.buffer[current + 2] !== CR || this.buffer[current + 3] !== LF)) {\r\n            current++;\r\n        }\r\n        // No header / body separator found (e.g CRLFCRLF)\r\n        if (current + 3 >= this.index) {\r\n            return result;\r\n        }\r\n        result = Object.create(null);\r\n        let headers = this.buffer.toString('ascii', 0, current).split(CRLF);\r\n        headers.forEach((header) => {\r\n            let index = header.indexOf(':');\r\n            if (index === -1) {\r\n                throw new Error('Message header must separate key and value using :');\r\n            }\r\n            let key = header.substr(0, index);\r\n            let value = header.substr(index + 1).trim();\r\n            result[key] = value;\r\n        });\r\n        let nextStart = current + 4;\r\n        this.buffer = this.buffer.slice(nextStart);\r\n        this.index = this.index - nextStart;\r\n        return result;\r\n    }\r\n    tryReadContent(length) {\r\n        if (this.index < length) {\r\n            return null;\r\n        }\r\n        let result = this.buffer.toString(this.encoding, 0, length);\r\n        let nextStart = length;\r\n        this.buffer.copy(this.buffer, 0, nextStart);\r\n        this.index = this.index - nextStart;\r\n        return result;\r\n    }\r\n    get numberOfBytes() {\r\n        return this.index;\r\n    }\r\n}\r\nvar MessageReader;\r\n(function (MessageReader) {\r\n    function is(value) {\r\n        let candidate = value;\r\n        return candidate && Is.func(candidate.listen) && Is.func(candidate.dispose) &&\r\n            Is.func(candidate.onError) && Is.func(candidate.onClose) && Is.func(candidate.onPartialMessage);\r\n    }\r\n    MessageReader.is = is;\r\n})(MessageReader = exports.MessageReader || (exports.MessageReader = {}));\r\nclass AbstractMessageReader {\r\n    constructor() {\r\n        this.errorEmitter = new events_1.Emitter();\r\n        this.closeEmitter = new events_1.Emitter();\r\n        this.partialMessageEmitter = new events_1.Emitter();\r\n    }\r\n    dispose() {\r\n        this.errorEmitter.dispose();\r\n        this.closeEmitter.dispose();\r\n    }\r\n    get onError() {\r\n        return this.errorEmitter.event;\r\n    }\r\n    fireError(error) {\r\n        this.errorEmitter.fire(this.asError(error));\r\n    }\r\n    get onClose() {\r\n        return this.closeEmitter.event;\r\n    }\r\n    fireClose() {\r\n        this.closeEmitter.fire(undefined);\r\n    }\r\n    get onPartialMessage() {\r\n        return this.partialMessageEmitter.event;\r\n    }\r\n    firePartialMessage(info) {\r\n        this.partialMessageEmitter.fire(info);\r\n    }\r\n    asError(error) {\r\n        if (error instanceof Error) {\r\n            return error;\r\n        }\r\n        else {\r\n            return new Error(`Reader received error. Reason: ${Is.string(error.message) ? error.message : 'unknown'}`);\r\n        }\r\n    }\r\n}\r\nexports.AbstractMessageReader = AbstractMessageReader;\r\nclass StreamMessageReader extends AbstractMessageReader {\r\n    constructor(readable, encoding = 'utf8') {\r\n        super();\r\n        this.readable = readable;\r\n        this.buffer = new MessageBuffer(encoding);\r\n        this._partialMessageTimeout = 10000;\r\n    }\r\n    set partialMessageTimeout(timeout) {\r\n        this._partialMessageTimeout = timeout;\r\n    }\r\n    get partialMessageTimeout() {\r\n        return this._partialMessageTimeout;\r\n    }\r\n    listen(callback) {\r\n        this.nextMessageLength = -1;\r\n        this.messageToken = 0;\r\n        this.partialMessageTimer = undefined;\r\n        this.callback = callback;\r\n        this.readable.on('data', (data) => {\r\n            this.onData(data);\r\n        });\r\n        this.readable.on('error', (error) => this.fireError(error));\r\n        this.readable.on('close', () => this.fireClose());\r\n    }\r\n    onData(data) {\r\n        this.buffer.append(data);\r\n        while (true) {\r\n            if (this.nextMessageLength === -1) {\r\n                let headers = this.buffer.tryReadHeaders();\r\n                if (!headers) {\r\n                    return;\r\n                }\r\n                let contentLength = headers['Content-Length'];\r\n                if (!contentLength) {\r\n                    throw new Error('Header must provide a Content-Length property.');\r\n                }\r\n                let length = parseInt(contentLength);\r\n                if (isNaN(length)) {\r\n                    throw new Error('Content-Length value must be a number.');\r\n                }\r\n                this.nextMessageLength = length;\r\n                // Take the encoding form the header. For compatibility\r\n                // treat both utf-8 and utf8 as node utf8\r\n            }\r\n            var msg = this.buffer.tryReadContent(this.nextMessageLength);\r\n            if (msg === null) {\r\n                /** We haven't received the full message yet. */\r\n                this.setPartialMessageTimer();\r\n                return;\r\n            }\r\n            this.clearPartialMessageTimer();\r\n            this.nextMessageLength = -1;\r\n            this.messageToken++;\r\n            var json = JSON.parse(msg);\r\n            this.callback(json);\r\n        }\r\n    }\r\n    clearPartialMessageTimer() {\r\n        if (this.partialMessageTimer) {\r\n            clearTimeout(this.partialMessageTimer);\r\n            this.partialMessageTimer = undefined;\r\n        }\r\n    }\r\n    setPartialMessageTimer() {\r\n        this.clearPartialMessageTimer();\r\n        if (this._partialMessageTimeout <= 0) {\r\n            return;\r\n        }\r\n        this.partialMessageTimer = setTimeout((token, timeout) => {\r\n            this.partialMessageTimer = undefined;\r\n            if (token === this.messageToken) {\r\n                this.firePartialMessage({ messageToken: token, waitingTime: timeout });\r\n                this.setPartialMessageTimer();\r\n            }\r\n        }, this._partialMessageTimeout, this.messageToken, this._partialMessageTimeout);\r\n    }\r\n}\r\nexports.StreamMessageReader = StreamMessageReader;\r\nclass IPCMessageReader extends AbstractMessageReader {\r\n    constructor(process) {\r\n        super();\r\n        this.process = process;\r\n        let eventEmitter = this.process;\r\n        eventEmitter.on('error', (error) => this.fireError(error));\r\n        eventEmitter.on('close', () => this.fireClose());\r\n    }\r\n    listen(callback) {\r\n        this.process.on('message', callback);\r\n    }\r\n}\r\nexports.IPCMessageReader = IPCMessageReader;\r\nclass SocketMessageReader extends StreamMessageReader {\r\n    constructor(socket, encoding = 'utf-8') {\r\n        super(socket, encoding);\r\n    }\r\n}\r\nexports.SocketMessageReader = SocketMessageReader;\r\n", "/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst events_1 = require(\"./events\");\r\nconst Is = require(\"./is\");\r\nlet ContentLength = 'Content-Length: ';\r\nlet CRLF = '\\r\\n';\r\nvar MessageWriter;\r\n(function (MessageWriter) {\r\n    function is(value) {\r\n        let candidate = value;\r\n        return candidate && Is.func(candidate.dispose) && Is.func(candidate.onClose) &&\r\n            Is.func(candidate.onError) && Is.func(candidate.write);\r\n    }\r\n    MessageWriter.is = is;\r\n})(MessageWriter = exports.MessageWriter || (exports.MessageWriter = {}));\r\nclass AbstractMessageWriter {\r\n    constructor() {\r\n        this.errorEmitter = new events_1.Emitter();\r\n        this.closeEmitter = new events_1.Emitter();\r\n    }\r\n    dispose() {\r\n        this.errorEmitter.dispose();\r\n        this.closeEmitter.dispose();\r\n    }\r\n    get onError() {\r\n        return this.errorEmitter.event;\r\n    }\r\n    fireError(error, message, count) {\r\n        this.errorEmitter.fire([this.asError(error), message, count]);\r\n    }\r\n    get onClose() {\r\n        return this.closeEmitter.event;\r\n    }\r\n    fireClose() {\r\n        this.closeEmitter.fire(undefined);\r\n    }\r\n    asError(error) {\r\n        if (error instanceof Error) {\r\n            return error;\r\n        }\r\n        else {\r\n            return new Error(`Writer received error. Reason: ${Is.string(error.message) ? error.message : 'unknown'}`);\r\n        }\r\n    }\r\n}\r\nexports.AbstractMessageWriter = AbstractMessageWriter;\r\nclass StreamMessageWriter extends AbstractMessageWriter {\r\n    constructor(writable, encoding = 'utf8') {\r\n        super();\r\n        this.writable = writable;\r\n        this.encoding = encoding;\r\n        this.errorCount = 0;\r\n        this.writable.on('error', (error) => this.fireError(error));\r\n        this.writable.on('close', () => this.fireClose());\r\n    }\r\n    write(msg) {\r\n        let json = JSON.stringify(msg);\r\n        let contentLength = Buffer.byteLength(json, this.encoding);\r\n        let headers = [\r\n            ContentLength, contentLength.toString(), CRLF,\r\n            CRLF\r\n        ];\r\n        try {\r\n            // Header must be written in ASCII encoding\r\n            this.writable.write(headers.join(''), 'ascii');\r\n            // Now write the content. This can be written in any encoding\r\n            this.writable.write(json, this.encoding);\r\n            this.errorCount = 0;\r\n        }\r\n        catch (error) {\r\n            this.errorCount++;\r\n            this.fireError(error, msg, this.errorCount);\r\n        }\r\n    }\r\n}\r\nexports.StreamMessageWriter = StreamMessageWriter;\r\nclass IPCMessageWriter extends AbstractMessageWriter {\r\n    constructor(process) {\r\n        super();\r\n        this.process = process;\r\n        this.errorCount = 0;\r\n        this.queue = [];\r\n        this.sending = false;\r\n        let eventEmitter = this.process;\r\n        eventEmitter.on('error', (error) => this.fireError(error));\r\n        eventEmitter.on('close', () => this.fireClose);\r\n    }\r\n    write(msg) {\r\n        if (!this.sending && this.queue.length === 0) {\r\n            // See https://github.com/nodejs/node/issues/7657\r\n            this.doWriteMessage(msg);\r\n        }\r\n        else {\r\n            this.queue.push(msg);\r\n        }\r\n    }\r\n    doWriteMessage(msg) {\r\n        try {\r\n            if (this.process.send) {\r\n                this.sending = true;\r\n                this.process.send(msg, undefined, undefined, (error) => {\r\n                    this.sending = false;\r\n                    if (error) {\r\n                        this.errorCount++;\r\n                        this.fireError(error, msg, this.errorCount);\r\n                    }\r\n                    else {\r\n                        this.errorCount = 0;\r\n                    }\r\n                    if (this.queue.length > 0) {\r\n                        this.doWriteMessage(this.queue.shift());\r\n                    }\r\n                });\r\n            }\r\n        }\r\n        catch (error) {\r\n            this.errorCount++;\r\n            this.fireError(error, msg, this.errorCount);\r\n        }\r\n    }\r\n}\r\nexports.IPCMessageWriter = IPCMessageWriter;\r\nclass SocketMessageWriter extends AbstractMessageWriter {\r\n    constructor(socket, encoding = 'utf8') {\r\n        super();\r\n        this.socket = socket;\r\n        this.queue = [];\r\n        this.sending = false;\r\n        this.encoding = encoding;\r\n        this.errorCount = 0;\r\n        this.socket.on('error', (error) => this.fireError(error));\r\n        this.socket.on('close', () => this.fireClose());\r\n    }\r\n    dispose() {\r\n        super.dispose();\r\n        this.socket.destroy();\r\n    }\r\n    write(msg) {\r\n        if (!this.sending && this.queue.length === 0) {\r\n            // See https://github.com/nodejs/node/issues/7657\r\n            this.doWriteMessage(msg);\r\n        }\r\n        else {\r\n            this.queue.push(msg);\r\n        }\r\n    }\r\n    doWriteMessage(msg) {\r\n        let json = JSON.stringify(msg);\r\n        let contentLength = Buffer.byteLength(json, this.encoding);\r\n        let headers = [\r\n            ContentLength, contentLength.toString(), CRLF,\r\n            CRLF\r\n        ];\r\n        try {\r\n            // Header must be written in ASCII encoding\r\n            this.sending = true;\r\n            this.socket.write(headers.join(''), 'ascii', (error) => {\r\n                if (error) {\r\n                    this.handleError(error, msg);\r\n                }\r\n                try {\r\n                    // Now write the content. This can be written in any encoding\r\n                    this.socket.write(json, this.encoding, (error) => {\r\n                        this.sending = false;\r\n                        if (error) {\r\n                            this.handleError(error, msg);\r\n                        }\r\n                        else {\r\n                            this.errorCount = 0;\r\n                        }\r\n                        if (this.queue.length > 0) {\r\n                            this.doWriteMessage(this.queue.shift());\r\n                        }\r\n                    });\r\n                }\r\n                catch (error) {\r\n                    this.handleError(error, msg);\r\n                }\r\n            });\r\n        }\r\n        catch (error) {\r\n            this.handleError(error, msg);\r\n        }\r\n    }\r\n    handleError(error, msg) {\r\n        this.errorCount++;\r\n        this.fireError(error, msg, this.errorCount);\r\n    }\r\n}\r\nexports.SocketMessageWriter = SocketMessageWriter;\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst events_1 = require(\"./events\");\r\nconst Is = require(\"./is\");\r\nvar CancellationToken;\r\n(function (CancellationToken) {\r\n    CancellationToken.None = Object.freeze({\r\n        isCancellationRequested: false,\r\n        onCancellationRequested: events_1.Event.None\r\n    });\r\n    CancellationToken.Cancelled = Object.freeze({\r\n        isCancellationRequested: true,\r\n        onCancellationRequested: events_1.Event.None\r\n    });\r\n    function is(value) {\r\n        let candidate = value;\r\n        return candidate && (candidate === CancellationToken.None\r\n            || candidate === CancellationToken.Cancelled\r\n            || (Is.boolean(candidate.isCancellationRequested) && !!candidate.onCancellationRequested));\r\n    }\r\n    CancellationToken.is = is;\r\n})(CancellationToken = exports.CancellationToken || (exports.CancellationToken = {}));\r\nconst shortcutEvent = Object.freeze(function (callback, context) {\r\n    let handle = setTimeout(callback.bind(context), 0);\r\n    return { dispose() { clearTimeout(handle); } };\r\n});\r\nclass MutableToken {\r\n    constructor() {\r\n        this._isCancelled = false;\r\n    }\r\n    cancel() {\r\n        if (!this._isCancelled) {\r\n            this._isCancelled = true;\r\n            if (this._emitter) {\r\n                this._emitter.fire(undefined);\r\n                this.dispose();\r\n            }\r\n        }\r\n    }\r\n    get isCancellationRequested() {\r\n        return this._isCancelled;\r\n    }\r\n    get onCancellationRequested() {\r\n        if (this._isCancelled) {\r\n            return shortcutEvent;\r\n        }\r\n        if (!this._emitter) {\r\n            this._emitter = new events_1.Emitter();\r\n        }\r\n        return this._emitter.event;\r\n    }\r\n    dispose() {\r\n        if (this._emitter) {\r\n            this._emitter.dispose();\r\n            this._emitter = undefined;\r\n        }\r\n    }\r\n}\r\nclass CancellationTokenSource {\r\n    get token() {\r\n        if (!this._token) {\r\n            // be lazy and create the token only when\r\n            // actually needed\r\n            this._token = new MutableToken();\r\n        }\r\n        return this._token;\r\n    }\r\n    cancel() {\r\n        if (!this._token) {\r\n            // save an object by returning the default\r\n            // cancelled token when cancellation happens\r\n            // before someone asks for the token\r\n            this._token = CancellationToken.Cancelled;\r\n        }\r\n        else {\r\n            this._token.cancel();\r\n        }\r\n    }\r\n    dispose() {\r\n        if (!this._token) {\r\n            // ensure to initialize with an empty token if we had none\r\n            this._token = CancellationToken.None;\r\n        }\r\n        else if (this._token instanceof MutableToken) {\r\n            // actually dispose\r\n            this._token.dispose();\r\n        }\r\n    }\r\n}\r\nexports.CancellationTokenSource = CancellationTokenSource;\r\n", "\"use strict\";\r\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Touch;\r\n(function (Touch) {\r\n    Touch.None = 0;\r\n    Touch.First = 1;\r\n    Touch.Last = 2;\r\n})(Touch = exports.Touch || (exports.Touch = {}));\r\nclass LinkedMap {\r\n    constructor() {\r\n        this._map = new Map();\r\n        this._head = undefined;\r\n        this._tail = undefined;\r\n        this._size = 0;\r\n    }\r\n    clear() {\r\n        this._map.clear();\r\n        this._head = undefined;\r\n        this._tail = undefined;\r\n        this._size = 0;\r\n    }\r\n    isEmpty() {\r\n        return !this._head && !this._tail;\r\n    }\r\n    get size() {\r\n        return this._size;\r\n    }\r\n    has(key) {\r\n        return this._map.has(key);\r\n    }\r\n    get(key) {\r\n        const item = this._map.get(key);\r\n        if (!item) {\r\n            return undefined;\r\n        }\r\n        return item.value;\r\n    }\r\n    set(key, value, touch = Touch.None) {\r\n        let item = this._map.get(key);\r\n        if (item) {\r\n            item.value = value;\r\n            if (touch !== Touch.None) {\r\n                this.touch(item, touch);\r\n            }\r\n        }\r\n        else {\r\n            item = { key, value, next: undefined, previous: undefined };\r\n            switch (touch) {\r\n                case Touch.None:\r\n                    this.addItemLast(item);\r\n                    break;\r\n                case Touch.First:\r\n                    this.addItemFirst(item);\r\n                    break;\r\n                case Touch.Last:\r\n                    this.addItemLast(item);\r\n                    break;\r\n                default:\r\n                    this.addItemLast(item);\r\n                    break;\r\n            }\r\n            this._map.set(key, item);\r\n            this._size++;\r\n        }\r\n    }\r\n    delete(key) {\r\n        const item = this._map.get(key);\r\n        if (!item) {\r\n            return false;\r\n        }\r\n        this._map.delete(key);\r\n        this.removeItem(item);\r\n        this._size--;\r\n        return true;\r\n    }\r\n    shift() {\r\n        if (!this._head && !this._tail) {\r\n            return undefined;\r\n        }\r\n        if (!this._head || !this._tail) {\r\n            throw new Error('Invalid list');\r\n        }\r\n        const item = this._head;\r\n        this._map.delete(item.key);\r\n        this.removeItem(item);\r\n        this._size--;\r\n        return item.value;\r\n    }\r\n    forEach(callbackfn, thisArg) {\r\n        let current = this._head;\r\n        while (current) {\r\n            if (thisArg) {\r\n                callbackfn.bind(thisArg)(current.value, current.key, this);\r\n            }\r\n            else {\r\n                callbackfn(current.value, current.key, this);\r\n            }\r\n            current = current.next;\r\n        }\r\n    }\r\n    forEachReverse(callbackfn, thisArg) {\r\n        let current = this._tail;\r\n        while (current) {\r\n            if (thisArg) {\r\n                callbackfn.bind(thisArg)(current.value, current.key, this);\r\n            }\r\n            else {\r\n                callbackfn(current.value, current.key, this);\r\n            }\r\n            current = current.previous;\r\n        }\r\n    }\r\n    values() {\r\n        let result = [];\r\n        let current = this._head;\r\n        while (current) {\r\n            result.push(current.value);\r\n            current = current.next;\r\n        }\r\n        return result;\r\n    }\r\n    keys() {\r\n        let result = [];\r\n        let current = this._head;\r\n        while (current) {\r\n            result.push(current.key);\r\n            current = current.next;\r\n        }\r\n        return result;\r\n    }\r\n    /* JSON RPC run on es5 which has no Symbol.iterator\r\n    public keys(): IterableIterator<K> {\r\n        let current = this._head;\r\n        let iterator: IterableIterator<K> = {\r\n            [Symbol.iterator]() {\r\n                return iterator;\r\n            },\r\n            next():IteratorResult<K> {\r\n                if (current) {\r\n                    let result = { value: current.key, done: false };\r\n                    current = current.next;\r\n                    return result;\r\n                } else {\r\n                    return { value: undefined, done: true };\r\n                }\r\n            }\r\n        };\r\n        return iterator;\r\n    }\r\n\r\n    public values(): IterableIterator<V> {\r\n        let current = this._head;\r\n        let iterator: IterableIterator<V> = {\r\n            [Symbol.iterator]() {\r\n                return iterator;\r\n            },\r\n            next():IteratorResult<V> {\r\n                if (current) {\r\n                    let result = { value: current.value, done: false };\r\n                    current = current.next;\r\n                    return result;\r\n                } else {\r\n                    return { value: undefined, done: true };\r\n                }\r\n            }\r\n        };\r\n        return iterator;\r\n    }\r\n    */\r\n    addItemFirst(item) {\r\n        // First time Insert\r\n        if (!this._head && !this._tail) {\r\n            this._tail = item;\r\n        }\r\n        else if (!this._head) {\r\n            throw new Error('Invalid list');\r\n        }\r\n        else {\r\n            item.next = this._head;\r\n            this._head.previous = item;\r\n        }\r\n        this._head = item;\r\n    }\r\n    addItemLast(item) {\r\n        // First time Insert\r\n        if (!this._head && !this._tail) {\r\n            this._head = item;\r\n        }\r\n        else if (!this._tail) {\r\n            throw new Error('Invalid list');\r\n        }\r\n        else {\r\n            item.previous = this._tail;\r\n            this._tail.next = item;\r\n        }\r\n        this._tail = item;\r\n    }\r\n    removeItem(item) {\r\n        if (item === this._head && item === this._tail) {\r\n            this._head = undefined;\r\n            this._tail = undefined;\r\n        }\r\n        else if (item === this._head) {\r\n            this._head = item.next;\r\n        }\r\n        else if (item === this._tail) {\r\n            this._tail = item.previous;\r\n        }\r\n        else {\r\n            const next = item.next;\r\n            const previous = item.previous;\r\n            if (!next || !previous) {\r\n                throw new Error('Invalid list');\r\n            }\r\n            next.previous = previous;\r\n            previous.next = next;\r\n        }\r\n    }\r\n    touch(item, touch) {\r\n        if (!this._head || !this._tail) {\r\n            throw new Error('Invalid list');\r\n        }\r\n        if ((touch !== Touch.First && touch !== Touch.Last)) {\r\n            return;\r\n        }\r\n        if (touch === Touch.First) {\r\n            if (item === this._head) {\r\n                return;\r\n            }\r\n            const next = item.next;\r\n            const previous = item.previous;\r\n            // Unlink the item\r\n            if (item === this._tail) {\r\n                // previous must be defined since item was not head but is tail\r\n                // So there are more than on item in the map\r\n                previous.next = undefined;\r\n                this._tail = previous;\r\n            }\r\n            else {\r\n                // Both next and previous are not undefined since item was neither head nor tail.\r\n                next.previous = previous;\r\n                previous.next = next;\r\n            }\r\n            // Insert the node at head\r\n            item.previous = undefined;\r\n            item.next = this._head;\r\n            this._head.previous = item;\r\n            this._head = item;\r\n        }\r\n        else if (touch === Touch.Last) {\r\n            if (item === this._tail) {\r\n                return;\r\n            }\r\n            const next = item.next;\r\n            const previous = item.previous;\r\n            // Unlink the item.\r\n            if (item === this._head) {\r\n                // next must be defined since item was not tail but is head\r\n                // So there are more than on item in the map\r\n                next.previous = undefined;\r\n                this._head = next;\r\n            }\r\n            else {\r\n                // Both next and previous are not undefined since item was neither head nor tail.\r\n                next.previous = previous;\r\n                previous.next = next;\r\n            }\r\n            item.next = undefined;\r\n            item.previous = this._tail;\r\n            this._tail.next = item;\r\n            this._tail = item;\r\n        }\r\n    }\r\n}\r\nexports.LinkedMap = LinkedMap;\r\n", "/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst path_1 = require(\"path\");\r\nconst os_1 = require(\"os\");\r\nconst crypto_1 = require(\"crypto\");\r\nconst net_1 = require(\"net\");\r\nconst messageReader_1 = require(\"./messageReader\");\r\nconst messageWriter_1 = require(\"./messageWriter\");\r\nfunction generateRandomPipeName() {\r\n    const randomSuffix = crypto_1.randomBytes(21).toString('hex');\r\n    if (process.platform === 'win32') {\r\n        return `\\\\\\\\.\\\\pipe\\\\vscode-jsonrpc-${randomSuffix}-sock`;\r\n    }\r\n    else {\r\n        // Mac/Unix: use socket file\r\n        return path_1.join(os_1.tmpdir(), `vscode-${randomSuffix}.sock`);\r\n    }\r\n}\r\nexports.generateRandomPipeName = generateRandomPipeName;\r\nfunction createClientPipeTransport(pipeName, encoding = 'utf-8') {\r\n    let connectResolve;\r\n    let connected = new Promise((resolve, _reject) => {\r\n        connectResolve = resolve;\r\n    });\r\n    return new Promise((resolve, reject) => {\r\n        let server = net_1.createServer((socket) => {\r\n            server.close();\r\n            connectResolve([\r\n                new messageReader_1.SocketMessageReader(socket, encoding),\r\n                new messageWriter_1.SocketMessageWriter(socket, encoding)\r\n            ]);\r\n        });\r\n        server.on('error', reject);\r\n        server.listen(pipeName, () => {\r\n            server.removeListener('error', reject);\r\n            resolve({\r\n                onConnected: () => { return connected; }\r\n            });\r\n        });\r\n    });\r\n}\r\nexports.createClientPipeTransport = createClientPipeTransport;\r\nfunction createServerPipeTransport(pipeName, encoding = 'utf-8') {\r\n    const socket = net_1.createConnection(pipeName);\r\n    return [\r\n        new messageReader_1.SocketMessageReader(socket, encoding),\r\n        new messageWriter_1.SocketMessageWriter(socket, encoding)\r\n    ];\r\n}\r\nexports.createServerPipeTransport = createServerPipeTransport;\r\n", "/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst net_1 = require(\"net\");\r\nconst messageReader_1 = require(\"./messageReader\");\r\nconst messageWriter_1 = require(\"./messageWriter\");\r\nfunction createClientSocketTransport(port, encoding = 'utf-8') {\r\n    let connectResolve;\r\n    let connected = new Promise((resolve, _reject) => {\r\n        connectResolve = resolve;\r\n    });\r\n    return new Promise((resolve, reject) => {\r\n        let server = net_1.createServer((socket) => {\r\n            server.close();\r\n            connectResolve([\r\n                new messageReader_1.SocketMessageReader(socket, encoding),\r\n                new messageWriter_1.SocketMessageWriter(socket, encoding)\r\n            ]);\r\n        });\r\n        server.on('error', reject);\r\n        server.listen(port, '127.0.0.1', () => {\r\n            server.removeListener('error', reject);\r\n            resolve({\r\n                onConnected: () => { return connected; }\r\n            });\r\n        });\r\n    });\r\n}\r\nexports.createClientSocketTransport = createClientSocketTransport;\r\nfunction createServerSocketTransport(port, encoding = 'utf-8') {\r\n    const socket = net_1.createConnection(port, '127.0.0.1');\r\n    return [\r\n        new messageReader_1.SocketMessageReader(socket, encoding),\r\n        new messageWriter_1.SocketMessageWriter(socket, encoding)\r\n    ];\r\n}\r\nexports.createServerSocketTransport = createServerSocketTransport;\r\n", "/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n/// <reference path=\"../typings/thenable.d.ts\" />\r\n'use strict';\r\nfunction __export(m) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst Is = require(\"./is\");\r\nconst messages_1 = require(\"./messages\");\r\nexports.RequestType = messages_1.RequestType;\r\nexports.RequestType0 = messages_1.RequestType0;\r\nexports.RequestType1 = messages_1.RequestType1;\r\nexports.RequestType2 = messages_1.RequestType2;\r\nexports.RequestType3 = messages_1.RequestType3;\r\nexports.RequestType4 = messages_1.RequestType4;\r\nexports.RequestType5 = messages_1.RequestType5;\r\nexports.RequestType6 = messages_1.RequestType6;\r\nexports.RequestType7 = messages_1.RequestType7;\r\nexports.RequestType8 = messages_1.RequestType8;\r\nexports.RequestType9 = messages_1.RequestType9;\r\nexports.ResponseError = messages_1.ResponseError;\r\nexports.ErrorCodes = messages_1.ErrorCodes;\r\nexports.NotificationType = messages_1.NotificationType;\r\nexports.NotificationType0 = messages_1.NotificationType0;\r\nexports.NotificationType1 = messages_1.NotificationType1;\r\nexports.NotificationType2 = messages_1.NotificationType2;\r\nexports.NotificationType3 = messages_1.NotificationType3;\r\nexports.NotificationType4 = messages_1.NotificationType4;\r\nexports.NotificationType5 = messages_1.NotificationType5;\r\nexports.NotificationType6 = messages_1.NotificationType6;\r\nexports.NotificationType7 = messages_1.NotificationType7;\r\nexports.NotificationType8 = messages_1.NotificationType8;\r\nexports.NotificationType9 = messages_1.NotificationType9;\r\nconst messageReader_1 = require(\"./messageReader\");\r\nexports.MessageReader = messageReader_1.MessageReader;\r\nexports.StreamMessageReader = messageReader_1.StreamMessageReader;\r\nexports.IPCMessageReader = messageReader_1.IPCMessageReader;\r\nexports.SocketMessageReader = messageReader_1.SocketMessageReader;\r\nconst messageWriter_1 = require(\"./messageWriter\");\r\nexports.MessageWriter = messageWriter_1.MessageWriter;\r\nexports.StreamMessageWriter = messageWriter_1.StreamMessageWriter;\r\nexports.IPCMessageWriter = messageWriter_1.IPCMessageWriter;\r\nexports.SocketMessageWriter = messageWriter_1.SocketMessageWriter;\r\nconst events_1 = require(\"./events\");\r\nexports.Disposable = events_1.Disposable;\r\nexports.Event = events_1.Event;\r\nexports.Emitter = events_1.Emitter;\r\nconst cancellation_1 = require(\"./cancellation\");\r\nexports.CancellationTokenSource = cancellation_1.CancellationTokenSource;\r\nexports.CancellationToken = cancellation_1.CancellationToken;\r\nconst linkedMap_1 = require(\"./linkedMap\");\r\n__export(require(\"./pipeSupport\"));\r\n__export(require(\"./socketSupport\"));\r\nvar CancelNotification;\r\n(function (CancelNotification) {\r\n    CancelNotification.type = new messages_1.NotificationType('$/cancelRequest');\r\n})(CancelNotification || (CancelNotification = {}));\r\nvar ProgressNotification;\r\n(function (ProgressNotification) {\r\n    ProgressNotification.type = new messages_1.NotificationType('$/progress');\r\n})(ProgressNotification || (ProgressNotification = {}));\r\nclass ProgressType {\r\n    constructor() {\r\n    }\r\n}\r\nexports.ProgressType = ProgressType;\r\nexports.NullLogger = Object.freeze({\r\n    error: () => { },\r\n    warn: () => { },\r\n    info: () => { },\r\n    log: () => { }\r\n});\r\nvar Trace;\r\n(function (Trace) {\r\n    Trace[Trace[\"Off\"] = 0] = \"Off\";\r\n    Trace[Trace[\"Messages\"] = 1] = \"Messages\";\r\n    Trace[Trace[\"Verbose\"] = 2] = \"Verbose\";\r\n})(Trace = exports.Trace || (exports.Trace = {}));\r\n(function (Trace) {\r\n    function fromString(value) {\r\n        if (!Is.string(value)) {\r\n            return Trace.Off;\r\n        }\r\n        value = value.toLowerCase();\r\n        switch (value) {\r\n            case 'off':\r\n                return Trace.Off;\r\n            case 'messages':\r\n                return Trace.Messages;\r\n            case 'verbose':\r\n                return Trace.Verbose;\r\n            default:\r\n                return Trace.Off;\r\n        }\r\n    }\r\n    Trace.fromString = fromString;\r\n    function toString(value) {\r\n        switch (value) {\r\n            case Trace.Off:\r\n                return 'off';\r\n            case Trace.Messages:\r\n                return 'messages';\r\n            case Trace.Verbose:\r\n                return 'verbose';\r\n            default:\r\n                return 'off';\r\n        }\r\n    }\r\n    Trace.toString = toString;\r\n})(Trace = exports.Trace || (exports.Trace = {}));\r\nvar TraceFormat;\r\n(function (TraceFormat) {\r\n    TraceFormat[\"Text\"] = \"text\";\r\n    TraceFormat[\"JSON\"] = \"json\";\r\n})(TraceFormat = exports.TraceFormat || (exports.TraceFormat = {}));\r\n(function (TraceFormat) {\r\n    function fromString(value) {\r\n        value = value.toLowerCase();\r\n        if (value === 'json') {\r\n            return TraceFormat.JSON;\r\n        }\r\n        else {\r\n            return TraceFormat.Text;\r\n        }\r\n    }\r\n    TraceFormat.fromString = fromString;\r\n})(TraceFormat = exports.TraceFormat || (exports.TraceFormat = {}));\r\nvar SetTraceNotification;\r\n(function (SetTraceNotification) {\r\n    SetTraceNotification.type = new messages_1.NotificationType('$/setTraceNotification');\r\n})(SetTraceNotification = exports.SetTraceNotification || (exports.SetTraceNotification = {}));\r\nvar LogTraceNotification;\r\n(function (LogTraceNotification) {\r\n    LogTraceNotification.type = new messages_1.NotificationType('$/logTraceNotification');\r\n})(LogTraceNotification = exports.LogTraceNotification || (exports.LogTraceNotification = {}));\r\nvar ConnectionErrors;\r\n(function (ConnectionErrors) {\r\n    /**\r\n     * The connection is closed.\r\n     */\r\n    ConnectionErrors[ConnectionErrors[\"Closed\"] = 1] = \"Closed\";\r\n    /**\r\n     * The connection got disposed.\r\n     */\r\n    ConnectionErrors[ConnectionErrors[\"Disposed\"] = 2] = \"Disposed\";\r\n    /**\r\n     * The connection is already in listening mode.\r\n     */\r\n    ConnectionErrors[ConnectionErrors[\"AlreadyListening\"] = 3] = \"AlreadyListening\";\r\n})(ConnectionErrors = exports.ConnectionErrors || (exports.ConnectionErrors = {}));\r\nclass ConnectionError extends Error {\r\n    constructor(code, message) {\r\n        super(message);\r\n        this.code = code;\r\n        Object.setPrototypeOf(this, ConnectionError.prototype);\r\n    }\r\n}\r\nexports.ConnectionError = ConnectionError;\r\nvar ConnectionStrategy;\r\n(function (ConnectionStrategy) {\r\n    function is(value) {\r\n        let candidate = value;\r\n        return candidate && Is.func(candidate.cancelUndispatched);\r\n    }\r\n    ConnectionStrategy.is = is;\r\n})(ConnectionStrategy = exports.ConnectionStrategy || (exports.ConnectionStrategy = {}));\r\nvar ConnectionState;\r\n(function (ConnectionState) {\r\n    ConnectionState[ConnectionState[\"New\"] = 1] = \"New\";\r\n    ConnectionState[ConnectionState[\"Listening\"] = 2] = \"Listening\";\r\n    ConnectionState[ConnectionState[\"Closed\"] = 3] = \"Closed\";\r\n    ConnectionState[ConnectionState[\"Disposed\"] = 4] = \"Disposed\";\r\n})(ConnectionState || (ConnectionState = {}));\r\nfunction _createMessageConnection(messageReader, messageWriter, logger, strategy) {\r\n    let sequenceNumber = 0;\r\n    let notificationSquenceNumber = 0;\r\n    let unknownResponseSquenceNumber = 0;\r\n    const version = '2.0';\r\n    let starRequestHandler = undefined;\r\n    let requestHandlers = Object.create(null);\r\n    let starNotificationHandler = undefined;\r\n    let notificationHandlers = Object.create(null);\r\n    let progressHandlers = new Map();\r\n    let timer;\r\n    let messageQueue = new linkedMap_1.LinkedMap();\r\n    let responsePromises = Object.create(null);\r\n    let requestTokens = Object.create(null);\r\n    let trace = Trace.Off;\r\n    let traceFormat = TraceFormat.Text;\r\n    let tracer;\r\n    let state = ConnectionState.New;\r\n    let errorEmitter = new events_1.Emitter();\r\n    let closeEmitter = new events_1.Emitter();\r\n    let unhandledNotificationEmitter = new events_1.Emitter();\r\n    let unhandledProgressEmitter = new events_1.Emitter();\r\n    let disposeEmitter = new events_1.Emitter();\r\n    function createRequestQueueKey(id) {\r\n        return 'req-' + id.toString();\r\n    }\r\n    function createResponseQueueKey(id) {\r\n        if (id === null) {\r\n            return 'res-unknown-' + (++unknownResponseSquenceNumber).toString();\r\n        }\r\n        else {\r\n            return 'res-' + id.toString();\r\n        }\r\n    }\r\n    function createNotificationQueueKey() {\r\n        return 'not-' + (++notificationSquenceNumber).toString();\r\n    }\r\n    function addMessageToQueue(queue, message) {\r\n        if (messages_1.isRequestMessage(message)) {\r\n            queue.set(createRequestQueueKey(message.id), message);\r\n        }\r\n        else if (messages_1.isResponseMessage(message)) {\r\n            queue.set(createResponseQueueKey(message.id), message);\r\n        }\r\n        else {\r\n            queue.set(createNotificationQueueKey(), message);\r\n        }\r\n    }\r\n    function cancelUndispatched(_message) {\r\n        return undefined;\r\n    }\r\n    function isListening() {\r\n        return state === ConnectionState.Listening;\r\n    }\r\n    function isClosed() {\r\n        return state === ConnectionState.Closed;\r\n    }\r\n    function isDisposed() {\r\n        return state === ConnectionState.Disposed;\r\n    }\r\n    function closeHandler() {\r\n        if (state === ConnectionState.New || state === ConnectionState.Listening) {\r\n            state = ConnectionState.Closed;\r\n            closeEmitter.fire(undefined);\r\n        }\r\n        // If the connection is disposed don't sent close events.\r\n    }\r\n    function readErrorHandler(error) {\r\n        errorEmitter.fire([error, undefined, undefined]);\r\n    }\r\n    function writeErrorHandler(data) {\r\n        errorEmitter.fire(data);\r\n    }\r\n    messageReader.onClose(closeHandler);\r\n    messageReader.onError(readErrorHandler);\r\n    messageWriter.onClose(closeHandler);\r\n    messageWriter.onError(writeErrorHandler);\r\n    function triggerMessageQueue() {\r\n        if (timer || messageQueue.size === 0) {\r\n            return;\r\n        }\r\n        timer = setImmediate(() => {\r\n            timer = undefined;\r\n            processMessageQueue();\r\n        });\r\n    }\r\n    function processMessageQueue() {\r\n        if (messageQueue.size === 0) {\r\n            return;\r\n        }\r\n        let message = messageQueue.shift();\r\n        try {\r\n            if (messages_1.isRequestMessage(message)) {\r\n                handleRequest(message);\r\n            }\r\n            else if (messages_1.isNotificationMessage(message)) {\r\n                handleNotification(message);\r\n            }\r\n            else if (messages_1.isResponseMessage(message)) {\r\n                handleResponse(message);\r\n            }\r\n            else {\r\n                handleInvalidMessage(message);\r\n            }\r\n        }\r\n        finally {\r\n            triggerMessageQueue();\r\n        }\r\n    }\r\n    let callback = (message) => {\r\n        try {\r\n            // We have received a cancellation message. Check if the message is still in the queue\r\n            // and cancel it if allowed to do so.\r\n            if (messages_1.isNotificationMessage(message) && message.method === CancelNotification.type.method) {\r\n                let key = createRequestQueueKey(message.params.id);\r\n                let toCancel = messageQueue.get(key);\r\n                if (messages_1.isRequestMessage(toCancel)) {\r\n                    let response = strategy && strategy.cancelUndispatched ? strategy.cancelUndispatched(toCancel, cancelUndispatched) : cancelUndispatched(toCancel);\r\n                    if (response && (response.error !== void 0 || response.result !== void 0)) {\r\n                        messageQueue.delete(key);\r\n                        response.id = toCancel.id;\r\n                        traceSendingResponse(response, message.method, Date.now());\r\n                        messageWriter.write(response);\r\n                        return;\r\n                    }\r\n                }\r\n            }\r\n            addMessageToQueue(messageQueue, message);\r\n        }\r\n        finally {\r\n            triggerMessageQueue();\r\n        }\r\n    };\r\n    function handleRequest(requestMessage) {\r\n        if (isDisposed()) {\r\n            // we return here silently since we fired an event when the\r\n            // connection got disposed.\r\n            return;\r\n        }\r\n        function reply(resultOrError, method, startTime) {\r\n            let message = {\r\n                jsonrpc: version,\r\n                id: requestMessage.id\r\n            };\r\n            if (resultOrError instanceof messages_1.ResponseError) {\r\n                message.error = resultOrError.toJson();\r\n            }\r\n            else {\r\n                message.result = resultOrError === void 0 ? null : resultOrError;\r\n            }\r\n            traceSendingResponse(message, method, startTime);\r\n            messageWriter.write(message);\r\n        }\r\n        function replyError(error, method, startTime) {\r\n            let message = {\r\n                jsonrpc: version,\r\n                id: requestMessage.id,\r\n                error: error.toJson()\r\n            };\r\n            traceSendingResponse(message, method, startTime);\r\n            messageWriter.write(message);\r\n        }\r\n        function replySuccess(result, method, startTime) {\r\n            // The JSON RPC defines that a response must either have a result or an error\r\n            // So we can't treat undefined as a valid response result.\r\n            if (result === void 0) {\r\n                result = null;\r\n            }\r\n            let message = {\r\n                jsonrpc: version,\r\n                id: requestMessage.id,\r\n                result: result\r\n            };\r\n            traceSendingResponse(message, method, startTime);\r\n            messageWriter.write(message);\r\n        }\r\n        traceReceivedRequest(requestMessage);\r\n        let element = requestHandlers[requestMessage.method];\r\n        let type;\r\n        let requestHandler;\r\n        if (element) {\r\n            type = element.type;\r\n            requestHandler = element.handler;\r\n        }\r\n        let startTime = Date.now();\r\n        if (requestHandler || starRequestHandler) {\r\n            let cancellationSource = new cancellation_1.CancellationTokenSource();\r\n            let tokenKey = String(requestMessage.id);\r\n            requestTokens[tokenKey] = cancellationSource;\r\n            try {\r\n                let handlerResult;\r\n                if (requestMessage.params === void 0 || (type !== void 0 && type.numberOfParams === 0)) {\r\n                    handlerResult = requestHandler\r\n                        ? requestHandler(cancellationSource.token)\r\n                        : starRequestHandler(requestMessage.method, cancellationSource.token);\r\n                }\r\n                else if (Is.array(requestMessage.params) && (type === void 0 || type.numberOfParams > 1)) {\r\n                    handlerResult = requestHandler\r\n                        ? requestHandler(...requestMessage.params, cancellationSource.token)\r\n                        : starRequestHandler(requestMessage.method, ...requestMessage.params, cancellationSource.token);\r\n                }\r\n                else {\r\n                    handlerResult = requestHandler\r\n                        ? requestHandler(requestMessage.params, cancellationSource.token)\r\n                        : starRequestHandler(requestMessage.method, requestMessage.params, cancellationSource.token);\r\n                }\r\n                let promise = handlerResult;\r\n                if (!handlerResult) {\r\n                    delete requestTokens[tokenKey];\r\n                    replySuccess(handlerResult, requestMessage.method, startTime);\r\n                }\r\n                else if (promise.then) {\r\n                    promise.then((resultOrError) => {\r\n                        delete requestTokens[tokenKey];\r\n                        reply(resultOrError, requestMessage.method, startTime);\r\n                    }, error => {\r\n                        delete requestTokens[tokenKey];\r\n                        if (error instanceof messages_1.ResponseError) {\r\n                            replyError(error, requestMessage.method, startTime);\r\n                        }\r\n                        else if (error && Is.string(error.message)) {\r\n                            replyError(new messages_1.ResponseError(messages_1.ErrorCodes.InternalError, `Request ${requestMessage.method} failed with message: ${error.message}`), requestMessage.method, startTime);\r\n                        }\r\n                        else {\r\n                            replyError(new messages_1.ResponseError(messages_1.ErrorCodes.InternalError, `Request ${requestMessage.method} failed unexpectedly without providing any details.`), requestMessage.method, startTime);\r\n                        }\r\n                    });\r\n                }\r\n                else {\r\n                    delete requestTokens[tokenKey];\r\n                    reply(handlerResult, requestMessage.method, startTime);\r\n                }\r\n            }\r\n            catch (error) {\r\n                delete requestTokens[tokenKey];\r\n                if (error instanceof messages_1.ResponseError) {\r\n                    reply(error, requestMessage.method, startTime);\r\n                }\r\n                else if (error && Is.string(error.message)) {\r\n                    replyError(new messages_1.ResponseError(messages_1.ErrorCodes.InternalError, `Request ${requestMessage.method} failed with message: ${error.message}`), requestMessage.method, startTime);\r\n                }\r\n                else {\r\n                    replyError(new messages_1.ResponseError(messages_1.ErrorCodes.InternalError, `Request ${requestMessage.method} failed unexpectedly without providing any details.`), requestMessage.method, startTime);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            replyError(new messages_1.ResponseError(messages_1.ErrorCodes.MethodNotFound, `Unhandled method ${requestMessage.method}`), requestMessage.method, startTime);\r\n        }\r\n    }\r\n    function handleResponse(responseMessage) {\r\n        if (isDisposed()) {\r\n            // See handle request.\r\n            return;\r\n        }\r\n        if (responseMessage.id === null) {\r\n            if (responseMessage.error) {\r\n                logger.error(`Received response message without id: Error is: \\n${JSON.stringify(responseMessage.error, undefined, 4)}`);\r\n            }\r\n            else {\r\n                logger.error(`Received response message without id. No further error information provided.`);\r\n            }\r\n        }\r\n        else {\r\n            let key = String(responseMessage.id);\r\n            let responsePromise = responsePromises[key];\r\n            traceReceivedResponse(responseMessage, responsePromise);\r\n            if (responsePromise) {\r\n                delete responsePromises[key];\r\n                try {\r\n                    if (responseMessage.error) {\r\n                        let error = responseMessage.error;\r\n                        responsePromise.reject(new messages_1.ResponseError(error.code, error.message, error.data));\r\n                    }\r\n                    else if (responseMessage.result !== void 0) {\r\n                        responsePromise.resolve(responseMessage.result);\r\n                    }\r\n                    else {\r\n                        throw new Error('Should never happen.');\r\n                    }\r\n                }\r\n                catch (error) {\r\n                    if (error.message) {\r\n                        logger.error(`Response handler '${responsePromise.method}' failed with message: ${error.message}`);\r\n                    }\r\n                    else {\r\n                        logger.error(`Response handler '${responsePromise.method}' failed unexpectedly.`);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    function handleNotification(message) {\r\n        if (isDisposed()) {\r\n            // See handle request.\r\n            return;\r\n        }\r\n        let type = undefined;\r\n        let notificationHandler;\r\n        if (message.method === CancelNotification.type.method) {\r\n            notificationHandler = (params) => {\r\n                let id = params.id;\r\n                let source = requestTokens[String(id)];\r\n                if (source) {\r\n                    source.cancel();\r\n                }\r\n            };\r\n        }\r\n        else {\r\n            let element = notificationHandlers[message.method];\r\n            if (element) {\r\n                notificationHandler = element.handler;\r\n                type = element.type;\r\n            }\r\n        }\r\n        if (notificationHandler || starNotificationHandler) {\r\n            try {\r\n                traceReceivedNotification(message);\r\n                if (message.params === void 0 || (type !== void 0 && type.numberOfParams === 0)) {\r\n                    notificationHandler ? notificationHandler() : starNotificationHandler(message.method);\r\n                }\r\n                else if (Is.array(message.params) && (type === void 0 || type.numberOfParams > 1)) {\r\n                    notificationHandler ? notificationHandler(...message.params) : starNotificationHandler(message.method, ...message.params);\r\n                }\r\n                else {\r\n                    notificationHandler ? notificationHandler(message.params) : starNotificationHandler(message.method, message.params);\r\n                }\r\n            }\r\n            catch (error) {\r\n                if (error.message) {\r\n                    logger.error(`Notification handler '${message.method}' failed with message: ${error.message}`);\r\n                }\r\n                else {\r\n                    logger.error(`Notification handler '${message.method}' failed unexpectedly.`);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            unhandledNotificationEmitter.fire(message);\r\n        }\r\n    }\r\n    function handleInvalidMessage(message) {\r\n        if (!message) {\r\n            logger.error('Received empty message.');\r\n            return;\r\n        }\r\n        logger.error(`Received message which is neither a response nor a notification message:\\n${JSON.stringify(message, null, 4)}`);\r\n        // Test whether we find an id to reject the promise\r\n        let responseMessage = message;\r\n        if (Is.string(responseMessage.id) || Is.number(responseMessage.id)) {\r\n            let key = String(responseMessage.id);\r\n            let responseHandler = responsePromises[key];\r\n            if (responseHandler) {\r\n                responseHandler.reject(new Error('The received response has neither a result nor an error property.'));\r\n            }\r\n        }\r\n    }\r\n    function traceSendingRequest(message) {\r\n        if (trace === Trace.Off || !tracer) {\r\n            return;\r\n        }\r\n        if (traceFormat === TraceFormat.Text) {\r\n            let data = undefined;\r\n            if (trace === Trace.Verbose && message.params) {\r\n                data = `Params: ${JSON.stringify(message.params, null, 4)}\\n\\n`;\r\n            }\r\n            tracer.log(`Sending request '${message.method} - (${message.id})'.`, data);\r\n        }\r\n        else {\r\n            logLSPMessage('send-request', message);\r\n        }\r\n    }\r\n    function traceSendingNotification(message) {\r\n        if (trace === Trace.Off || !tracer) {\r\n            return;\r\n        }\r\n        if (traceFormat === TraceFormat.Text) {\r\n            let data = undefined;\r\n            if (trace === Trace.Verbose) {\r\n                if (message.params) {\r\n                    data = `Params: ${JSON.stringify(message.params, null, 4)}\\n\\n`;\r\n                }\r\n                else {\r\n                    data = 'No parameters provided.\\n\\n';\r\n                }\r\n            }\r\n            tracer.log(`Sending notification '${message.method}'.`, data);\r\n        }\r\n        else {\r\n            logLSPMessage('send-notification', message);\r\n        }\r\n    }\r\n    function traceSendingResponse(message, method, startTime) {\r\n        if (trace === Trace.Off || !tracer) {\r\n            return;\r\n        }\r\n        if (traceFormat === TraceFormat.Text) {\r\n            let data = undefined;\r\n            if (trace === Trace.Verbose) {\r\n                if (message.error && message.error.data) {\r\n                    data = `Error data: ${JSON.stringify(message.error.data, null, 4)}\\n\\n`;\r\n                }\r\n                else {\r\n                    if (message.result) {\r\n                        data = `Result: ${JSON.stringify(message.result, null, 4)}\\n\\n`;\r\n                    }\r\n                    else if (message.error === void 0) {\r\n                        data = 'No result returned.\\n\\n';\r\n                    }\r\n                }\r\n            }\r\n            tracer.log(`Sending response '${method} - (${message.id})'. Processing request took ${Date.now() - startTime}ms`, data);\r\n        }\r\n        else {\r\n            logLSPMessage('send-response', message);\r\n        }\r\n    }\r\n    function traceReceivedRequest(message) {\r\n        if (trace === Trace.Off || !tracer) {\r\n            return;\r\n        }\r\n        if (traceFormat === TraceFormat.Text) {\r\n            let data = undefined;\r\n            if (trace === Trace.Verbose && message.params) {\r\n                data = `Params: ${JSON.stringify(message.params, null, 4)}\\n\\n`;\r\n            }\r\n            tracer.log(`Received request '${message.method} - (${message.id})'.`, data);\r\n        }\r\n        else {\r\n            logLSPMessage('receive-request', message);\r\n        }\r\n    }\r\n    function traceReceivedNotification(message) {\r\n        if (trace === Trace.Off || !tracer || message.method === LogTraceNotification.type.method) {\r\n            return;\r\n        }\r\n        if (traceFormat === TraceFormat.Text) {\r\n            let data = undefined;\r\n            if (trace === Trace.Verbose) {\r\n                if (message.params) {\r\n                    data = `Params: ${JSON.stringify(message.params, null, 4)}\\n\\n`;\r\n                }\r\n                else {\r\n                    data = 'No parameters provided.\\n\\n';\r\n                }\r\n            }\r\n            tracer.log(`Received notification '${message.method}'.`, data);\r\n        }\r\n        else {\r\n            logLSPMessage('receive-notification', message);\r\n        }\r\n    }\r\n    function traceReceivedResponse(message, responsePromise) {\r\n        if (trace === Trace.Off || !tracer) {\r\n            return;\r\n        }\r\n        if (traceFormat === TraceFormat.Text) {\r\n            let data = undefined;\r\n            if (trace === Trace.Verbose) {\r\n                if (message.error && message.error.data) {\r\n                    data = `Error data: ${JSON.stringify(message.error.data, null, 4)}\\n\\n`;\r\n                }\r\n                else {\r\n                    if (message.result) {\r\n                        data = `Result: ${JSON.stringify(message.result, null, 4)}\\n\\n`;\r\n                    }\r\n                    else if (message.error === void 0) {\r\n                        data = 'No result returned.\\n\\n';\r\n                    }\r\n                }\r\n            }\r\n            if (responsePromise) {\r\n                let error = message.error ? ` Request failed: ${message.error.message} (${message.error.code}).` : '';\r\n                tracer.log(`Received response '${responsePromise.method} - (${message.id})' in ${Date.now() - responsePromise.timerStart}ms.${error}`, data);\r\n            }\r\n            else {\r\n                tracer.log(`Received response ${message.id} without active response promise.`, data);\r\n            }\r\n        }\r\n        else {\r\n            logLSPMessage('receive-response', message);\r\n        }\r\n    }\r\n    function logLSPMessage(type, message) {\r\n        if (!tracer || trace === Trace.Off) {\r\n            return;\r\n        }\r\n        const lspMessage = {\r\n            isLSPMessage: true,\r\n            type,\r\n            message,\r\n            timestamp: Date.now()\r\n        };\r\n        tracer.log(lspMessage);\r\n    }\r\n    function throwIfClosedOrDisposed() {\r\n        if (isClosed()) {\r\n            throw new ConnectionError(ConnectionErrors.Closed, 'Connection is closed.');\r\n        }\r\n        if (isDisposed()) {\r\n            throw new ConnectionError(ConnectionErrors.Disposed, 'Connection is disposed.');\r\n        }\r\n    }\r\n    function throwIfListening() {\r\n        if (isListening()) {\r\n            throw new ConnectionError(ConnectionErrors.AlreadyListening, 'Connection is already listening');\r\n        }\r\n    }\r\n    function throwIfNotListening() {\r\n        if (!isListening()) {\r\n            throw new Error('Call listen() first.');\r\n        }\r\n    }\r\n    function undefinedToNull(param) {\r\n        if (param === void 0) {\r\n            return null;\r\n        }\r\n        else {\r\n            return param;\r\n        }\r\n    }\r\n    function computeMessageParams(type, params) {\r\n        let result;\r\n        let numberOfParams = type.numberOfParams;\r\n        switch (numberOfParams) {\r\n            case 0:\r\n                result = null;\r\n                break;\r\n            case 1:\r\n                result = undefinedToNull(params[0]);\r\n                break;\r\n            default:\r\n                result = [];\r\n                for (let i = 0; i < params.length && i < numberOfParams; i++) {\r\n                    result.push(undefinedToNull(params[i]));\r\n                }\r\n                if (params.length < numberOfParams) {\r\n                    for (let i = params.length; i < numberOfParams; i++) {\r\n                        result.push(null);\r\n                    }\r\n                }\r\n                break;\r\n        }\r\n        return result;\r\n    }\r\n    let connection = {\r\n        sendNotification: (type, ...params) => {\r\n            throwIfClosedOrDisposed();\r\n            let method;\r\n            let messageParams;\r\n            if (Is.string(type)) {\r\n                method = type;\r\n                switch (params.length) {\r\n                    case 0:\r\n                        messageParams = null;\r\n                        break;\r\n                    case 1:\r\n                        messageParams = params[0];\r\n                        break;\r\n                    default:\r\n                        messageParams = params;\r\n                        break;\r\n                }\r\n            }\r\n            else {\r\n                method = type.method;\r\n                messageParams = computeMessageParams(type, params);\r\n            }\r\n            let notificationMessage = {\r\n                jsonrpc: version,\r\n                method: method,\r\n                params: messageParams\r\n            };\r\n            traceSendingNotification(notificationMessage);\r\n            messageWriter.write(notificationMessage);\r\n        },\r\n        onNotification: (type, handler) => {\r\n            throwIfClosedOrDisposed();\r\n            if (Is.func(type)) {\r\n                starNotificationHandler = type;\r\n            }\r\n            else if (handler) {\r\n                if (Is.string(type)) {\r\n                    notificationHandlers[type] = { type: undefined, handler };\r\n                }\r\n                else {\r\n                    notificationHandlers[type.method] = { type, handler };\r\n                }\r\n            }\r\n        },\r\n        onProgress: (_type, token, handler) => {\r\n            if (progressHandlers.has(token)) {\r\n                throw new Error(`Progress handler for token ${token} already registered`);\r\n            }\r\n            progressHandlers.set(token, handler);\r\n            return {\r\n                dispose: () => {\r\n                    progressHandlers.delete(token);\r\n                }\r\n            };\r\n        },\r\n        sendProgress: (_type, token, value) => {\r\n            connection.sendNotification(ProgressNotification.type, { token, value });\r\n        },\r\n        onUnhandledProgress: unhandledProgressEmitter.event,\r\n        sendRequest: (type, ...params) => {\r\n            throwIfClosedOrDisposed();\r\n            throwIfNotListening();\r\n            let method;\r\n            let messageParams;\r\n            let token = undefined;\r\n            if (Is.string(type)) {\r\n                method = type;\r\n                switch (params.length) {\r\n                    case 0:\r\n                        messageParams = null;\r\n                        break;\r\n                    case 1:\r\n                        // The cancellation token is optional so it can also be undefined.\r\n                        if (cancellation_1.CancellationToken.is(params[0])) {\r\n                            messageParams = null;\r\n                            token = params[0];\r\n                        }\r\n                        else {\r\n                            messageParams = undefinedToNull(params[0]);\r\n                        }\r\n                        break;\r\n                    default:\r\n                        const last = params.length - 1;\r\n                        if (cancellation_1.CancellationToken.is(params[last])) {\r\n                            token = params[last];\r\n                            if (params.length === 2) {\r\n                                messageParams = undefinedToNull(params[0]);\r\n                            }\r\n                            else {\r\n                                messageParams = params.slice(0, last).map(value => undefinedToNull(value));\r\n                            }\r\n                        }\r\n                        else {\r\n                            messageParams = params.map(value => undefinedToNull(value));\r\n                        }\r\n                        break;\r\n                }\r\n            }\r\n            else {\r\n                method = type.method;\r\n                messageParams = computeMessageParams(type, params);\r\n                let numberOfParams = type.numberOfParams;\r\n                token = cancellation_1.CancellationToken.is(params[numberOfParams]) ? params[numberOfParams] : undefined;\r\n            }\r\n            let id = sequenceNumber++;\r\n            let result = new Promise((resolve, reject) => {\r\n                let requestMessage = {\r\n                    jsonrpc: version,\r\n                    id: id,\r\n                    method: method,\r\n                    params: messageParams\r\n                };\r\n                let responsePromise = { method: method, timerStart: Date.now(), resolve, reject };\r\n                traceSendingRequest(requestMessage);\r\n                try {\r\n                    messageWriter.write(requestMessage);\r\n                }\r\n                catch (e) {\r\n                    // Writing the message failed. So we need to reject the promise.\r\n                    responsePromise.reject(new messages_1.ResponseError(messages_1.ErrorCodes.MessageWriteError, e.message ? e.message : 'Unknown reason'));\r\n                    responsePromise = null;\r\n                }\r\n                if (responsePromise) {\r\n                    responsePromises[String(id)] = responsePromise;\r\n                }\r\n            });\r\n            if (token) {\r\n                token.onCancellationRequested(() => {\r\n                    connection.sendNotification(CancelNotification.type, { id });\r\n                });\r\n            }\r\n            return result;\r\n        },\r\n        onRequest: (type, handler) => {\r\n            throwIfClosedOrDisposed();\r\n            if (Is.func(type)) {\r\n                starRequestHandler = type;\r\n            }\r\n            else if (handler) {\r\n                if (Is.string(type)) {\r\n                    requestHandlers[type] = { type: undefined, handler };\r\n                }\r\n                else {\r\n                    requestHandlers[type.method] = { type, handler };\r\n                }\r\n            }\r\n        },\r\n        trace: (_value, _tracer, sendNotificationOrTraceOptions) => {\r\n            let _sendNotification = false;\r\n            let _traceFormat = TraceFormat.Text;\r\n            if (sendNotificationOrTraceOptions !== void 0) {\r\n                if (Is.boolean(sendNotificationOrTraceOptions)) {\r\n                    _sendNotification = sendNotificationOrTraceOptions;\r\n                }\r\n                else {\r\n                    _sendNotification = sendNotificationOrTraceOptions.sendNotification || false;\r\n                    _traceFormat = sendNotificationOrTraceOptions.traceFormat || TraceFormat.Text;\r\n                }\r\n            }\r\n            trace = _value;\r\n            traceFormat = _traceFormat;\r\n            if (trace === Trace.Off) {\r\n                tracer = undefined;\r\n            }\r\n            else {\r\n                tracer = _tracer;\r\n            }\r\n            if (_sendNotification && !isClosed() && !isDisposed()) {\r\n                connection.sendNotification(SetTraceNotification.type, { value: Trace.toString(_value) });\r\n            }\r\n        },\r\n        onError: errorEmitter.event,\r\n        onClose: closeEmitter.event,\r\n        onUnhandledNotification: unhandledNotificationEmitter.event,\r\n        onDispose: disposeEmitter.event,\r\n        dispose: () => {\r\n            if (isDisposed()) {\r\n                return;\r\n            }\r\n            state = ConnectionState.Disposed;\r\n            disposeEmitter.fire(undefined);\r\n            let error = new Error('Connection got disposed.');\r\n            Object.keys(responsePromises).forEach((key) => {\r\n                responsePromises[key].reject(error);\r\n            });\r\n            responsePromises = Object.create(null);\r\n            requestTokens = Object.create(null);\r\n            messageQueue = new linkedMap_1.LinkedMap();\r\n            // Test for backwards compatibility\r\n            if (Is.func(messageWriter.dispose)) {\r\n                messageWriter.dispose();\r\n            }\r\n            if (Is.func(messageReader.dispose)) {\r\n                messageReader.dispose();\r\n            }\r\n        },\r\n        listen: () => {\r\n            throwIfClosedOrDisposed();\r\n            throwIfListening();\r\n            state = ConnectionState.Listening;\r\n            messageReader.listen(callback);\r\n        },\r\n        inspect: () => {\r\n            // eslint-disable-next-line no-console\r\n            console.log('inspect');\r\n        }\r\n    };\r\n    connection.onNotification(LogTraceNotification.type, (params) => {\r\n        if (trace === Trace.Off || !tracer) {\r\n            return;\r\n        }\r\n        tracer.log(params.message, trace === Trace.Verbose ? params.verbose : undefined);\r\n    });\r\n    connection.onNotification(ProgressNotification.type, (params) => {\r\n        const handler = progressHandlers.get(params.token);\r\n        if (handler) {\r\n            handler(params.value);\r\n        }\r\n        else {\r\n            unhandledProgressEmitter.fire(params);\r\n        }\r\n    });\r\n    return connection;\r\n}\r\nfunction isMessageReader(value) {\r\n    return value.listen !== void 0 && value.read === void 0;\r\n}\r\nfunction isMessageWriter(value) {\r\n    return value.write !== void 0 && value.end === void 0;\r\n}\r\nfunction createMessageConnection(input, output, logger, strategy) {\r\n    if (!logger) {\r\n        logger = exports.NullLogger;\r\n    }\r\n    let reader = isMessageReader(input) ? input : new messageReader_1.StreamMessageReader(input);\r\n    let writer = isMessageWriter(output) ? output : new messageWriter_1.StreamMessageWriter(output);\r\n    return _createMessageConnection(reader, writer, logger, strategy);\r\n}\r\nexports.createMessageConnection = createMessageConnection;\r\n", "(function (factory) {\r\n    if (typeof module === \"object\" && typeof module.exports === \"object\") {\r\n        var v = factory(require, exports);\r\n        if (v !== undefined) module.exports = v;\r\n    }\r\n    else if (typeof define === \"function\" && define.amd) {\r\n        define([\"require\", \"exports\"], factory);\r\n    }\r\n})(function (require, exports) {\r\n    /* --------------------------------------------------------------------------------------------\r\n     * Copyright (c) Microsoft Corporation. All rights reserved.\r\n     * Licensed under the MIT License. See License.txt in the project root for license information.\r\n     * ------------------------------------------------------------------------------------------ */\r\n    'use strict';\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    /**\r\n     * The Position namespace provides helper functions to work with\r\n     * [Position](#Position) literals.\r\n     */\r\n    var Position;\r\n    (function (Position) {\r\n        /**\r\n         * Creates a new Position literal from the given line and character.\r\n         * @param line The position's line.\r\n         * @param character The position's character.\r\n         */\r\n        function create(line, character) {\r\n            return { line: line, character: character };\r\n        }\r\n        Position.create = create;\r\n        /**\r\n         * Checks whether the given liternal conforms to the [Position](#Position) interface.\r\n         */\r\n        function is(value) {\r\n            var candidate = value;\r\n            return Is.objectLiteral(candidate) && Is.number(candidate.line) && Is.number(candidate.character);\r\n        }\r\n        Position.is = is;\r\n    })(Position = exports.Position || (exports.Position = {}));\r\n    /**\r\n     * The Range namespace provides helper functions to work with\r\n     * [Range](#Range) literals.\r\n     */\r\n    var Range;\r\n    (function (Range) {\r\n        function create(one, two, three, four) {\r\n            if (Is.number(one) && Is.number(two) && Is.number(three) && Is.number(four)) {\r\n                return { start: Position.create(one, two), end: Position.create(three, four) };\r\n            }\r\n            else if (Position.is(one) && Position.is(two)) {\r\n                return { start: one, end: two };\r\n            }\r\n            else {\r\n                throw new Error(\"Range#create called with invalid arguments[\" + one + \", \" + two + \", \" + three + \", \" + four + \"]\");\r\n            }\r\n        }\r\n        Range.create = create;\r\n        /**\r\n         * Checks whether the given literal conforms to the [Range](#Range) interface.\r\n         */\r\n        function is(value) {\r\n            var candidate = value;\r\n            return Is.objectLiteral(candidate) && Position.is(candidate.start) && Position.is(candidate.end);\r\n        }\r\n        Range.is = is;\r\n    })(Range = exports.Range || (exports.Range = {}));\r\n    /**\r\n     * The Location namespace provides helper functions to work with\r\n     * [Location](#Location) literals.\r\n     */\r\n    var Location;\r\n    (function (Location) {\r\n        /**\r\n         * Creates a Location literal.\r\n         * @param uri The location's uri.\r\n         * @param range The location's range.\r\n         */\r\n        function create(uri, range) {\r\n            return { uri: uri, range: range };\r\n        }\r\n        Location.create = create;\r\n        /**\r\n         * Checks whether the given literal conforms to the [Location](#Location) interface.\r\n         */\r\n        function is(value) {\r\n            var candidate = value;\r\n            return Is.defined(candidate) && Range.is(candidate.range) && (Is.string(candidate.uri) || Is.undefined(candidate.uri));\r\n        }\r\n        Location.is = is;\r\n    })(Location = exports.Location || (exports.Location = {}));\r\n    /**\r\n     * The LocationLink namespace provides helper functions to work with\r\n     * [LocationLink](#LocationLink) literals.\r\n     */\r\n    var LocationLink;\r\n    (function (LocationLink) {\r\n        /**\r\n         * Creates a LocationLink literal.\r\n         * @param targetUri The definition's uri.\r\n         * @param targetRange The full range of the definition.\r\n         * @param targetSelectionRange The span of the symbol definition at the target.\r\n         * @param originSelectionRange The span of the symbol being defined in the originating source file.\r\n         */\r\n        function create(targetUri, targetRange, targetSelectionRange, originSelectionRange) {\r\n            return { targetUri: targetUri, targetRange: targetRange, targetSelectionRange: targetSelectionRange, originSelectionRange: originSelectionRange };\r\n        }\r\n        LocationLink.create = create;\r\n        /**\r\n         * Checks whether the given literal conforms to the [LocationLink](#LocationLink) interface.\r\n         */\r\n        function is(value) {\r\n            var candidate = value;\r\n            return Is.defined(candidate) && Range.is(candidate.targetRange) && Is.string(candidate.targetUri)\r\n                && (Range.is(candidate.targetSelectionRange) || Is.undefined(candidate.targetSelectionRange))\r\n                && (Range.is(candidate.originSelectionRange) || Is.undefined(candidate.originSelectionRange));\r\n        }\r\n        LocationLink.is = is;\r\n    })(LocationLink = exports.LocationLink || (exports.LocationLink = {}));\r\n    /**\r\n     * The Color namespace provides helper functions to work with\r\n     * [Color](#Color) literals.\r\n     */\r\n    var Color;\r\n    (function (Color) {\r\n        /**\r\n         * Creates a new Color literal.\r\n         */\r\n        function create(red, green, blue, alpha) {\r\n            return {\r\n                red: red,\r\n                green: green,\r\n                blue: blue,\r\n                alpha: alpha,\r\n            };\r\n        }\r\n        Color.create = create;\r\n        /**\r\n         * Checks whether the given literal conforms to the [Color](#Color) interface.\r\n         */\r\n        function is(value) {\r\n            var candidate = value;\r\n            return Is.number(candidate.red)\r\n                && Is.number(candidate.green)\r\n                && Is.number(candidate.blue)\r\n                && Is.number(candidate.alpha);\r\n        }\r\n        Color.is = is;\r\n    })(Color = exports.Color || (exports.Color = {}));\r\n    /**\r\n     * The ColorInformation namespace provides helper functions to work with\r\n     * [ColorInformation](#ColorInformation) literals.\r\n     */\r\n    var ColorInformation;\r\n    (function (ColorInformation) {\r\n        /**\r\n         * Creates a new ColorInformation literal.\r\n         */\r\n        function create(range, color) {\r\n            return {\r\n                range: range,\r\n                color: color,\r\n            };\r\n        }\r\n        ColorInformation.create = create;\r\n        /**\r\n         * Checks whether the given literal conforms to the [ColorInformation](#ColorInformation) interface.\r\n         */\r\n        function is(value) {\r\n            var candidate = value;\r\n            return Range.is(candidate.range) && Color.is(candidate.color);\r\n        }\r\n        ColorInformation.is = is;\r\n    })(ColorInformation = exports.ColorInformation || (exports.ColorInformation = {}));\r\n    /**\r\n     * The Color namespace provides helper functions to work with\r\n     * [ColorPresentation](#ColorPresentation) literals.\r\n     */\r\n    var ColorPresentation;\r\n    (function (ColorPresentation) {\r\n        /**\r\n         * Creates a new ColorInformation literal.\r\n         */\r\n        function create(label, textEdit, additionalTextEdits) {\r\n            return {\r\n                label: label,\r\n                textEdit: textEdit,\r\n                additionalTextEdits: additionalTextEdits,\r\n            };\r\n        }\r\n        ColorPresentation.create = create;\r\n        /**\r\n         * Checks whether the given literal conforms to the [ColorInformation](#ColorInformation) interface.\r\n         */\r\n        function is(value) {\r\n            var candidate = value;\r\n            return Is.string(candidate.label)\r\n                && (Is.undefined(candidate.textEdit) || TextEdit.is(candidate))\r\n                && (Is.undefined(candidate.additionalTextEdits) || Is.typedArray(candidate.additionalTextEdits, TextEdit.is));\r\n        }\r\n        ColorPresentation.is = is;\r\n    })(ColorPresentation = exports.ColorPresentation || (exports.ColorPresentation = {}));\r\n    /**\r\n     * Enum of known range kinds\r\n     */\r\n    var FoldingRangeKind;\r\n    (function (FoldingRangeKind) {\r\n        /**\r\n         * Folding range for a comment\r\n         */\r\n        FoldingRangeKind[\"Comment\"] = \"comment\";\r\n        /**\r\n         * Folding range for a imports or includes\r\n         */\r\n        FoldingRangeKind[\"Imports\"] = \"imports\";\r\n        /**\r\n         * Folding range for a region (e.g. `#region`)\r\n         */\r\n        FoldingRangeKind[\"Region\"] = \"region\";\r\n    })(FoldingRangeKind = exports.FoldingRangeKind || (exports.FoldingRangeKind = {}));\r\n    /**\r\n     * The folding range namespace provides helper functions to work with\r\n     * [FoldingRange](#FoldingRange) literals.\r\n     */\r\n    var FoldingRange;\r\n    (function (FoldingRange) {\r\n        /**\r\n         * Creates a new FoldingRange literal.\r\n         */\r\n        function create(startLine, endLine, startCharacter, endCharacter, kind) {\r\n            var result = {\r\n                startLine: startLine,\r\n                endLine: endLine\r\n            };\r\n            if (Is.defined(startCharacter)) {\r\n                result.startCharacter = startCharacter;\r\n            }\r\n            if (Is.defined(endCharacter)) {\r\n                result.endCharacter = endCharacter;\r\n            }\r\n            if (Is.defined(kind)) {\r\n                result.kind = kind;\r\n            }\r\n            return result;\r\n        }\r\n        FoldingRange.create = create;\r\n        /**\r\n         * Checks whether the given literal conforms to the [FoldingRange](#FoldingRange) interface.\r\n         */\r\n        function is(value) {\r\n            var candidate = value;\r\n            return Is.number(candidate.startLine) && Is.number(candidate.startLine)\r\n                && (Is.undefined(candidate.startCharacter) || Is.number(candidate.startCharacter))\r\n                && (Is.undefined(candidate.endCharacter) || Is.number(candidate.endCharacter))\r\n                && (Is.undefined(candidate.kind) || Is.string(candidate.kind));\r\n        }\r\n        FoldingRange.is = is;\r\n    })(FoldingRange = exports.FoldingRange || (exports.FoldingRange = {}));\r\n    /**\r\n     * The DiagnosticRelatedInformation namespace provides helper functions to work with\r\n     * [DiagnosticRelatedInformation](#DiagnosticRelatedInformation) literals.\r\n     */\r\n    var DiagnosticRelatedInformation;\r\n    (function (DiagnosticRelatedInformation) {\r\n        /**\r\n         * Creates a new DiagnosticRelatedInformation literal.\r\n         */\r\n        function create(location, message) {\r\n            return {\r\n                location: location,\r\n                message: message\r\n            };\r\n        }\r\n        DiagnosticRelatedInformation.create = create;\r\n        /**\r\n         * Checks whether the given literal conforms to the [DiagnosticRelatedInformation](#DiagnosticRelatedInformation) interface.\r\n         */\r\n        function is(value) {\r\n            var candidate = value;\r\n            return Is.defined(candidate) && Location.is(candidate.location) && Is.string(candidate.message);\r\n        }\r\n        DiagnosticRelatedInformation.is = is;\r\n    })(DiagnosticRelatedInformation = exports.DiagnosticRelatedInformation || (exports.DiagnosticRelatedInformation = {}));\r\n    /**\r\n     * The diagnostic's severity.\r\n     */\r\n    var DiagnosticSeverity;\r\n    (function (DiagnosticSeverity) {\r\n        /**\r\n         * Reports an error.\r\n         */\r\n        DiagnosticSeverity.Error = 1;\r\n        /**\r\n         * Reports a warning.\r\n         */\r\n        DiagnosticSeverity.Warning = 2;\r\n        /**\r\n         * Reports an information.\r\n         */\r\n        DiagnosticSeverity.Information = 3;\r\n        /**\r\n         * Reports a hint.\r\n         */\r\n        DiagnosticSeverity.Hint = 4;\r\n    })(DiagnosticSeverity = exports.DiagnosticSeverity || (exports.DiagnosticSeverity = {}));\r\n    /**\r\n     * The diagnostic tags.\r\n     *\r\n     * @since 3.15.0\r\n     */\r\n    var DiagnosticTag;\r\n    (function (DiagnosticTag) {\r\n        /**\r\n         * Unused or unnecessary code.\r\n         *\r\n         * Clients are allowed to render diagnostics with this tag faded out instead of having\r\n         * an error squiggle.\r\n         */\r\n        DiagnosticTag.Unnecessary = 1;\r\n        /**\r\n         * Deprecated or obsolete code.\r\n         *\r\n         * Clients are allowed to rendered diagnostics with this tag strike through.\r\n         */\r\n        DiagnosticTag.Deprecated = 2;\r\n    })(DiagnosticTag = exports.DiagnosticTag || (exports.DiagnosticTag = {}));\r\n    /**\r\n     * The Diagnostic namespace provides helper functions to work with\r\n     * [Diagnostic](#Diagnostic) literals.\r\n     */\r\n    var Diagnostic;\r\n    (function (Diagnostic) {\r\n        /**\r\n         * Creates a new Diagnostic literal.\r\n         */\r\n        function create(range, message, severity, code, source, relatedInformation) {\r\n            var result = { range: range, message: message };\r\n            if (Is.defined(severity)) {\r\n                result.severity = severity;\r\n            }\r\n            if (Is.defined(code)) {\r\n                result.code = code;\r\n            }\r\n            if (Is.defined(source)) {\r\n                result.source = source;\r\n            }\r\n            if (Is.defined(relatedInformation)) {\r\n                result.relatedInformation = relatedInformation;\r\n            }\r\n            return result;\r\n        }\r\n        Diagnostic.create = create;\r\n        /**\r\n         * Checks whether the given literal conforms to the [Diagnostic](#Diagnostic) interface.\r\n         */\r\n        function is(value) {\r\n            var candidate = value;\r\n            return Is.defined(candidate)\r\n                && Range.is(candidate.range)\r\n                && Is.string(candidate.message)\r\n                && (Is.number(candidate.severity) || Is.undefined(candidate.severity))\r\n                && (Is.number(candidate.code) || Is.string(candidate.code) || Is.undefined(candidate.code))\r\n                && (Is.string(candidate.source) || Is.undefined(candidate.source))\r\n                && (Is.undefined(candidate.relatedInformation) || Is.typedArray(candidate.relatedInformation, DiagnosticRelatedInformation.is));\r\n        }\r\n        Diagnostic.is = is;\r\n    })(Diagnostic = exports.Diagnostic || (exports.Diagnostic = {}));\r\n    /**\r\n     * The Command namespace provides helper functions to work with\r\n     * [Command](#Command) literals.\r\n     */\r\n    var Command;\r\n    (function (Command) {\r\n        /**\r\n         * Creates a new Command literal.\r\n         */\r\n        function create(title, command) {\r\n            var args = [];\r\n            for (var _i = 2; _i < arguments.length; _i++) {\r\n                args[_i - 2] = arguments[_i];\r\n            }\r\n            var result = { title: title, command: command };\r\n            if (Is.defined(args) && args.length > 0) {\r\n                result.arguments = args;\r\n            }\r\n            return result;\r\n        }\r\n        Command.create = create;\r\n        /**\r\n         * Checks whether the given literal conforms to the [Command](#Command) interface.\r\n         */\r\n        function is(value) {\r\n            var candidate = value;\r\n            return Is.defined(candidate) && Is.string(candidate.title) && Is.string(candidate.command);\r\n        }\r\n        Command.is = is;\r\n    })(Command = exports.Command || (exports.Command = {}));\r\n    /**\r\n     * The TextEdit namespace provides helper function to create replace,\r\n     * insert and delete edits more easily.\r\n     */\r\n    var TextEdit;\r\n    (function (TextEdit) {\r\n        /**\r\n         * Creates a replace text edit.\r\n         * @param range The range of text to be replaced.\r\n         * @param newText The new text.\r\n         */\r\n        function replace(range, newText) {\r\n            return { range: range, newText: newText };\r\n        }\r\n        TextEdit.replace = replace;\r\n        /**\r\n         * Creates a insert text edit.\r\n         * @param position The position to insert the text at.\r\n         * @param newText The text to be inserted.\r\n         */\r\n        function insert(position, newText) {\r\n            return { range: { start: position, end: position }, newText: newText };\r\n        }\r\n        TextEdit.insert = insert;\r\n        /**\r\n         * Creates a delete text edit.\r\n         * @param range The range of text to be deleted.\r\n         */\r\n        function del(range) {\r\n            return { range: range, newText: '' };\r\n        }\r\n        TextEdit.del = del;\r\n        function is(value) {\r\n            var candidate = value;\r\n            return Is.objectLiteral(candidate)\r\n                && Is.string(candidate.newText)\r\n                && Range.is(candidate.range);\r\n        }\r\n        TextEdit.is = is;\r\n    })(TextEdit = exports.TextEdit || (exports.TextEdit = {}));\r\n    /**\r\n     * The TextDocumentEdit namespace provides helper function to create\r\n     * an edit that manipulates a text document.\r\n     */\r\n    var TextDocumentEdit;\r\n    (function (TextDocumentEdit) {\r\n        /**\r\n         * Creates a new `TextDocumentEdit`\r\n         */\r\n        function create(textDocument, edits) {\r\n            return { textDocument: textDocument, edits: edits };\r\n        }\r\n        TextDocumentEdit.create = create;\r\n        function is(value) {\r\n            var candidate = value;\r\n            return Is.defined(candidate)\r\n                && VersionedTextDocumentIdentifier.is(candidate.textDocument)\r\n                && Array.isArray(candidate.edits);\r\n        }\r\n        TextDocumentEdit.is = is;\r\n    })(TextDocumentEdit = exports.TextDocumentEdit || (exports.TextDocumentEdit = {}));\r\n    var CreateFile;\r\n    (function (CreateFile) {\r\n        function create(uri, options) {\r\n            var result = {\r\n                kind: 'create',\r\n                uri: uri\r\n            };\r\n            if (options !== void 0 && (options.overwrite !== void 0 || options.ignoreIfExists !== void 0)) {\r\n                result.options = options;\r\n            }\r\n            return result;\r\n        }\r\n        CreateFile.create = create;\r\n        function is(value) {\r\n            var candidate = value;\r\n            return candidate && candidate.kind === 'create' && Is.string(candidate.uri) &&\r\n                (candidate.options === void 0 ||\r\n                    ((candidate.options.overwrite === void 0 || Is.boolean(candidate.options.overwrite)) && (candidate.options.ignoreIfExists === void 0 || Is.boolean(candidate.options.ignoreIfExists))));\r\n        }\r\n        CreateFile.is = is;\r\n    })(CreateFile = exports.CreateFile || (exports.CreateFile = {}));\r\n    var RenameFile;\r\n    (function (RenameFile) {\r\n        function create(oldUri, newUri, options) {\r\n            var result = {\r\n                kind: 'rename',\r\n                oldUri: oldUri,\r\n                newUri: newUri\r\n            };\r\n            if (options !== void 0 && (options.overwrite !== void 0 || options.ignoreIfExists !== void 0)) {\r\n                result.options = options;\r\n            }\r\n            return result;\r\n        }\r\n        RenameFile.create = create;\r\n        function is(value) {\r\n            var candidate = value;\r\n            return candidate && candidate.kind === 'rename' && Is.string(candidate.oldUri) && Is.string(candidate.newUri) &&\r\n                (candidate.options === void 0 ||\r\n                    ((candidate.options.overwrite === void 0 || Is.boolean(candidate.options.overwrite)) && (candidate.options.ignoreIfExists === void 0 || Is.boolean(candidate.options.ignoreIfExists))));\r\n        }\r\n        RenameFile.is = is;\r\n    })(RenameFile = exports.RenameFile || (exports.RenameFile = {}));\r\n    var DeleteFile;\r\n    (function (DeleteFile) {\r\n        function create(uri, options) {\r\n            var result = {\r\n                kind: 'delete',\r\n                uri: uri\r\n            };\r\n            if (options !== void 0 && (options.recursive !== void 0 || options.ignoreIfNotExists !== void 0)) {\r\n                result.options = options;\r\n            }\r\n            return result;\r\n        }\r\n        DeleteFile.create = create;\r\n        function is(value) {\r\n            var candidate = value;\r\n            return candidate && candidate.kind === 'delete' && Is.string(candidate.uri) &&\r\n                (candidate.options === void 0 ||\r\n                    ((candidate.options.recursive === void 0 || Is.boolean(candidate.options.recursive)) && (candidate.options.ignoreIfNotExists === void 0 || Is.boolean(candidate.options.ignoreIfNotExists))));\r\n        }\r\n        DeleteFile.is = is;\r\n    })(DeleteFile = exports.DeleteFile || (exports.DeleteFile = {}));\r\n    var WorkspaceEdit;\r\n    (function (WorkspaceEdit) {\r\n        function is(value) {\r\n            var candidate = value;\r\n            return candidate &&\r\n                (candidate.changes !== void 0 || candidate.documentChanges !== void 0) &&\r\n                (candidate.documentChanges === void 0 || candidate.documentChanges.every(function (change) {\r\n                    if (Is.string(change.kind)) {\r\n                        return CreateFile.is(change) || RenameFile.is(change) || DeleteFile.is(change);\r\n                    }\r\n                    else {\r\n                        return TextDocumentEdit.is(change);\r\n                    }\r\n                }));\r\n        }\r\n        WorkspaceEdit.is = is;\r\n    })(WorkspaceEdit = exports.WorkspaceEdit || (exports.WorkspaceEdit = {}));\r\n    var TextEditChangeImpl = /** @class */ (function () {\r\n        function TextEditChangeImpl(edits) {\r\n            this.edits = edits;\r\n        }\r\n        TextEditChangeImpl.prototype.insert = function (position, newText) {\r\n            this.edits.push(TextEdit.insert(position, newText));\r\n        };\r\n        TextEditChangeImpl.prototype.replace = function (range, newText) {\r\n            this.edits.push(TextEdit.replace(range, newText));\r\n        };\r\n        TextEditChangeImpl.prototype.delete = function (range) {\r\n            this.edits.push(TextEdit.del(range));\r\n        };\r\n        TextEditChangeImpl.prototype.add = function (edit) {\r\n            this.edits.push(edit);\r\n        };\r\n        TextEditChangeImpl.prototype.all = function () {\r\n            return this.edits;\r\n        };\r\n        TextEditChangeImpl.prototype.clear = function () {\r\n            this.edits.splice(0, this.edits.length);\r\n        };\r\n        return TextEditChangeImpl;\r\n    }());\r\n    /**\r\n     * A workspace change helps constructing changes to a workspace.\r\n     */\r\n    var WorkspaceChange = /** @class */ (function () {\r\n        function WorkspaceChange(workspaceEdit) {\r\n            var _this = this;\r\n            this._textEditChanges = Object.create(null);\r\n            if (workspaceEdit) {\r\n                this._workspaceEdit = workspaceEdit;\r\n                if (workspaceEdit.documentChanges) {\r\n                    workspaceEdit.documentChanges.forEach(function (change) {\r\n                        if (TextDocumentEdit.is(change)) {\r\n                            var textEditChange = new TextEditChangeImpl(change.edits);\r\n                            _this._textEditChanges[change.textDocument.uri] = textEditChange;\r\n                        }\r\n                    });\r\n                }\r\n                else if (workspaceEdit.changes) {\r\n                    Object.keys(workspaceEdit.changes).forEach(function (key) {\r\n                        var textEditChange = new TextEditChangeImpl(workspaceEdit.changes[key]);\r\n                        _this._textEditChanges[key] = textEditChange;\r\n                    });\r\n                }\r\n            }\r\n        }\r\n        Object.defineProperty(WorkspaceChange.prototype, \"edit\", {\r\n            /**\r\n             * Returns the underlying [WorkspaceEdit](#WorkspaceEdit) literal\r\n             * use to be returned from a workspace edit operation like rename.\r\n             */\r\n            get: function () {\r\n                return this._workspaceEdit;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        WorkspaceChange.prototype.getTextEditChange = function (key) {\r\n            if (VersionedTextDocumentIdentifier.is(key)) {\r\n                if (!this._workspaceEdit) {\r\n                    this._workspaceEdit = {\r\n                        documentChanges: []\r\n                    };\r\n                }\r\n                if (!this._workspaceEdit.documentChanges) {\r\n                    throw new Error('Workspace edit is not configured for document changes.');\r\n                }\r\n                var textDocument = key;\r\n                var result = this._textEditChanges[textDocument.uri];\r\n                if (!result) {\r\n                    var edits = [];\r\n                    var textDocumentEdit = {\r\n                        textDocument: textDocument,\r\n                        edits: edits\r\n                    };\r\n                    this._workspaceEdit.documentChanges.push(textDocumentEdit);\r\n                    result = new TextEditChangeImpl(edits);\r\n                    this._textEditChanges[textDocument.uri] = result;\r\n                }\r\n                return result;\r\n            }\r\n            else {\r\n                if (!this._workspaceEdit) {\r\n                    this._workspaceEdit = {\r\n                        changes: Object.create(null)\r\n                    };\r\n                }\r\n                if (!this._workspaceEdit.changes) {\r\n                    throw new Error('Workspace edit is not configured for normal text edit changes.');\r\n                }\r\n                var result = this._textEditChanges[key];\r\n                if (!result) {\r\n                    var edits = [];\r\n                    this._workspaceEdit.changes[key] = edits;\r\n                    result = new TextEditChangeImpl(edits);\r\n                    this._textEditChanges[key] = result;\r\n                }\r\n                return result;\r\n            }\r\n        };\r\n        WorkspaceChange.prototype.createFile = function (uri, options) {\r\n            this.checkDocumentChanges();\r\n            this._workspaceEdit.documentChanges.push(CreateFile.create(uri, options));\r\n        };\r\n        WorkspaceChange.prototype.renameFile = function (oldUri, newUri, options) {\r\n            this.checkDocumentChanges();\r\n            this._workspaceEdit.documentChanges.push(RenameFile.create(oldUri, newUri, options));\r\n        };\r\n        WorkspaceChange.prototype.deleteFile = function (uri, options) {\r\n            this.checkDocumentChanges();\r\n            this._workspaceEdit.documentChanges.push(DeleteFile.create(uri, options));\r\n        };\r\n        WorkspaceChange.prototype.checkDocumentChanges = function () {\r\n            if (!this._workspaceEdit || !this._workspaceEdit.documentChanges) {\r\n                throw new Error('Workspace edit is not configured for document changes.');\r\n            }\r\n        };\r\n        return WorkspaceChange;\r\n    }());\r\n    exports.WorkspaceChange = WorkspaceChange;\r\n    /**\r\n     * The TextDocumentIdentifier namespace provides helper functions to work with\r\n     * [TextDocumentIdentifier](#TextDocumentIdentifier) literals.\r\n     */\r\n    var TextDocumentIdentifier;\r\n    (function (TextDocumentIdentifier) {\r\n        /**\r\n         * Creates a new TextDocumentIdentifier literal.\r\n         * @param uri The document's uri.\r\n         */\r\n        function create(uri) {\r\n            return { uri: uri };\r\n        }\r\n        TextDocumentIdentifier.create = create;\r\n        /**\r\n         * Checks whether the given literal conforms to the [TextDocumentIdentifier](#TextDocumentIdentifier) interface.\r\n         */\r\n        function is(value) {\r\n            var candidate = value;\r\n            return Is.defined(candidate) && Is.string(candidate.uri);\r\n        }\r\n        TextDocumentIdentifier.is = is;\r\n    })(TextDocumentIdentifier = exports.TextDocumentIdentifier || (exports.TextDocumentIdentifier = {}));\r\n    /**\r\n     * The VersionedTextDocumentIdentifier namespace provides helper functions to work with\r\n     * [VersionedTextDocumentIdentifier](#VersionedTextDocumentIdentifier) literals.\r\n     */\r\n    var VersionedTextDocumentIdentifier;\r\n    (function (VersionedTextDocumentIdentifier) {\r\n        /**\r\n         * Creates a new VersionedTextDocumentIdentifier literal.\r\n         * @param uri The document's uri.\r\n         * @param uri The document's text.\r\n         */\r\n        function create(uri, version) {\r\n            return { uri: uri, version: version };\r\n        }\r\n        VersionedTextDocumentIdentifier.create = create;\r\n        /**\r\n         * Checks whether the given literal conforms to the [VersionedTextDocumentIdentifier](#VersionedTextDocumentIdentifier) interface.\r\n         */\r\n        function is(value) {\r\n            var candidate = value;\r\n            return Is.defined(candidate) && Is.string(candidate.uri) && (candidate.version === null || Is.number(candidate.version));\r\n        }\r\n        VersionedTextDocumentIdentifier.is = is;\r\n    })(VersionedTextDocumentIdentifier = exports.VersionedTextDocumentIdentifier || (exports.VersionedTextDocumentIdentifier = {}));\r\n    /**\r\n     * The TextDocumentItem namespace provides helper functions to work with\r\n     * [TextDocumentItem](#TextDocumentItem) literals.\r\n     */\r\n    var TextDocumentItem;\r\n    (function (TextDocumentItem) {\r\n        /**\r\n         * Creates a new TextDocumentItem literal.\r\n         * @param uri The document's uri.\r\n         * @param languageId The document's language identifier.\r\n         * @param version The document's version number.\r\n         * @param text The document's text.\r\n         */\r\n        function create(uri, languageId, version, text) {\r\n            return { uri: uri, languageId: languageId, version: version, text: text };\r\n        }\r\n        TextDocumentItem.create = create;\r\n        /**\r\n         * Checks whether the given literal conforms to the [TextDocumentItem](#TextDocumentItem) interface.\r\n         */\r\n        function is(value) {\r\n            var candidate = value;\r\n            return Is.defined(candidate) && Is.string(candidate.uri) && Is.string(candidate.languageId) && Is.number(candidate.version) && Is.string(candidate.text);\r\n        }\r\n        TextDocumentItem.is = is;\r\n    })(TextDocumentItem = exports.TextDocumentItem || (exports.TextDocumentItem = {}));\r\n    /**\r\n     * Describes the content type that a client supports in various\r\n     * result literals like `Hover`, `ParameterInfo` or `CompletionItem`.\r\n     *\r\n     * Please note that `MarkupKinds` must not start with a `$`. This kinds\r\n     * are reserved for internal usage.\r\n     */\r\n    var MarkupKind;\r\n    (function (MarkupKind) {\r\n        /**\r\n         * Plain text is supported as a content format\r\n         */\r\n        MarkupKind.PlainText = 'plaintext';\r\n        /**\r\n         * Markdown is supported as a content format\r\n         */\r\n        MarkupKind.Markdown = 'markdown';\r\n    })(MarkupKind = exports.MarkupKind || (exports.MarkupKind = {}));\r\n    (function (MarkupKind) {\r\n        /**\r\n         * Checks whether the given value is a value of the [MarkupKind](#MarkupKind) type.\r\n         */\r\n        function is(value) {\r\n            var candidate = value;\r\n            return candidate === MarkupKind.PlainText || candidate === MarkupKind.Markdown;\r\n        }\r\n        MarkupKind.is = is;\r\n    })(MarkupKind = exports.MarkupKind || (exports.MarkupKind = {}));\r\n    var MarkupContent;\r\n    (function (MarkupContent) {\r\n        /**\r\n         * Checks whether the given value conforms to the [MarkupContent](#MarkupContent) interface.\r\n         */\r\n        function is(value) {\r\n            var candidate = value;\r\n            return Is.objectLiteral(value) && MarkupKind.is(candidate.kind) && Is.string(candidate.value);\r\n        }\r\n        MarkupContent.is = is;\r\n    })(MarkupContent = exports.MarkupContent || (exports.MarkupContent = {}));\r\n    /**\r\n     * The kind of a completion entry.\r\n     */\r\n    var CompletionItemKind;\r\n    (function (CompletionItemKind) {\r\n        CompletionItemKind.Text = 1;\r\n        CompletionItemKind.Method = 2;\r\n        CompletionItemKind.Function = 3;\r\n        CompletionItemKind.Constructor = 4;\r\n        CompletionItemKind.Field = 5;\r\n        CompletionItemKind.Variable = 6;\r\n        CompletionItemKind.Class = 7;\r\n        CompletionItemKind.Interface = 8;\r\n        CompletionItemKind.Module = 9;\r\n        CompletionItemKind.Property = 10;\r\n        CompletionItemKind.Unit = 11;\r\n        CompletionItemKind.Value = 12;\r\n        CompletionItemKind.Enum = 13;\r\n        CompletionItemKind.Keyword = 14;\r\n        CompletionItemKind.Snippet = 15;\r\n        CompletionItemKind.Color = 16;\r\n        CompletionItemKind.File = 17;\r\n        CompletionItemKind.Reference = 18;\r\n        CompletionItemKind.Folder = 19;\r\n        CompletionItemKind.EnumMember = 20;\r\n        CompletionItemKind.Constant = 21;\r\n        CompletionItemKind.Struct = 22;\r\n        CompletionItemKind.Event = 23;\r\n        CompletionItemKind.Operator = 24;\r\n        CompletionItemKind.TypeParameter = 25;\r\n    })(CompletionItemKind = exports.CompletionItemKind || (exports.CompletionItemKind = {}));\r\n    /**\r\n     * Defines whether the insert text in a completion item should be interpreted as\r\n     * plain text or a snippet.\r\n     */\r\n    var InsertTextFormat;\r\n    (function (InsertTextFormat) {\r\n        /**\r\n         * The primary text to be inserted is treated as a plain string.\r\n         */\r\n        InsertTextFormat.PlainText = 1;\r\n        /**\r\n         * The primary text to be inserted is treated as a snippet.\r\n         *\r\n         * A snippet can define tab stops and placeholders with `$1`, `$2`\r\n         * and `${3:foo}`. `$0` defines the final tab stop, it defaults to\r\n         * the end of the snippet. Placeholders with equal identifiers are linked,\r\n         * that is typing in one will update others too.\r\n         *\r\n         * See also: https://github.com/Microsoft/vscode/blob/master/src/vs/editor/contrib/snippet/common/snippet.md\r\n         */\r\n        InsertTextFormat.Snippet = 2;\r\n    })(InsertTextFormat = exports.InsertTextFormat || (exports.InsertTextFormat = {}));\r\n    /**\r\n     * Completion item tags are extra annotations that tweak the rendering of a completion\r\n     * item.\r\n     *\r\n     * @since 3.15.0\r\n     */\r\n    var CompletionItemTag;\r\n    (function (CompletionItemTag) {\r\n        /**\r\n         * Render a completion as obsolete, usually using a strike-out.\r\n         */\r\n        CompletionItemTag.Deprecated = 1;\r\n    })(CompletionItemTag = exports.CompletionItemTag || (exports.CompletionItemTag = {}));\r\n    /**\r\n     * The CompletionItem namespace provides functions to deal with\r\n     * completion items.\r\n     */\r\n    var CompletionItem;\r\n    (function (CompletionItem) {\r\n        /**\r\n         * Create a completion item and seed it with a label.\r\n         * @param label The completion item's label\r\n         */\r\n        function create(label) {\r\n            return { label: label };\r\n        }\r\n        CompletionItem.create = create;\r\n    })(CompletionItem = exports.CompletionItem || (exports.CompletionItem = {}));\r\n    /**\r\n     * The CompletionList namespace provides functions to deal with\r\n     * completion lists.\r\n     */\r\n    var CompletionList;\r\n    (function (CompletionList) {\r\n        /**\r\n         * Creates a new completion list.\r\n         *\r\n         * @param items The completion items.\r\n         * @param isIncomplete The list is not complete.\r\n         */\r\n        function create(items, isIncomplete) {\r\n            return { items: items ? items : [], isIncomplete: !!isIncomplete };\r\n        }\r\n        CompletionList.create = create;\r\n    })(CompletionList = exports.CompletionList || (exports.CompletionList = {}));\r\n    var MarkedString;\r\n    (function (MarkedString) {\r\n        /**\r\n         * Creates a marked string from plain text.\r\n         *\r\n         * @param plainText The plain text.\r\n         */\r\n        function fromPlainText(plainText) {\r\n            return plainText.replace(/[\\\\`*_{}[\\]()#+\\-.!]/g, '\\\\$&'); // escape markdown syntax tokens: http://daringfireball.net/projects/markdown/syntax#backslash\r\n        }\r\n        MarkedString.fromPlainText = fromPlainText;\r\n        /**\r\n         * Checks whether the given value conforms to the [MarkedString](#MarkedString) type.\r\n         */\r\n        function is(value) {\r\n            var candidate = value;\r\n            return Is.string(candidate) || (Is.objectLiteral(candidate) && Is.string(candidate.language) && Is.string(candidate.value));\r\n        }\r\n        MarkedString.is = is;\r\n    })(MarkedString = exports.MarkedString || (exports.MarkedString = {}));\r\n    var Hover;\r\n    (function (Hover) {\r\n        /**\r\n         * Checks whether the given value conforms to the [Hover](#Hover) interface.\r\n         */\r\n        function is(value) {\r\n            var candidate = value;\r\n            return !!candidate && Is.objectLiteral(candidate) && (MarkupContent.is(candidate.contents) ||\r\n                MarkedString.is(candidate.contents) ||\r\n                Is.typedArray(candidate.contents, MarkedString.is)) && (value.range === void 0 || Range.is(value.range));\r\n        }\r\n        Hover.is = is;\r\n    })(Hover = exports.Hover || (exports.Hover = {}));\r\n    /**\r\n     * The ParameterInformation namespace provides helper functions to work with\r\n     * [ParameterInformation](#ParameterInformation) literals.\r\n     */\r\n    var ParameterInformation;\r\n    (function (ParameterInformation) {\r\n        /**\r\n         * Creates a new parameter information literal.\r\n         *\r\n         * @param label A label string.\r\n         * @param documentation A doc string.\r\n         */\r\n        function create(label, documentation) {\r\n            return documentation ? { label: label, documentation: documentation } : { label: label };\r\n        }\r\n        ParameterInformation.create = create;\r\n    })(ParameterInformation = exports.ParameterInformation || (exports.ParameterInformation = {}));\r\n    /**\r\n     * The SignatureInformation namespace provides helper functions to work with\r\n     * [SignatureInformation](#SignatureInformation) literals.\r\n     */\r\n    var SignatureInformation;\r\n    (function (SignatureInformation) {\r\n        function create(label, documentation) {\r\n            var parameters = [];\r\n            for (var _i = 2; _i < arguments.length; _i++) {\r\n                parameters[_i - 2] = arguments[_i];\r\n            }\r\n            var result = { label: label };\r\n            if (Is.defined(documentation)) {\r\n                result.documentation = documentation;\r\n            }\r\n            if (Is.defined(parameters)) {\r\n                result.parameters = parameters;\r\n            }\r\n            else {\r\n                result.parameters = [];\r\n            }\r\n            return result;\r\n        }\r\n        SignatureInformation.create = create;\r\n    })(SignatureInformation = exports.SignatureInformation || (exports.SignatureInformation = {}));\r\n    /**\r\n     * A document highlight kind.\r\n     */\r\n    var DocumentHighlightKind;\r\n    (function (DocumentHighlightKind) {\r\n        /**\r\n         * A textual occurrence.\r\n         */\r\n        DocumentHighlightKind.Text = 1;\r\n        /**\r\n         * Read-access of a symbol, like reading a variable.\r\n         */\r\n        DocumentHighlightKind.Read = 2;\r\n        /**\r\n         * Write-access of a symbol, like writing to a variable.\r\n         */\r\n        DocumentHighlightKind.Write = 3;\r\n    })(DocumentHighlightKind = exports.DocumentHighlightKind || (exports.DocumentHighlightKind = {}));\r\n    /**\r\n     * DocumentHighlight namespace to provide helper functions to work with\r\n     * [DocumentHighlight](#DocumentHighlight) literals.\r\n     */\r\n    var DocumentHighlight;\r\n    (function (DocumentHighlight) {\r\n        /**\r\n         * Create a DocumentHighlight object.\r\n         * @param range The range the highlight applies to.\r\n         */\r\n        function create(range, kind) {\r\n            var result = { range: range };\r\n            if (Is.number(kind)) {\r\n                result.kind = kind;\r\n            }\r\n            return result;\r\n        }\r\n        DocumentHighlight.create = create;\r\n    })(DocumentHighlight = exports.DocumentHighlight || (exports.DocumentHighlight = {}));\r\n    /**\r\n     * A symbol kind.\r\n     */\r\n    var SymbolKind;\r\n    (function (SymbolKind) {\r\n        SymbolKind.File = 1;\r\n        SymbolKind.Module = 2;\r\n        SymbolKind.Namespace = 3;\r\n        SymbolKind.Package = 4;\r\n        SymbolKind.Class = 5;\r\n        SymbolKind.Method = 6;\r\n        SymbolKind.Property = 7;\r\n        SymbolKind.Field = 8;\r\n        SymbolKind.Constructor = 9;\r\n        SymbolKind.Enum = 10;\r\n        SymbolKind.Interface = 11;\r\n        SymbolKind.Function = 12;\r\n        SymbolKind.Variable = 13;\r\n        SymbolKind.Constant = 14;\r\n        SymbolKind.String = 15;\r\n        SymbolKind.Number = 16;\r\n        SymbolKind.Boolean = 17;\r\n        SymbolKind.Array = 18;\r\n        SymbolKind.Object = 19;\r\n        SymbolKind.Key = 20;\r\n        SymbolKind.Null = 21;\r\n        SymbolKind.EnumMember = 22;\r\n        SymbolKind.Struct = 23;\r\n        SymbolKind.Event = 24;\r\n        SymbolKind.Operator = 25;\r\n        SymbolKind.TypeParameter = 26;\r\n    })(SymbolKind = exports.SymbolKind || (exports.SymbolKind = {}));\r\n    /**\r\n     * Symbol tags are extra annotations that tweak the rendering of a symbol.\r\n     * @since 3.15\r\n     */\r\n    var SymbolTag;\r\n    (function (SymbolTag) {\r\n        /**\r\n         * Render a symbol as obsolete, usually using a strike-out.\r\n         */\r\n        SymbolTag.Deprecated = 1;\r\n    })(SymbolTag = exports.SymbolTag || (exports.SymbolTag = {}));\r\n    var SymbolInformation;\r\n    (function (SymbolInformation) {\r\n        /**\r\n         * Creates a new symbol information literal.\r\n         *\r\n         * @param name The name of the symbol.\r\n         * @param kind The kind of the symbol.\r\n         * @param range The range of the location of the symbol.\r\n         * @param uri The resource of the location of symbol, defaults to the current document.\r\n         * @param containerName The name of the symbol containing the symbol.\r\n         */\r\n        function create(name, kind, range, uri, containerName) {\r\n            var result = {\r\n                name: name,\r\n                kind: kind,\r\n                location: { uri: uri, range: range }\r\n            };\r\n            if (containerName) {\r\n                result.containerName = containerName;\r\n            }\r\n            return result;\r\n        }\r\n        SymbolInformation.create = create;\r\n    })(SymbolInformation = exports.SymbolInformation || (exports.SymbolInformation = {}));\r\n    var DocumentSymbol;\r\n    (function (DocumentSymbol) {\r\n        /**\r\n         * Creates a new symbol information literal.\r\n         *\r\n         * @param name The name of the symbol.\r\n         * @param detail The detail of the symbol.\r\n         * @param kind The kind of the symbol.\r\n         * @param range The range of the symbol.\r\n         * @param selectionRange The selectionRange of the symbol.\r\n         * @param children Children of the symbol.\r\n         */\r\n        function create(name, detail, kind, range, selectionRange, children) {\r\n            var result = {\r\n                name: name,\r\n                detail: detail,\r\n                kind: kind,\r\n                range: range,\r\n                selectionRange: selectionRange\r\n            };\r\n            if (children !== void 0) {\r\n                result.children = children;\r\n            }\r\n            return result;\r\n        }\r\n        DocumentSymbol.create = create;\r\n        /**\r\n         * Checks whether the given literal conforms to the [DocumentSymbol](#DocumentSymbol) interface.\r\n         */\r\n        function is(value) {\r\n            var candidate = value;\r\n            return candidate &&\r\n                Is.string(candidate.name) && Is.number(candidate.kind) &&\r\n                Range.is(candidate.range) && Range.is(candidate.selectionRange) &&\r\n                (candidate.detail === void 0 || Is.string(candidate.detail)) &&\r\n                (candidate.deprecated === void 0 || Is.boolean(candidate.deprecated)) &&\r\n                (candidate.children === void 0 || Array.isArray(candidate.children));\r\n        }\r\n        DocumentSymbol.is = is;\r\n    })(DocumentSymbol = exports.DocumentSymbol || (exports.DocumentSymbol = {}));\r\n    /**\r\n     * A set of predefined code action kinds\r\n     */\r\n    var CodeActionKind;\r\n    (function (CodeActionKind) {\r\n        /**\r\n         * Empty kind.\r\n         */\r\n        CodeActionKind.Empty = '';\r\n        /**\r\n         * Base kind for quickfix actions: 'quickfix'\r\n         */\r\n        CodeActionKind.QuickFix = 'quickfix';\r\n        /**\r\n         * Base kind for refactoring actions: 'refactor'\r\n         */\r\n        CodeActionKind.Refactor = 'refactor';\r\n        /**\r\n         * Base kind for refactoring extraction actions: 'refactor.extract'\r\n         *\r\n         * Example extract actions:\r\n         *\r\n         * - Extract method\r\n         * - Extract function\r\n         * - Extract variable\r\n         * - Extract interface from class\r\n         * - ...\r\n         */\r\n        CodeActionKind.RefactorExtract = 'refactor.extract';\r\n        /**\r\n         * Base kind for refactoring inline actions: 'refactor.inline'\r\n         *\r\n         * Example inline actions:\r\n         *\r\n         * - Inline function\r\n         * - Inline variable\r\n         * - Inline constant\r\n         * - ...\r\n         */\r\n        CodeActionKind.RefactorInline = 'refactor.inline';\r\n        /**\r\n         * Base kind for refactoring rewrite actions: 'refactor.rewrite'\r\n         *\r\n         * Example rewrite actions:\r\n         *\r\n         * - Convert JavaScript function to class\r\n         * - Add or remove parameter\r\n         * - Encapsulate field\r\n         * - Make method static\r\n         * - Move method to base class\r\n         * - ...\r\n         */\r\n        CodeActionKind.RefactorRewrite = 'refactor.rewrite';\r\n        /**\r\n         * Base kind for source actions: `source`\r\n         *\r\n         * Source code actions apply to the entire file.\r\n         */\r\n        CodeActionKind.Source = 'source';\r\n        /**\r\n         * Base kind for an organize imports source action: `source.organizeImports`\r\n         */\r\n        CodeActionKind.SourceOrganizeImports = 'source.organizeImports';\r\n        /**\r\n         * Base kind for auto-fix source actions: `source.fixAll`.\r\n         *\r\n         * Fix all actions automatically fix errors that have a clear fix that do not require user input.\r\n         * They should not suppress errors or perform unsafe fixes such as generating new types or classes.\r\n         *\r\n         * @since 3.15.0\r\n         */\r\n        CodeActionKind.SourceFixAll = 'source.fixAll';\r\n    })(CodeActionKind = exports.CodeActionKind || (exports.CodeActionKind = {}));\r\n    /**\r\n     * The CodeActionContext namespace provides helper functions to work with\r\n     * [CodeActionContext](#CodeActionContext) literals.\r\n     */\r\n    var CodeActionContext;\r\n    (function (CodeActionContext) {\r\n        /**\r\n         * Creates a new CodeActionContext literal.\r\n         */\r\n        function create(diagnostics, only) {\r\n            var result = { diagnostics: diagnostics };\r\n            if (only !== void 0 && only !== null) {\r\n                result.only = only;\r\n            }\r\n            return result;\r\n        }\r\n        CodeActionContext.create = create;\r\n        /**\r\n         * Checks whether the given literal conforms to the [CodeActionContext](#CodeActionContext) interface.\r\n         */\r\n        function is(value) {\r\n            var candidate = value;\r\n            return Is.defined(candidate) && Is.typedArray(candidate.diagnostics, Diagnostic.is) && (candidate.only === void 0 || Is.typedArray(candidate.only, Is.string));\r\n        }\r\n        CodeActionContext.is = is;\r\n    })(CodeActionContext = exports.CodeActionContext || (exports.CodeActionContext = {}));\r\n    var CodeAction;\r\n    (function (CodeAction) {\r\n        function create(title, commandOrEdit, kind) {\r\n            var result = { title: title };\r\n            if (Command.is(commandOrEdit)) {\r\n                result.command = commandOrEdit;\r\n            }\r\n            else {\r\n                result.edit = commandOrEdit;\r\n            }\r\n            if (kind !== void 0) {\r\n                result.kind = kind;\r\n            }\r\n            return result;\r\n        }\r\n        CodeAction.create = create;\r\n        function is(value) {\r\n            var candidate = value;\r\n            return candidate && Is.string(candidate.title) &&\r\n                (candidate.diagnostics === void 0 || Is.typedArray(candidate.diagnostics, Diagnostic.is)) &&\r\n                (candidate.kind === void 0 || Is.string(candidate.kind)) &&\r\n                (candidate.edit !== void 0 || candidate.command !== void 0) &&\r\n                (candidate.command === void 0 || Command.is(candidate.command)) &&\r\n                (candidate.isPreferred === void 0 || Is.boolean(candidate.isPreferred)) &&\r\n                (candidate.edit === void 0 || WorkspaceEdit.is(candidate.edit));\r\n        }\r\n        CodeAction.is = is;\r\n    })(CodeAction = exports.CodeAction || (exports.CodeAction = {}));\r\n    /**\r\n     * The CodeLens namespace provides helper functions to work with\r\n     * [CodeLens](#CodeLens) literals.\r\n     */\r\n    var CodeLens;\r\n    (function (CodeLens) {\r\n        /**\r\n         * Creates a new CodeLens literal.\r\n         */\r\n        function create(range, data) {\r\n            var result = { range: range };\r\n            if (Is.defined(data)) {\r\n                result.data = data;\r\n            }\r\n            return result;\r\n        }\r\n        CodeLens.create = create;\r\n        /**\r\n         * Checks whether the given literal conforms to the [CodeLens](#CodeLens) interface.\r\n         */\r\n        function is(value) {\r\n            var candidate = value;\r\n            return Is.defined(candidate) && Range.is(candidate.range) && (Is.undefined(candidate.command) || Command.is(candidate.command));\r\n        }\r\n        CodeLens.is = is;\r\n    })(CodeLens = exports.CodeLens || (exports.CodeLens = {}));\r\n    /**\r\n     * The FormattingOptions namespace provides helper functions to work with\r\n     * [FormattingOptions](#FormattingOptions) literals.\r\n     */\r\n    var FormattingOptions;\r\n    (function (FormattingOptions) {\r\n        /**\r\n         * Creates a new FormattingOptions literal.\r\n         */\r\n        function create(tabSize, insertSpaces) {\r\n            return { tabSize: tabSize, insertSpaces: insertSpaces };\r\n        }\r\n        FormattingOptions.create = create;\r\n        /**\r\n         * Checks whether the given literal conforms to the [FormattingOptions](#FormattingOptions) interface.\r\n         */\r\n        function is(value) {\r\n            var candidate = value;\r\n            return Is.defined(candidate) && Is.number(candidate.tabSize) && Is.boolean(candidate.insertSpaces);\r\n        }\r\n        FormattingOptions.is = is;\r\n    })(FormattingOptions = exports.FormattingOptions || (exports.FormattingOptions = {}));\r\n    /**\r\n     * The DocumentLink namespace provides helper functions to work with\r\n     * [DocumentLink](#DocumentLink) literals.\r\n     */\r\n    var DocumentLink;\r\n    (function (DocumentLink) {\r\n        /**\r\n         * Creates a new DocumentLink literal.\r\n         */\r\n        function create(range, target, data) {\r\n            return { range: range, target: target, data: data };\r\n        }\r\n        DocumentLink.create = create;\r\n        /**\r\n         * Checks whether the given literal conforms to the [DocumentLink](#DocumentLink) interface.\r\n         */\r\n        function is(value) {\r\n            var candidate = value;\r\n            return Is.defined(candidate) && Range.is(candidate.range) && (Is.undefined(candidate.target) || Is.string(candidate.target));\r\n        }\r\n        DocumentLink.is = is;\r\n    })(DocumentLink = exports.DocumentLink || (exports.DocumentLink = {}));\r\n    /**\r\n     * The SelectionRange namespace provides helper function to work with\r\n     * SelectionRange literals.\r\n     */\r\n    var SelectionRange;\r\n    (function (SelectionRange) {\r\n        /**\r\n         * Creates a new SelectionRange\r\n         * @param range the range.\r\n         * @param parent an optional parent.\r\n         */\r\n        function create(range, parent) {\r\n            return { range: range, parent: parent };\r\n        }\r\n        SelectionRange.create = create;\r\n        function is(value) {\r\n            var candidate = value;\r\n            return candidate !== undefined && Range.is(candidate.range) && (candidate.parent === undefined || SelectionRange.is(candidate.parent));\r\n        }\r\n        SelectionRange.is = is;\r\n    })(SelectionRange = exports.SelectionRange || (exports.SelectionRange = {}));\r\n    exports.EOL = ['\\n', '\\r\\n', '\\r'];\r\n    /**\r\n     * @deprecated Use the text document from the new vscode-languageserver-textdocument package.\r\n     */\r\n    var TextDocument;\r\n    (function (TextDocument) {\r\n        /**\r\n         * Creates a new ITextDocument literal from the given uri and content.\r\n         * @param uri The document's uri.\r\n         * @param languageId  The document's language Id.\r\n         * @param content The document's content.\r\n         */\r\n        function create(uri, languageId, version, content) {\r\n            return new FullTextDocument(uri, languageId, version, content);\r\n        }\r\n        TextDocument.create = create;\r\n        /**\r\n         * Checks whether the given literal conforms to the [ITextDocument](#ITextDocument) interface.\r\n         */\r\n        function is(value) {\r\n            var candidate = value;\r\n            return Is.defined(candidate) && Is.string(candidate.uri) && (Is.undefined(candidate.languageId) || Is.string(candidate.languageId)) && Is.number(candidate.lineCount)\r\n                && Is.func(candidate.getText) && Is.func(candidate.positionAt) && Is.func(candidate.offsetAt) ? true : false;\r\n        }\r\n        TextDocument.is = is;\r\n        function applyEdits(document, edits) {\r\n            var text = document.getText();\r\n            var sortedEdits = mergeSort(edits, function (a, b) {\r\n                var diff = a.range.start.line - b.range.start.line;\r\n                if (diff === 0) {\r\n                    return a.range.start.character - b.range.start.character;\r\n                }\r\n                return diff;\r\n            });\r\n            var lastModifiedOffset = text.length;\r\n            for (var i = sortedEdits.length - 1; i >= 0; i--) {\r\n                var e = sortedEdits[i];\r\n                var startOffset = document.offsetAt(e.range.start);\r\n                var endOffset = document.offsetAt(e.range.end);\r\n                if (endOffset <= lastModifiedOffset) {\r\n                    text = text.substring(0, startOffset) + e.newText + text.substring(endOffset, text.length);\r\n                }\r\n                else {\r\n                    throw new Error('Overlapping edit');\r\n                }\r\n                lastModifiedOffset = startOffset;\r\n            }\r\n            return text;\r\n        }\r\n        TextDocument.applyEdits = applyEdits;\r\n        function mergeSort(data, compare) {\r\n            if (data.length <= 1) {\r\n                // sorted\r\n                return data;\r\n            }\r\n            var p = (data.length / 2) | 0;\r\n            var left = data.slice(0, p);\r\n            var right = data.slice(p);\r\n            mergeSort(left, compare);\r\n            mergeSort(right, compare);\r\n            var leftIdx = 0;\r\n            var rightIdx = 0;\r\n            var i = 0;\r\n            while (leftIdx < left.length && rightIdx < right.length) {\r\n                var ret = compare(left[leftIdx], right[rightIdx]);\r\n                if (ret <= 0) {\r\n                    // smaller_equal -> take left to preserve order\r\n                    data[i++] = left[leftIdx++];\r\n                }\r\n                else {\r\n                    // greater -> take right\r\n                    data[i++] = right[rightIdx++];\r\n                }\r\n            }\r\n            while (leftIdx < left.length) {\r\n                data[i++] = left[leftIdx++];\r\n            }\r\n            while (rightIdx < right.length) {\r\n                data[i++] = right[rightIdx++];\r\n            }\r\n            return data;\r\n        }\r\n    })(TextDocument = exports.TextDocument || (exports.TextDocument = {}));\r\n    var FullTextDocument = /** @class */ (function () {\r\n        function FullTextDocument(uri, languageId, version, content) {\r\n            this._uri = uri;\r\n            this._languageId = languageId;\r\n            this._version = version;\r\n            this._content = content;\r\n            this._lineOffsets = undefined;\r\n        }\r\n        Object.defineProperty(FullTextDocument.prototype, \"uri\", {\r\n            get: function () {\r\n                return this._uri;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(FullTextDocument.prototype, \"languageId\", {\r\n            get: function () {\r\n                return this._languageId;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(FullTextDocument.prototype, \"version\", {\r\n            get: function () {\r\n                return this._version;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        FullTextDocument.prototype.getText = function (range) {\r\n            if (range) {\r\n                var start = this.offsetAt(range.start);\r\n                var end = this.offsetAt(range.end);\r\n                return this._content.substring(start, end);\r\n            }\r\n            return this._content;\r\n        };\r\n        FullTextDocument.prototype.update = function (event, version) {\r\n            this._content = event.text;\r\n            this._version = version;\r\n            this._lineOffsets = undefined;\r\n        };\r\n        FullTextDocument.prototype.getLineOffsets = function () {\r\n            if (this._lineOffsets === undefined) {\r\n                var lineOffsets = [];\r\n                var text = this._content;\r\n                var isLineStart = true;\r\n                for (var i = 0; i < text.length; i++) {\r\n                    if (isLineStart) {\r\n                        lineOffsets.push(i);\r\n                        isLineStart = false;\r\n                    }\r\n                    var ch = text.charAt(i);\r\n                    isLineStart = (ch === '\\r' || ch === '\\n');\r\n                    if (ch === '\\r' && i + 1 < text.length && text.charAt(i + 1) === '\\n') {\r\n                        i++;\r\n                    }\r\n                }\r\n                if (isLineStart && text.length > 0) {\r\n                    lineOffsets.push(text.length);\r\n                }\r\n                this._lineOffsets = lineOffsets;\r\n            }\r\n            return this._lineOffsets;\r\n        };\r\n        FullTextDocument.prototype.positionAt = function (offset) {\r\n            offset = Math.max(Math.min(offset, this._content.length), 0);\r\n            var lineOffsets = this.getLineOffsets();\r\n            var low = 0, high = lineOffsets.length;\r\n            if (high === 0) {\r\n                return Position.create(0, offset);\r\n            }\r\n            while (low < high) {\r\n                var mid = Math.floor((low + high) / 2);\r\n                if (lineOffsets[mid] > offset) {\r\n                    high = mid;\r\n                }\r\n                else {\r\n                    low = mid + 1;\r\n                }\r\n            }\r\n            // low is the least x for which the line offset is larger than the current offset\r\n            // or array.length if no line offset is larger than the current offset\r\n            var line = low - 1;\r\n            return Position.create(line, offset - lineOffsets[line]);\r\n        };\r\n        FullTextDocument.prototype.offsetAt = function (position) {\r\n            var lineOffsets = this.getLineOffsets();\r\n            if (position.line >= lineOffsets.length) {\r\n                return this._content.length;\r\n            }\r\n            else if (position.line < 0) {\r\n                return 0;\r\n            }\r\n            var lineOffset = lineOffsets[position.line];\r\n            var nextLineOffset = (position.line + 1 < lineOffsets.length) ? lineOffsets[position.line + 1] : this._content.length;\r\n            return Math.max(Math.min(lineOffset + position.character, nextLineOffset), lineOffset);\r\n        };\r\n        Object.defineProperty(FullTextDocument.prototype, \"lineCount\", {\r\n            get: function () {\r\n                return this.getLineOffsets().length;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        return FullTextDocument;\r\n    }());\r\n    var Is;\r\n    (function (Is) {\r\n        var toString = Object.prototype.toString;\r\n        function defined(value) {\r\n            return typeof value !== 'undefined';\r\n        }\r\n        Is.defined = defined;\r\n        function undefined(value) {\r\n            return typeof value === 'undefined';\r\n        }\r\n        Is.undefined = undefined;\r\n        function boolean(value) {\r\n            return value === true || value === false;\r\n        }\r\n        Is.boolean = boolean;\r\n        function string(value) {\r\n            return toString.call(value) === '[object String]';\r\n        }\r\n        Is.string = string;\r\n        function number(value) {\r\n            return toString.call(value) === '[object Number]';\r\n        }\r\n        Is.number = number;\r\n        function func(value) {\r\n            return toString.call(value) === '[object Function]';\r\n        }\r\n        Is.func = func;\r\n        function objectLiteral(value) {\r\n            // Strictly speaking class instances pass this check as well. Since the LSP\r\n            // doesn't use classes we ignore this for now. If we do we need to add something\r\n            // like this: `Object.getPrototypeOf(Object.getPrototypeOf(x)) === null`\r\n            return value !== null && typeof value === 'object';\r\n        }\r\n        Is.objectLiteral = objectLiteral;\r\n        function typedArray(value, check) {\r\n            return Array.isArray(value) && value.every(check);\r\n        }\r\n        Is.typedArray = typedArray;\r\n    })(Is || (Is = {}));\r\n});\r\n", "/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nfunction boolean(value) {\r\n    return value === true || value === false;\r\n}\r\nexports.boolean = boolean;\r\nfunction string(value) {\r\n    return typeof value === 'string' || value instanceof String;\r\n}\r\nexports.string = string;\r\nfunction number(value) {\r\n    return typeof value === 'number' || value instanceof Number;\r\n}\r\nexports.number = number;\r\nfunction error(value) {\r\n    return value instanceof Error;\r\n}\r\nexports.error = error;\r\nfunction func(value) {\r\n    return typeof value === 'function';\r\n}\r\nexports.func = func;\r\nfunction array(value) {\r\n    return Array.isArray(value);\r\n}\r\nexports.array = array;\r\nfunction stringArray(value) {\r\n    return array(value) && value.every(elem => string(elem));\r\n}\r\nexports.stringArray = stringArray;\r\nfunction typedArray(value, check) {\r\n    return Array.isArray(value) && value.every(check);\r\n}\r\nexports.typedArray = typedArray;\r\nfunction objectLiteral(value) {\r\n    // Strictly speaking class instances pass this check as well. Since the LSP\r\n    // doesn't use classes we ignore this for now. If we do we need to add something\r\n    // like this: `Object.getPrototypeOf(Object.getPrototypeOf(x)) === null`\r\n    return value !== null && typeof value === 'object';\r\n}\r\nexports.objectLiteral = objectLiteral;\r\n", "/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst vscode_jsonrpc_1 = require(\"vscode-jsonrpc\");\r\nclass ProtocolRequestType0 extends vscode_jsonrpc_1.RequestType0 {\r\n    constructor(method) {\r\n        super(method);\r\n    }\r\n}\r\nexports.ProtocolRequestType0 = ProtocolRequestType0;\r\nclass ProtocolRequestType extends vscode_jsonrpc_1.RequestType {\r\n    constructor(method) {\r\n        super(method);\r\n    }\r\n}\r\nexports.ProtocolRequestType = ProtocolRequestType;\r\nclass ProtocolNotificationType extends vscode_jsonrpc_1.NotificationType {\r\n    constructor(method) {\r\n        super(method);\r\n    }\r\n}\r\nexports.ProtocolNotificationType = ProtocolNotificationType;\r\nclass ProtocolNotificationType0 extends vscode_jsonrpc_1.NotificationType0 {\r\n    constructor(method) {\r\n        super(method);\r\n    }\r\n}\r\nexports.ProtocolNotificationType0 = ProtocolNotificationType0;\r\n", "/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst vscode_jsonrpc_1 = require(\"vscode-jsonrpc\");\r\nconst messages_1 = require(\"./messages\");\r\n// @ts-ignore: to avoid inlining LocatioLink as dynamic import\r\nlet __noDynamicImport;\r\n/**\r\n * A request to resolve the implementation locations of a symbol at a given text\r\n * document position. The request's parameter is of type [TextDocumentPositioParams]\r\n * (#TextDocumentPositionParams) the response is of type [Definition](#Definition) or a\r\n * Thenable that resolves to such.\r\n */\r\nvar ImplementationRequest;\r\n(function (ImplementationRequest) {\r\n    ImplementationRequest.method = 'textDocument/implementation';\r\n    ImplementationRequest.type = new messages_1.ProtocolRequestType(ImplementationRequest.method);\r\n    /** @deprecated Use ImplementationRequest.type */\r\n    ImplementationRequest.resultType = new vscode_jsonrpc_1.ProgressType();\r\n})(ImplementationRequest = exports.ImplementationRequest || (exports.ImplementationRequest = {}));\r\n", "/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst vscode_jsonrpc_1 = require(\"vscode-jsonrpc\");\r\nconst messages_1 = require(\"./messages\");\r\n// @ts-ignore: to avoid inlining LocatioLink as dynamic import\r\nlet __noDynamicImport;\r\n/**\r\n * A request to resolve the type definition locations of a symbol at a given text\r\n * document position. The request's parameter is of type [TextDocumentPositioParams]\r\n * (#TextDocumentPositionParams) the response is of type [Definition](#Definition) or a\r\n * Thenable that resolves to such.\r\n */\r\nvar TypeDefinitionRequest;\r\n(function (TypeDefinitionRequest) {\r\n    TypeDefinitionRequest.method = 'textDocument/typeDefinition';\r\n    TypeDefinitionRequest.type = new messages_1.ProtocolRequestType(TypeDefinitionRequest.method);\r\n    /** @deprecated Use TypeDefinitionRequest.type */\r\n    TypeDefinitionRequest.resultType = new vscode_jsonrpc_1.ProgressType();\r\n})(TypeDefinitionRequest = exports.TypeDefinitionRequest || (exports.TypeDefinitionRequest = {}));\r\n", "/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst messages_1 = require(\"./messages\");\r\n/**\r\n * The `workspace/workspaceFolders` is sent from the server to the client to fetch the open workspace folders.\r\n */\r\nvar WorkspaceFoldersRequest;\r\n(function (WorkspaceFoldersRequest) {\r\n    WorkspaceFoldersRequest.type = new messages_1.ProtocolRequestType0('workspace/workspaceFolders');\r\n})(WorkspaceFoldersRequest = exports.WorkspaceFoldersRequest || (exports.WorkspaceFoldersRequest = {}));\r\n/**\r\n * The `workspace/didChangeWorkspaceFolders` notification is sent from the client to the server when the workspace\r\n * folder configuration changes.\r\n */\r\nvar DidChangeWorkspaceFoldersNotification;\r\n(function (DidChangeWorkspaceFoldersNotification) {\r\n    DidChangeWorkspaceFoldersNotification.type = new messages_1.ProtocolNotificationType('workspace/didChangeWorkspaceFolders');\r\n})(DidChangeWorkspaceFoldersNotification = exports.DidChangeWorkspaceFoldersNotification || (exports.DidChangeWorkspaceFoldersNotification = {}));\r\n", "/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst messages_1 = require(\"./messages\");\r\n/**\r\n * The 'workspace/configuration' request is sent from the server to the client to fetch a certain\r\n * configuration setting.\r\n *\r\n * This pull model replaces the old push model were the client signaled configuration change via an\r\n * event. If the server still needs to react to configuration changes (since the server caches the\r\n * result of `workspace/configuration` requests) the server should register for an empty configuration\r\n * change event and empty the cache if such an event is received.\r\n */\r\nvar ConfigurationRequest;\r\n(function (ConfigurationRequest) {\r\n    ConfigurationRequest.type = new messages_1.ProtocolRequestType('workspace/configuration');\r\n})(ConfigurationRequest = exports.ConfigurationRequest || (exports.ConfigurationRequest = {}));\r\n", "/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst vscode_jsonrpc_1 = require(\"vscode-jsonrpc\");\r\nconst messages_1 = require(\"./messages\");\r\n/**\r\n * A request to list all color symbols found in a given text document. The request's\r\n * parameter is of type [DocumentColorParams](#DocumentColorParams) the\r\n * response is of type [ColorInformation[]](#ColorInformation) or a Thenable\r\n * that resolves to such.\r\n */\r\nvar DocumentColorRequest;\r\n(function (DocumentColorRequest) {\r\n    DocumentColorRequest.method = 'textDocument/documentColor';\r\n    DocumentColorRequest.type = new messages_1.ProtocolRequestType(DocumentColorRequest.method);\r\n    /** @deprecated Use DocumentColorRequest.type */\r\n    DocumentColorRequest.resultType = new vscode_jsonrpc_1.ProgressType();\r\n})(DocumentColorRequest = exports.DocumentColorRequest || (exports.DocumentColorRequest = {}));\r\n/**\r\n * A request to list all presentation for a color. The request's\r\n * parameter is of type [ColorPresentationParams](#ColorPresentationParams) the\r\n * response is of type [ColorInformation[]](#ColorInformation) or a Thenable\r\n * that resolves to such.\r\n */\r\nvar ColorPresentationRequest;\r\n(function (ColorPresentationRequest) {\r\n    ColorPresentationRequest.type = new messages_1.ProtocolRequestType('textDocument/colorPresentation');\r\n})(ColorPresentationRequest = exports.ColorPresentationRequest || (exports.ColorPresentationRequest = {}));\r\n", "\"use strict\";\r\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst vscode_jsonrpc_1 = require(\"vscode-jsonrpc\");\r\nconst messages_1 = require(\"./messages\");\r\n/**\r\n * Enum of known range kinds\r\n */\r\nvar FoldingRangeKind;\r\n(function (FoldingRangeKind) {\r\n    /**\r\n     * Folding range for a comment\r\n     */\r\n    FoldingRangeKind[\"Comment\"] = \"comment\";\r\n    /**\r\n     * Folding range for a imports or includes\r\n     */\r\n    FoldingRangeKind[\"Imports\"] = \"imports\";\r\n    /**\r\n     * Folding range for a region (e.g. `#region`)\r\n     */\r\n    FoldingRangeKind[\"Region\"] = \"region\";\r\n})(FoldingRangeKind = exports.FoldingRangeKind || (exports.FoldingRangeKind = {}));\r\n/**\r\n * A request to provide folding ranges in a document. The request's\r\n * parameter is of type [FoldingRangeParams](#FoldingRangeParams), the\r\n * response is of type [FoldingRangeList](#FoldingRangeList) or a Thenable\r\n * that resolves to such.\r\n */\r\nvar FoldingRangeRequest;\r\n(function (FoldingRangeRequest) {\r\n    FoldingRangeRequest.method = 'textDocument/foldingRange';\r\n    FoldingRangeRequest.type = new messages_1.ProtocolRequestType(FoldingRangeRequest.method);\r\n    /** @deprecated Use FoldingRangeRequest.type */\r\n    FoldingRangeRequest.resultType = new vscode_jsonrpc_1.ProgressType();\r\n})(FoldingRangeRequest = exports.FoldingRangeRequest || (exports.FoldingRangeRequest = {}));\r\n", "/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst vscode_jsonrpc_1 = require(\"vscode-jsonrpc\");\r\nconst messages_1 = require(\"./messages\");\r\n// @ts-ignore: to avoid inlining LocatioLink as dynamic import\r\nlet __noDynamicImport;\r\n/**\r\n * A request to resolve the type definition locations of a symbol at a given text\r\n * document position. The request's parameter is of type [TextDocumentPositioParams]\r\n * (#TextDocumentPositionParams) the response is of type [Declaration](#Declaration)\r\n * or a typed array of [DeclarationLink](#DeclarationLink) or a Thenable that resolves\r\n * to such.\r\n */\r\nvar DeclarationRequest;\r\n(function (DeclarationRequest) {\r\n    DeclarationRequest.method = 'textDocument/declaration';\r\n    DeclarationRequest.type = new messages_1.ProtocolRequestType(DeclarationRequest.method);\r\n    /** @deprecated Use DeclarationRequest.type */\r\n    DeclarationRequest.resultType = new vscode_jsonrpc_1.ProgressType();\r\n})(DeclarationRequest = exports.DeclarationRequest || (exports.DeclarationRequest = {}));\r\n", "\"use strict\";\r\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst vscode_jsonrpc_1 = require(\"vscode-jsonrpc\");\r\nconst messages_1 = require(\"./messages\");\r\n/**\r\n * A request to provide selection ranges in a document. The request's\r\n * parameter is of type [SelectionRangeParams](#SelectionRangeParams), the\r\n * response is of type [SelectionRange[]](#SelectionRange[]) or a Thenable\r\n * that resolves to such.\r\n */\r\nvar SelectionRangeRequest;\r\n(function (SelectionRangeRequest) {\r\n    SelectionRangeRequest.method = 'textDocument/selectionRange';\r\n    SelectionRangeRequest.type = new messages_1.ProtocolRequestType(SelectionRangeRequest.method);\r\n    /** @deprecated  Use SelectionRangeRequest.type */\r\n    SelectionRangeRequest.resultType = new vscode_jsonrpc_1.ProgressType();\r\n})(SelectionRangeRequest = exports.SelectionRangeRequest || (exports.SelectionRangeRequest = {}));\r\n", "/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst vscode_jsonrpc_1 = require(\"vscode-jsonrpc\");\r\nconst messages_1 = require(\"./messages\");\r\nvar WorkDoneProgress;\r\n(function (WorkDoneProgress) {\r\n    WorkDoneProgress.type = new vscode_jsonrpc_1.ProgressType();\r\n})(WorkDoneProgress = exports.WorkDoneProgress || (exports.WorkDoneProgress = {}));\r\n/**\r\n * The `window/workDoneProgress/create` request is sent from the server to the client to initiate progress\r\n * reporting from the server.\r\n */\r\nvar WorkDoneProgressCreateRequest;\r\n(function (WorkDoneProgressCreateRequest) {\r\n    WorkDoneProgressCreateRequest.type = new messages_1.ProtocolRequestType('window/workDoneProgress/create');\r\n})(WorkDoneProgressCreateRequest = exports.WorkDoneProgressCreateRequest || (exports.WorkDoneProgressCreateRequest = {}));\r\n/**\r\n * The `window/workDoneProgress/cancel` notification is sent from  the client to the server to cancel a progress\r\n * initiated on the server side.\r\n */\r\nvar WorkDoneProgressCancelNotification;\r\n(function (WorkDoneProgressCancelNotification) {\r\n    WorkDoneProgressCancelNotification.type = new messages_1.ProtocolNotificationType('window/workDoneProgress/cancel');\r\n})(WorkDoneProgressCancelNotification = exports.WorkDoneProgressCancelNotification || (exports.WorkDoneProgressCancelNotification = {}));\r\n", "/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst Is = require(\"./utils/is\");\r\nconst vscode_jsonrpc_1 = require(\"vscode-jsonrpc\");\r\nconst messages_1 = require(\"./messages\");\r\nconst protocol_implementation_1 = require(\"./protocol.implementation\");\r\nexports.ImplementationRequest = protocol_implementation_1.ImplementationRequest;\r\nconst protocol_typeDefinition_1 = require(\"./protocol.typeDefinition\");\r\nexports.TypeDefinitionRequest = protocol_typeDefinition_1.TypeDefinitionRequest;\r\nconst protocol_workspaceFolders_1 = require(\"./protocol.workspaceFolders\");\r\nexports.WorkspaceFoldersRequest = protocol_workspaceFolders_1.WorkspaceFoldersRequest;\r\nexports.DidChangeWorkspaceFoldersNotification = protocol_workspaceFolders_1.DidChangeWorkspaceFoldersNotification;\r\nconst protocol_configuration_1 = require(\"./protocol.configuration\");\r\nexports.ConfigurationRequest = protocol_configuration_1.ConfigurationRequest;\r\nconst protocol_colorProvider_1 = require(\"./protocol.colorProvider\");\r\nexports.DocumentColorRequest = protocol_colorProvider_1.DocumentColorRequest;\r\nexports.ColorPresentationRequest = protocol_colorProvider_1.ColorPresentationRequest;\r\nconst protocol_foldingRange_1 = require(\"./protocol.foldingRange\");\r\nexports.FoldingRangeRequest = protocol_foldingRange_1.FoldingRangeRequest;\r\nconst protocol_declaration_1 = require(\"./protocol.declaration\");\r\nexports.DeclarationRequest = protocol_declaration_1.DeclarationRequest;\r\nconst protocol_selectionRange_1 = require(\"./protocol.selectionRange\");\r\nexports.SelectionRangeRequest = protocol_selectionRange_1.SelectionRangeRequest;\r\nconst protocol_progress_1 = require(\"./protocol.progress\");\r\nexports.WorkDoneProgress = protocol_progress_1.WorkDoneProgress;\r\nexports.WorkDoneProgressCreateRequest = protocol_progress_1.WorkDoneProgressCreateRequest;\r\nexports.WorkDoneProgressCancelNotification = protocol_progress_1.WorkDoneProgressCancelNotification;\r\n// @ts-ignore: to avoid inlining LocatioLink as dynamic import\r\nlet __noDynamicImport;\r\n/**\r\n * The DocumentFilter namespace provides helper functions to work with\r\n * [DocumentFilter](#DocumentFilter) literals.\r\n */\r\nvar DocumentFilter;\r\n(function (DocumentFilter) {\r\n    function is(value) {\r\n        const candidate = value;\r\n        return Is.string(candidate.language) || Is.string(candidate.scheme) || Is.string(candidate.pattern);\r\n    }\r\n    DocumentFilter.is = is;\r\n})(DocumentFilter = exports.DocumentFilter || (exports.DocumentFilter = {}));\r\n/**\r\n * The DocumentSelector namespace provides helper functions to work with\r\n * [DocumentSelector](#DocumentSelector)s.\r\n */\r\nvar DocumentSelector;\r\n(function (DocumentSelector) {\r\n    function is(value) {\r\n        if (!Array.isArray(value)) {\r\n            return false;\r\n        }\r\n        for (let elem of value) {\r\n            if (!Is.string(elem) && !DocumentFilter.is(elem)) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n    DocumentSelector.is = is;\r\n})(DocumentSelector = exports.DocumentSelector || (exports.DocumentSelector = {}));\r\n/**\r\n * The `client/registerCapability` request is sent from the server to the client to register a new capability\r\n * handler on the client side.\r\n */\r\nvar RegistrationRequest;\r\n(function (RegistrationRequest) {\r\n    RegistrationRequest.type = new messages_1.ProtocolRequestType('client/registerCapability');\r\n})(RegistrationRequest = exports.RegistrationRequest || (exports.RegistrationRequest = {}));\r\n/**\r\n * The `client/unregisterCapability` request is sent from the server to the client to unregister a previously registered capability\r\n * handler on the client side.\r\n */\r\nvar UnregistrationRequest;\r\n(function (UnregistrationRequest) {\r\n    UnregistrationRequest.type = new messages_1.ProtocolRequestType('client/unregisterCapability');\r\n})(UnregistrationRequest = exports.UnregistrationRequest || (exports.UnregistrationRequest = {}));\r\nvar ResourceOperationKind;\r\n(function (ResourceOperationKind) {\r\n    /**\r\n     * Supports creating new files and folders.\r\n     */\r\n    ResourceOperationKind.Create = 'create';\r\n    /**\r\n     * Supports renaming existing files and folders.\r\n     */\r\n    ResourceOperationKind.Rename = 'rename';\r\n    /**\r\n     * Supports deleting existing files and folders.\r\n     */\r\n    ResourceOperationKind.Delete = 'delete';\r\n})(ResourceOperationKind = exports.ResourceOperationKind || (exports.ResourceOperationKind = {}));\r\nvar FailureHandlingKind;\r\n(function (FailureHandlingKind) {\r\n    /**\r\n     * Applying the workspace change is simply aborted if one of the changes provided\r\n     * fails. All operations executed before the failing operation stay executed.\r\n     */\r\n    FailureHandlingKind.Abort = 'abort';\r\n    /**\r\n     * All operations are executed transactional. That means they either all\r\n     * succeed or no changes at all are applied to the workspace.\r\n     */\r\n    FailureHandlingKind.Transactional = 'transactional';\r\n    /**\r\n     * If the workspace edit contains only textual file changes they are executed transactional.\r\n     * If resource changes (create, rename or delete file) are part of the change the failure\r\n     * handling startegy is abort.\r\n     */\r\n    FailureHandlingKind.TextOnlyTransactional = 'textOnlyTransactional';\r\n    /**\r\n     * The client tries to undo the operations already executed. But there is no\r\n     * guarantee that this is succeeding.\r\n     */\r\n    FailureHandlingKind.Undo = 'undo';\r\n})(FailureHandlingKind = exports.FailureHandlingKind || (exports.FailureHandlingKind = {}));\r\n/**\r\n * The StaticRegistrationOptions namespace provides helper functions to work with\r\n * [StaticRegistrationOptions](#StaticRegistrationOptions) literals.\r\n */\r\nvar StaticRegistrationOptions;\r\n(function (StaticRegistrationOptions) {\r\n    function hasId(value) {\r\n        const candidate = value;\r\n        return candidate && Is.string(candidate.id) && candidate.id.length > 0;\r\n    }\r\n    StaticRegistrationOptions.hasId = hasId;\r\n})(StaticRegistrationOptions = exports.StaticRegistrationOptions || (exports.StaticRegistrationOptions = {}));\r\n/**\r\n * The TextDocumentRegistrationOptions namespace provides helper functions to work with\r\n * [TextDocumentRegistrationOptions](#TextDocumentRegistrationOptions) literals.\r\n */\r\nvar TextDocumentRegistrationOptions;\r\n(function (TextDocumentRegistrationOptions) {\r\n    function is(value) {\r\n        const candidate = value;\r\n        return candidate && (candidate.documentSelector === null || DocumentSelector.is(candidate.documentSelector));\r\n    }\r\n    TextDocumentRegistrationOptions.is = is;\r\n})(TextDocumentRegistrationOptions = exports.TextDocumentRegistrationOptions || (exports.TextDocumentRegistrationOptions = {}));\r\n/**\r\n * The WorkDoneProgressOptions namespace provides helper functions to work with\r\n * [WorkDoneProgressOptions](#WorkDoneProgressOptions) literals.\r\n */\r\nvar WorkDoneProgressOptions;\r\n(function (WorkDoneProgressOptions) {\r\n    function is(value) {\r\n        const candidate = value;\r\n        return Is.objectLiteral(candidate) && (candidate.workDoneProgress === undefined || Is.boolean(candidate.workDoneProgress));\r\n    }\r\n    WorkDoneProgressOptions.is = is;\r\n    function hasWorkDoneProgress(value) {\r\n        const candidate = value;\r\n        return candidate && Is.boolean(candidate.workDoneProgress);\r\n    }\r\n    WorkDoneProgressOptions.hasWorkDoneProgress = hasWorkDoneProgress;\r\n})(WorkDoneProgressOptions = exports.WorkDoneProgressOptions || (exports.WorkDoneProgressOptions = {}));\r\n/**\r\n * The initialize request is sent from the client to the server.\r\n * It is sent once as the request after starting up the server.\r\n * The requests parameter is of type [InitializeParams](#InitializeParams)\r\n * the response if of type [InitializeResult](#InitializeResult) of a Thenable that\r\n * resolves to such.\r\n */\r\nvar InitializeRequest;\r\n(function (InitializeRequest) {\r\n    InitializeRequest.type = new messages_1.ProtocolRequestType('initialize');\r\n})(InitializeRequest = exports.InitializeRequest || (exports.InitializeRequest = {}));\r\n/**\r\n * Known error codes for an `InitializeError`;\r\n */\r\nvar InitializeError;\r\n(function (InitializeError) {\r\n    /**\r\n     * If the protocol version provided by the client can't be handled by the server.\r\n     * @deprecated This initialize error got replaced by client capabilities. There is\r\n     * no version handshake in version 3.0x\r\n     */\r\n    InitializeError.unknownProtocolVersion = 1;\r\n})(InitializeError = exports.InitializeError || (exports.InitializeError = {}));\r\n/**\r\n * The intialized notification is sent from the client to the\r\n * server after the client is fully initialized and the server\r\n * is allowed to send requests from the server to the client.\r\n */\r\nvar InitializedNotification;\r\n(function (InitializedNotification) {\r\n    InitializedNotification.type = new messages_1.ProtocolNotificationType('initialized');\r\n})(InitializedNotification = exports.InitializedNotification || (exports.InitializedNotification = {}));\r\n//---- Shutdown Method ----\r\n/**\r\n * A shutdown request is sent from the client to the server.\r\n * It is sent once when the client decides to shutdown the\r\n * server. The only notification that is sent after a shutdown request\r\n * is the exit event.\r\n */\r\nvar ShutdownRequest;\r\n(function (ShutdownRequest) {\r\n    ShutdownRequest.type = new messages_1.ProtocolRequestType0('shutdown');\r\n})(ShutdownRequest = exports.ShutdownRequest || (exports.ShutdownRequest = {}));\r\n//---- Exit Notification ----\r\n/**\r\n * The exit event is sent from the client to the server to\r\n * ask the server to exit its process.\r\n */\r\nvar ExitNotification;\r\n(function (ExitNotification) {\r\n    ExitNotification.type = new messages_1.ProtocolNotificationType0('exit');\r\n})(ExitNotification = exports.ExitNotification || (exports.ExitNotification = {}));\r\n/**\r\n * The configuration change notification is sent from the client to the server\r\n * when the client's configuration has changed. The notification contains\r\n * the changed configuration as defined by the language client.\r\n */\r\nvar DidChangeConfigurationNotification;\r\n(function (DidChangeConfigurationNotification) {\r\n    DidChangeConfigurationNotification.type = new messages_1.ProtocolNotificationType('workspace/didChangeConfiguration');\r\n})(DidChangeConfigurationNotification = exports.DidChangeConfigurationNotification || (exports.DidChangeConfigurationNotification = {}));\r\n//---- Message show and log notifications ----\r\n/**\r\n * The message type\r\n */\r\nvar MessageType;\r\n(function (MessageType) {\r\n    /**\r\n     * An error message.\r\n     */\r\n    MessageType.Error = 1;\r\n    /**\r\n     * A warning message.\r\n     */\r\n    MessageType.Warning = 2;\r\n    /**\r\n     * An information message.\r\n     */\r\n    MessageType.Info = 3;\r\n    /**\r\n     * A log message.\r\n     */\r\n    MessageType.Log = 4;\r\n})(MessageType = exports.MessageType || (exports.MessageType = {}));\r\n/**\r\n * The show message notification is sent from a server to a client to ask\r\n * the client to display a particular message in the user interface.\r\n */\r\nvar ShowMessageNotification;\r\n(function (ShowMessageNotification) {\r\n    ShowMessageNotification.type = new messages_1.ProtocolNotificationType('window/showMessage');\r\n})(ShowMessageNotification = exports.ShowMessageNotification || (exports.ShowMessageNotification = {}));\r\n/**\r\n * The show message request is sent from the server to the client to show a message\r\n * and a set of options actions to the user.\r\n */\r\nvar ShowMessageRequest;\r\n(function (ShowMessageRequest) {\r\n    ShowMessageRequest.type = new messages_1.ProtocolRequestType('window/showMessageRequest');\r\n})(ShowMessageRequest = exports.ShowMessageRequest || (exports.ShowMessageRequest = {}));\r\n/**\r\n * The log message notification is sent from the server to the client to ask\r\n * the client to log a particular message.\r\n */\r\nvar LogMessageNotification;\r\n(function (LogMessageNotification) {\r\n    LogMessageNotification.type = new messages_1.ProtocolNotificationType('window/logMessage');\r\n})(LogMessageNotification = exports.LogMessageNotification || (exports.LogMessageNotification = {}));\r\n//---- Telemetry notification\r\n/**\r\n * The telemetry event notification is sent from the server to the client to ask\r\n * the client to log telemetry data.\r\n */\r\nvar TelemetryEventNotification;\r\n(function (TelemetryEventNotification) {\r\n    TelemetryEventNotification.type = new messages_1.ProtocolNotificationType('telemetry/event');\r\n})(TelemetryEventNotification = exports.TelemetryEventNotification || (exports.TelemetryEventNotification = {}));\r\n/**\r\n * Defines how the host (editor) should sync\r\n * document changes to the language server.\r\n */\r\nvar TextDocumentSyncKind;\r\n(function (TextDocumentSyncKind) {\r\n    /**\r\n     * Documents should not be synced at all.\r\n     */\r\n    TextDocumentSyncKind.None = 0;\r\n    /**\r\n     * Documents are synced by always sending the full content\r\n     * of the document.\r\n     */\r\n    TextDocumentSyncKind.Full = 1;\r\n    /**\r\n     * Documents are synced by sending the full content on open.\r\n     * After that only incremental updates to the document are\r\n     * send.\r\n     */\r\n    TextDocumentSyncKind.Incremental = 2;\r\n})(TextDocumentSyncKind = exports.TextDocumentSyncKind || (exports.TextDocumentSyncKind = {}));\r\n/**\r\n * The document open notification is sent from the client to the server to signal\r\n * newly opened text documents. The document's truth is now managed by the client\r\n * and the server must not try to read the document's truth using the document's\r\n * uri. Open in this sense means it is managed by the client. It doesn't necessarily\r\n * mean that its content is presented in an editor. An open notification must not\r\n * be sent more than once without a corresponding close notification send before.\r\n * This means open and close notification must be balanced and the max open count\r\n * is one.\r\n */\r\nvar DidOpenTextDocumentNotification;\r\n(function (DidOpenTextDocumentNotification) {\r\n    DidOpenTextDocumentNotification.method = 'textDocument/didOpen';\r\n    DidOpenTextDocumentNotification.type = new messages_1.ProtocolNotificationType(DidOpenTextDocumentNotification.method);\r\n})(DidOpenTextDocumentNotification = exports.DidOpenTextDocumentNotification || (exports.DidOpenTextDocumentNotification = {}));\r\n/**\r\n * The document change notification is sent from the client to the server to signal\r\n * changes to a text document.\r\n */\r\nvar DidChangeTextDocumentNotification;\r\n(function (DidChangeTextDocumentNotification) {\r\n    DidChangeTextDocumentNotification.method = 'textDocument/didChange';\r\n    DidChangeTextDocumentNotification.type = new messages_1.ProtocolNotificationType(DidChangeTextDocumentNotification.method);\r\n})(DidChangeTextDocumentNotification = exports.DidChangeTextDocumentNotification || (exports.DidChangeTextDocumentNotification = {}));\r\n/**\r\n * The document close notification is sent from the client to the server when\r\n * the document got closed in the client. The document's truth now exists where\r\n * the document's uri points to (e.g. if the document's uri is a file uri the\r\n * truth now exists on disk). As with the open notification the close notification\r\n * is about managing the document's content. Receiving a close notification\r\n * doesn't mean that the document was open in an editor before. A close\r\n * notification requires a previous open notification to be sent.\r\n */\r\nvar DidCloseTextDocumentNotification;\r\n(function (DidCloseTextDocumentNotification) {\r\n    DidCloseTextDocumentNotification.method = 'textDocument/didClose';\r\n    DidCloseTextDocumentNotification.type = new messages_1.ProtocolNotificationType(DidCloseTextDocumentNotification.method);\r\n})(DidCloseTextDocumentNotification = exports.DidCloseTextDocumentNotification || (exports.DidCloseTextDocumentNotification = {}));\r\n/**\r\n * The document save notification is sent from the client to the server when\r\n * the document got saved in the client.\r\n */\r\nvar DidSaveTextDocumentNotification;\r\n(function (DidSaveTextDocumentNotification) {\r\n    DidSaveTextDocumentNotification.method = 'textDocument/didSave';\r\n    DidSaveTextDocumentNotification.type = new messages_1.ProtocolNotificationType(DidSaveTextDocumentNotification.method);\r\n})(DidSaveTextDocumentNotification = exports.DidSaveTextDocumentNotification || (exports.DidSaveTextDocumentNotification = {}));\r\n/**\r\n * Represents reasons why a text document is saved.\r\n */\r\nvar TextDocumentSaveReason;\r\n(function (TextDocumentSaveReason) {\r\n    /**\r\n     * Manually triggered, e.g. by the user pressing save, by starting debugging,\r\n     * or by an API call.\r\n     */\r\n    TextDocumentSaveReason.Manual = 1;\r\n    /**\r\n     * Automatic after a delay.\r\n     */\r\n    TextDocumentSaveReason.AfterDelay = 2;\r\n    /**\r\n     * When the editor lost focus.\r\n     */\r\n    TextDocumentSaveReason.FocusOut = 3;\r\n})(TextDocumentSaveReason = exports.TextDocumentSaveReason || (exports.TextDocumentSaveReason = {}));\r\n/**\r\n * A document will save notification is sent from the client to the server before\r\n * the document is actually saved.\r\n */\r\nvar WillSaveTextDocumentNotification;\r\n(function (WillSaveTextDocumentNotification) {\r\n    WillSaveTextDocumentNotification.method = 'textDocument/willSave';\r\n    WillSaveTextDocumentNotification.type = new messages_1.ProtocolNotificationType(WillSaveTextDocumentNotification.method);\r\n})(WillSaveTextDocumentNotification = exports.WillSaveTextDocumentNotification || (exports.WillSaveTextDocumentNotification = {}));\r\n/**\r\n * A document will save request is sent from the client to the server before\r\n * the document is actually saved. The request can return an array of TextEdits\r\n * which will be applied to the text document before it is saved. Please note that\r\n * clients might drop results if computing the text edits took too long or if a\r\n * server constantly fails on this request. This is done to keep the save fast and\r\n * reliable.\r\n */\r\nvar WillSaveTextDocumentWaitUntilRequest;\r\n(function (WillSaveTextDocumentWaitUntilRequest) {\r\n    WillSaveTextDocumentWaitUntilRequest.method = 'textDocument/willSaveWaitUntil';\r\n    WillSaveTextDocumentWaitUntilRequest.type = new messages_1.ProtocolRequestType(WillSaveTextDocumentWaitUntilRequest.method);\r\n})(WillSaveTextDocumentWaitUntilRequest = exports.WillSaveTextDocumentWaitUntilRequest || (exports.WillSaveTextDocumentWaitUntilRequest = {}));\r\n/**\r\n * The watched files notification is sent from the client to the server when\r\n * the client detects changes to file watched by the language client.\r\n */\r\nvar DidChangeWatchedFilesNotification;\r\n(function (DidChangeWatchedFilesNotification) {\r\n    DidChangeWatchedFilesNotification.type = new messages_1.ProtocolNotificationType('workspace/didChangeWatchedFiles');\r\n})(DidChangeWatchedFilesNotification = exports.DidChangeWatchedFilesNotification || (exports.DidChangeWatchedFilesNotification = {}));\r\n/**\r\n * The file event type\r\n */\r\nvar FileChangeType;\r\n(function (FileChangeType) {\r\n    /**\r\n     * The file got created.\r\n     */\r\n    FileChangeType.Created = 1;\r\n    /**\r\n     * The file got changed.\r\n     */\r\n    FileChangeType.Changed = 2;\r\n    /**\r\n     * The file got deleted.\r\n     */\r\n    FileChangeType.Deleted = 3;\r\n})(FileChangeType = exports.FileChangeType || (exports.FileChangeType = {}));\r\nvar WatchKind;\r\n(function (WatchKind) {\r\n    /**\r\n     * Interested in create events.\r\n     */\r\n    WatchKind.Create = 1;\r\n    /**\r\n     * Interested in change events\r\n     */\r\n    WatchKind.Change = 2;\r\n    /**\r\n     * Interested in delete events\r\n     */\r\n    WatchKind.Delete = 4;\r\n})(WatchKind = exports.WatchKind || (exports.WatchKind = {}));\r\n/**\r\n * Diagnostics notification are sent from the server to the client to signal\r\n * results of validation runs.\r\n */\r\nvar PublishDiagnosticsNotification;\r\n(function (PublishDiagnosticsNotification) {\r\n    PublishDiagnosticsNotification.type = new messages_1.ProtocolNotificationType('textDocument/publishDiagnostics');\r\n})(PublishDiagnosticsNotification = exports.PublishDiagnosticsNotification || (exports.PublishDiagnosticsNotification = {}));\r\n/**\r\n * How a completion was triggered\r\n */\r\nvar CompletionTriggerKind;\r\n(function (CompletionTriggerKind) {\r\n    /**\r\n     * Completion was triggered by typing an identifier (24x7 code\r\n     * complete), manual invocation (e.g Ctrl+Space) or via API.\r\n     */\r\n    CompletionTriggerKind.Invoked = 1;\r\n    /**\r\n     * Completion was triggered by a trigger character specified by\r\n     * the `triggerCharacters` properties of the `CompletionRegistrationOptions`.\r\n     */\r\n    CompletionTriggerKind.TriggerCharacter = 2;\r\n    /**\r\n     * Completion was re-triggered as current completion list is incomplete\r\n     */\r\n    CompletionTriggerKind.TriggerForIncompleteCompletions = 3;\r\n})(CompletionTriggerKind = exports.CompletionTriggerKind || (exports.CompletionTriggerKind = {}));\r\n/**\r\n * Request to request completion at a given text document position. The request's\r\n * parameter is of type [TextDocumentPosition](#TextDocumentPosition) the response\r\n * is of type [CompletionItem[]](#CompletionItem) or [CompletionList](#CompletionList)\r\n * or a Thenable that resolves to such.\r\n *\r\n * The request can delay the computation of the [`detail`](#CompletionItem.detail)\r\n * and [`documentation`](#CompletionItem.documentation) properties to the `completionItem/resolve`\r\n * request. However, properties that are needed for the initial sorting and filtering, like `sortText`,\r\n * `filterText`, `insertText`, and `textEdit`, must not be changed during resolve.\r\n */\r\nvar CompletionRequest;\r\n(function (CompletionRequest) {\r\n    CompletionRequest.method = 'textDocument/completion';\r\n    CompletionRequest.type = new messages_1.ProtocolRequestType(CompletionRequest.method);\r\n    /** @deprecated Use CompletionRequest.type */\r\n    CompletionRequest.resultType = new vscode_jsonrpc_1.ProgressType();\r\n})(CompletionRequest = exports.CompletionRequest || (exports.CompletionRequest = {}));\r\n/**\r\n * Request to resolve additional information for a given completion item.The request's\r\n * parameter is of type [CompletionItem](#CompletionItem) the response\r\n * is of type [CompletionItem](#CompletionItem) or a Thenable that resolves to such.\r\n */\r\nvar CompletionResolveRequest;\r\n(function (CompletionResolveRequest) {\r\n    CompletionResolveRequest.method = 'completionItem/resolve';\r\n    CompletionResolveRequest.type = new messages_1.ProtocolRequestType(CompletionResolveRequest.method);\r\n})(CompletionResolveRequest = exports.CompletionResolveRequest || (exports.CompletionResolveRequest = {}));\r\n/**\r\n * Request to request hover information at a given text document position. The request's\r\n * parameter is of type [TextDocumentPosition](#TextDocumentPosition) the response is of\r\n * type [Hover](#Hover) or a Thenable that resolves to such.\r\n */\r\nvar HoverRequest;\r\n(function (HoverRequest) {\r\n    HoverRequest.method = 'textDocument/hover';\r\n    HoverRequest.type = new messages_1.ProtocolRequestType(HoverRequest.method);\r\n})(HoverRequest = exports.HoverRequest || (exports.HoverRequest = {}));\r\n/**\r\n * How a signature help was triggered.\r\n *\r\n * @since 3.15.0\r\n */\r\nvar SignatureHelpTriggerKind;\r\n(function (SignatureHelpTriggerKind) {\r\n    /**\r\n     * Signature help was invoked manually by the user or by a command.\r\n     */\r\n    SignatureHelpTriggerKind.Invoked = 1;\r\n    /**\r\n     * Signature help was triggered by a trigger character.\r\n     */\r\n    SignatureHelpTriggerKind.TriggerCharacter = 2;\r\n    /**\r\n     * Signature help was triggered by the cursor moving or by the document content changing.\r\n     */\r\n    SignatureHelpTriggerKind.ContentChange = 3;\r\n})(SignatureHelpTriggerKind = exports.SignatureHelpTriggerKind || (exports.SignatureHelpTriggerKind = {}));\r\nvar SignatureHelpRequest;\r\n(function (SignatureHelpRequest) {\r\n    SignatureHelpRequest.method = 'textDocument/signatureHelp';\r\n    SignatureHelpRequest.type = new messages_1.ProtocolRequestType(SignatureHelpRequest.method);\r\n})(SignatureHelpRequest = exports.SignatureHelpRequest || (exports.SignatureHelpRequest = {}));\r\n/**\r\n * A request to resolve the definition location of a symbol at a given text\r\n * document position. The request's parameter is of type [TextDocumentPosition]\r\n * (#TextDocumentPosition) the response is of either type [Definition](#Definition)\r\n * or a typed array of [DefinitionLink](#DefinitionLink) or a Thenable that resolves\r\n * to such.\r\n */\r\nvar DefinitionRequest;\r\n(function (DefinitionRequest) {\r\n    DefinitionRequest.method = 'textDocument/definition';\r\n    DefinitionRequest.type = new messages_1.ProtocolRequestType(DefinitionRequest.method);\r\n    /** @deprecated Use DefinitionRequest.type */\r\n    DefinitionRequest.resultType = new vscode_jsonrpc_1.ProgressType();\r\n})(DefinitionRequest = exports.DefinitionRequest || (exports.DefinitionRequest = {}));\r\n/**\r\n * A request to resolve project-wide references for the symbol denoted\r\n * by the given text document position. The request's parameter is of\r\n * type [ReferenceParams](#ReferenceParams) the response is of type\r\n * [Location[]](#Location) or a Thenable that resolves to such.\r\n */\r\nvar ReferencesRequest;\r\n(function (ReferencesRequest) {\r\n    ReferencesRequest.method = 'textDocument/references';\r\n    ReferencesRequest.type = new messages_1.ProtocolRequestType(ReferencesRequest.method);\r\n    /** @deprecated Use ReferencesRequest.type */\r\n    ReferencesRequest.resultType = new vscode_jsonrpc_1.ProgressType();\r\n})(ReferencesRequest = exports.ReferencesRequest || (exports.ReferencesRequest = {}));\r\n/**\r\n * Request to resolve a [DocumentHighlight](#DocumentHighlight) for a given\r\n * text document position. The request's parameter is of type [TextDocumentPosition]\r\n * (#TextDocumentPosition) the request response is of type [DocumentHighlight[]]\r\n * (#DocumentHighlight) or a Thenable that resolves to such.\r\n */\r\nvar DocumentHighlightRequest;\r\n(function (DocumentHighlightRequest) {\r\n    DocumentHighlightRequest.method = 'textDocument/documentHighlight';\r\n    DocumentHighlightRequest.type = new messages_1.ProtocolRequestType(DocumentHighlightRequest.method);\r\n    /** @deprecated Use DocumentHighlightRequest.type */\r\n    DocumentHighlightRequest.resultType = new vscode_jsonrpc_1.ProgressType();\r\n})(DocumentHighlightRequest = exports.DocumentHighlightRequest || (exports.DocumentHighlightRequest = {}));\r\n/**\r\n * A request to list all symbols found in a given text document. The request's\r\n * parameter is of type [TextDocumentIdentifier](#TextDocumentIdentifier) the\r\n * response is of type [SymbolInformation[]](#SymbolInformation) or a Thenable\r\n * that resolves to such.\r\n */\r\nvar DocumentSymbolRequest;\r\n(function (DocumentSymbolRequest) {\r\n    DocumentSymbolRequest.method = 'textDocument/documentSymbol';\r\n    DocumentSymbolRequest.type = new messages_1.ProtocolRequestType(DocumentSymbolRequest.method);\r\n    /** @deprecated Use DocumentSymbolRequest.type */\r\n    DocumentSymbolRequest.resultType = new vscode_jsonrpc_1.ProgressType();\r\n})(DocumentSymbolRequest = exports.DocumentSymbolRequest || (exports.DocumentSymbolRequest = {}));\r\n/**\r\n * A request to provide commands for the given text document and range.\r\n */\r\nvar CodeActionRequest;\r\n(function (CodeActionRequest) {\r\n    CodeActionRequest.method = 'textDocument/codeAction';\r\n    CodeActionRequest.type = new messages_1.ProtocolRequestType(CodeActionRequest.method);\r\n    /** @deprecated Use CodeActionRequest.type */\r\n    CodeActionRequest.resultType = new vscode_jsonrpc_1.ProgressType();\r\n})(CodeActionRequest = exports.CodeActionRequest || (exports.CodeActionRequest = {}));\r\n/**\r\n * A request to list project-wide symbols matching the query string given\r\n * by the [WorkspaceSymbolParams](#WorkspaceSymbolParams). The response is\r\n * of type [SymbolInformation[]](#SymbolInformation) or a Thenable that\r\n * resolves to such.\r\n */\r\nvar WorkspaceSymbolRequest;\r\n(function (WorkspaceSymbolRequest) {\r\n    WorkspaceSymbolRequest.method = 'workspace/symbol';\r\n    WorkspaceSymbolRequest.type = new messages_1.ProtocolRequestType(WorkspaceSymbolRequest.method);\r\n    /** @deprecated Use WorkspaceSymbolRequest.type */\r\n    WorkspaceSymbolRequest.resultType = new vscode_jsonrpc_1.ProgressType();\r\n})(WorkspaceSymbolRequest = exports.WorkspaceSymbolRequest || (exports.WorkspaceSymbolRequest = {}));\r\n/**\r\n * A request to provide code lens for the given text document.\r\n */\r\nvar CodeLensRequest;\r\n(function (CodeLensRequest) {\r\n    CodeLensRequest.type = new messages_1.ProtocolRequestType('textDocument/codeLens');\r\n    /** @deprecated Use CodeLensRequest.type */\r\n    CodeLensRequest.resultType = new vscode_jsonrpc_1.ProgressType();\r\n})(CodeLensRequest = exports.CodeLensRequest || (exports.CodeLensRequest = {}));\r\n/**\r\n * A request to resolve a command for a given code lens.\r\n */\r\nvar CodeLensResolveRequest;\r\n(function (CodeLensResolveRequest) {\r\n    CodeLensResolveRequest.type = new messages_1.ProtocolRequestType('codeLens/resolve');\r\n})(CodeLensResolveRequest = exports.CodeLensResolveRequest || (exports.CodeLensResolveRequest = {}));\r\n/**\r\n * A request to provide document links\r\n */\r\nvar DocumentLinkRequest;\r\n(function (DocumentLinkRequest) {\r\n    DocumentLinkRequest.method = 'textDocument/documentLink';\r\n    DocumentLinkRequest.type = new messages_1.ProtocolRequestType(DocumentLinkRequest.method);\r\n    /** @deprecated Use DocumentLinkRequest.type */\r\n    DocumentLinkRequest.resultType = new vscode_jsonrpc_1.ProgressType();\r\n})(DocumentLinkRequest = exports.DocumentLinkRequest || (exports.DocumentLinkRequest = {}));\r\n/**\r\n * Request to resolve additional information for a given document link. The request's\r\n * parameter is of type [DocumentLink](#DocumentLink) the response\r\n * is of type [DocumentLink](#DocumentLink) or a Thenable that resolves to such.\r\n */\r\nvar DocumentLinkResolveRequest;\r\n(function (DocumentLinkResolveRequest) {\r\n    DocumentLinkResolveRequest.type = new messages_1.ProtocolRequestType('documentLink/resolve');\r\n})(DocumentLinkResolveRequest = exports.DocumentLinkResolveRequest || (exports.DocumentLinkResolveRequest = {}));\r\n/**\r\n * A request to to format a whole document.\r\n */\r\nvar DocumentFormattingRequest;\r\n(function (DocumentFormattingRequest) {\r\n    DocumentFormattingRequest.method = 'textDocument/formatting';\r\n    DocumentFormattingRequest.type = new messages_1.ProtocolRequestType(DocumentFormattingRequest.method);\r\n})(DocumentFormattingRequest = exports.DocumentFormattingRequest || (exports.DocumentFormattingRequest = {}));\r\n/**\r\n * A request to to format a range in a document.\r\n */\r\nvar DocumentRangeFormattingRequest;\r\n(function (DocumentRangeFormattingRequest) {\r\n    DocumentRangeFormattingRequest.method = 'textDocument/rangeFormatting';\r\n    DocumentRangeFormattingRequest.type = new messages_1.ProtocolRequestType(DocumentRangeFormattingRequest.method);\r\n})(DocumentRangeFormattingRequest = exports.DocumentRangeFormattingRequest || (exports.DocumentRangeFormattingRequest = {}));\r\n/**\r\n * A request to format a document on type.\r\n */\r\nvar DocumentOnTypeFormattingRequest;\r\n(function (DocumentOnTypeFormattingRequest) {\r\n    DocumentOnTypeFormattingRequest.method = 'textDocument/onTypeFormatting';\r\n    DocumentOnTypeFormattingRequest.type = new messages_1.ProtocolRequestType(DocumentOnTypeFormattingRequest.method);\r\n})(DocumentOnTypeFormattingRequest = exports.DocumentOnTypeFormattingRequest || (exports.DocumentOnTypeFormattingRequest = {}));\r\n/**\r\n * A request to rename a symbol.\r\n */\r\nvar RenameRequest;\r\n(function (RenameRequest) {\r\n    RenameRequest.method = 'textDocument/rename';\r\n    RenameRequest.type = new messages_1.ProtocolRequestType(RenameRequest.method);\r\n})(RenameRequest = exports.RenameRequest || (exports.RenameRequest = {}));\r\n/**\r\n * A request to test and perform the setup necessary for a rename.\r\n */\r\nvar PrepareRenameRequest;\r\n(function (PrepareRenameRequest) {\r\n    PrepareRenameRequest.method = 'textDocument/prepareRename';\r\n    PrepareRenameRequest.type = new messages_1.ProtocolRequestType(PrepareRenameRequest.method);\r\n})(PrepareRenameRequest = exports.PrepareRenameRequest || (exports.PrepareRenameRequest = {}));\r\n/**\r\n * A request send from the client to the server to execute a command. The request might return\r\n * a workspace edit which the client will apply to the workspace.\r\n */\r\nvar ExecuteCommandRequest;\r\n(function (ExecuteCommandRequest) {\r\n    ExecuteCommandRequest.type = new messages_1.ProtocolRequestType('workspace/executeCommand');\r\n})(ExecuteCommandRequest = exports.ExecuteCommandRequest || (exports.ExecuteCommandRequest = {}));\r\n/**\r\n * A request sent from the server to the client to modified certain resources.\r\n */\r\nvar ApplyWorkspaceEditRequest;\r\n(function (ApplyWorkspaceEditRequest) {\r\n    ApplyWorkspaceEditRequest.type = new messages_1.ProtocolRequestType('workspace/applyEdit');\r\n})(ApplyWorkspaceEditRequest = exports.ApplyWorkspaceEditRequest || (exports.ApplyWorkspaceEditRequest = {}));\r\n", "/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) TypeFox and others. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst messages_1 = require(\"./messages\");\r\n/**\r\n * A request to result a `CallHierarchyItem` in a document at a given position.\r\n * Can be used as an input to a incoming or outgoing call hierarchy.\r\n *\r\n * @since 3.16.0 - Proposed state\r\n */\r\nvar CallHierarchyPrepareRequest;\r\n(function (CallHierarchyPrepareRequest) {\r\n    CallHierarchyPrepareRequest.method = 'textDocument/prepareCallHierarchy';\r\n    CallHierarchyPrepareRequest.type = new messages_1.ProtocolRequestType(CallHierarchyPrepareRequest.method);\r\n})(CallHierarchyPrepareRequest = exports.CallHierarchyPrepareRequest || (exports.CallHierarchyPrepareRequest = {}));\r\n/**\r\n * A request to resolve the incoming calls for a given `CallHierarchyItem`.\r\n *\r\n * @since 3.16.0 - Proposed state\r\n */\r\nvar CallHierarchyIncomingCallsRequest;\r\n(function (CallHierarchyIncomingCallsRequest) {\r\n    CallHierarchyIncomingCallsRequest.method = 'callHierarchy/incomingCalls';\r\n    CallHierarchyIncomingCallsRequest.type = new messages_1.ProtocolRequestType(CallHierarchyIncomingCallsRequest.method);\r\n})(CallHierarchyIncomingCallsRequest = exports.CallHierarchyIncomingCallsRequest || (exports.CallHierarchyIncomingCallsRequest = {}));\r\n/**\r\n * A request to resolve the outgoing calls for a given `CallHierarchyItem`.\r\n *\r\n * @since 3.16.0 - Proposed state\r\n */\r\nvar CallHierarchyOutgoingCallsRequest;\r\n(function (CallHierarchyOutgoingCallsRequest) {\r\n    CallHierarchyOutgoingCallsRequest.method = 'callHierarchy/outgoingCalls';\r\n    CallHierarchyOutgoingCallsRequest.type = new messages_1.ProtocolRequestType(CallHierarchyOutgoingCallsRequest.method);\r\n})(CallHierarchyOutgoingCallsRequest = exports.CallHierarchyOutgoingCallsRequest || (exports.CallHierarchyOutgoingCallsRequest = {}));\r\n", "/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst messages_1 = require(\"./messages\");\r\n/**\r\n * A set of predefined token types. This set is not fixed\r\n * an clients can specify additional token types via the\r\n * corresponding client capabilities.\r\n *\r\n * @since 3.16.0 - Proposed state\r\n */\r\nvar SemanticTokenTypes;\r\n(function (SemanticTokenTypes) {\r\n    SemanticTokenTypes[\"comment\"] = \"comment\";\r\n    SemanticTokenTypes[\"keyword\"] = \"keyword\";\r\n    SemanticTokenTypes[\"string\"] = \"string\";\r\n    SemanticTokenTypes[\"number\"] = \"number\";\r\n    SemanticTokenTypes[\"regexp\"] = \"regexp\";\r\n    SemanticTokenTypes[\"operator\"] = \"operator\";\r\n    SemanticTokenTypes[\"namespace\"] = \"namespace\";\r\n    SemanticTokenTypes[\"type\"] = \"type\";\r\n    SemanticTokenTypes[\"struct\"] = \"struct\";\r\n    SemanticTokenTypes[\"class\"] = \"class\";\r\n    SemanticTokenTypes[\"interface\"] = \"interface\";\r\n    SemanticTokenTypes[\"enum\"] = \"enum\";\r\n    SemanticTokenTypes[\"typeParameter\"] = \"typeParameter\";\r\n    SemanticTokenTypes[\"function\"] = \"function\";\r\n    SemanticTokenTypes[\"member\"] = \"member\";\r\n    SemanticTokenTypes[\"property\"] = \"property\";\r\n    SemanticTokenTypes[\"macro\"] = \"macro\";\r\n    SemanticTokenTypes[\"variable\"] = \"variable\";\r\n    SemanticTokenTypes[\"parameter\"] = \"parameter\";\r\n    SemanticTokenTypes[\"label\"] = \"label\";\r\n})(SemanticTokenTypes = exports.SemanticTokenTypes || (exports.SemanticTokenTypes = {}));\r\n/**\r\n * A set of predefined token modifiers. This set is not fixed\r\n * an clients can specify additional token types via the\r\n * corresponding client capabilities.\r\n *\r\n * @since 3.16.0 - Proposed state\r\n */\r\nvar SemanticTokenModifiers;\r\n(function (SemanticTokenModifiers) {\r\n    SemanticTokenModifiers[\"documentation\"] = \"documentation\";\r\n    SemanticTokenModifiers[\"declaration\"] = \"declaration\";\r\n    SemanticTokenModifiers[\"definition\"] = \"definition\";\r\n    SemanticTokenModifiers[\"reference\"] = \"reference\";\r\n    SemanticTokenModifiers[\"static\"] = \"static\";\r\n    SemanticTokenModifiers[\"abstract\"] = \"abstract\";\r\n    SemanticTokenModifiers[\"deprecated\"] = \"deprecated\";\r\n    SemanticTokenModifiers[\"async\"] = \"async\";\r\n    SemanticTokenModifiers[\"volatile\"] = \"volatile\";\r\n    SemanticTokenModifiers[\"readonly\"] = \"readonly\";\r\n})(SemanticTokenModifiers = exports.SemanticTokenModifiers || (exports.SemanticTokenModifiers = {}));\r\n/**\r\n * @since 3.16.0 - Proposed state\r\n */\r\nvar SemanticTokens;\r\n(function (SemanticTokens) {\r\n    function is(value) {\r\n        const candidate = value;\r\n        return candidate !== undefined && (candidate.resultId === undefined || typeof candidate.resultId === 'string') &&\r\n            Array.isArray(candidate.data) && (candidate.data.length === 0 || typeof candidate.data[0] === 'number');\r\n    }\r\n    SemanticTokens.is = is;\r\n})(SemanticTokens = exports.SemanticTokens || (exports.SemanticTokens = {}));\r\n/**\r\n * @since 3.16.0 - Proposed state\r\n */\r\nvar SemanticTokensRequest;\r\n(function (SemanticTokensRequest) {\r\n    SemanticTokensRequest.method = 'textDocument/semanticTokens';\r\n    SemanticTokensRequest.type = new messages_1.ProtocolRequestType(SemanticTokensRequest.method);\r\n})(SemanticTokensRequest = exports.SemanticTokensRequest || (exports.SemanticTokensRequest = {}));\r\n/**\r\n * @since 3.16.0 - Proposed state\r\n */\r\nvar SemanticTokensEditsRequest;\r\n(function (SemanticTokensEditsRequest) {\r\n    SemanticTokensEditsRequest.method = 'textDocument/semanticTokens/edits';\r\n    SemanticTokensEditsRequest.type = new messages_1.ProtocolRequestType(SemanticTokensEditsRequest.method);\r\n})(SemanticTokensEditsRequest = exports.SemanticTokensEditsRequest || (exports.SemanticTokensEditsRequest = {}));\r\n/**\r\n * @since 3.16.0 - Proposed state\r\n */\r\nvar SemanticTokensRangeRequest;\r\n(function (SemanticTokensRangeRequest) {\r\n    SemanticTokensRangeRequest.method = 'textDocument/semanticTokens/range';\r\n    SemanticTokensRangeRequest.type = new messages_1.ProtocolRequestType(SemanticTokensRangeRequest.method);\r\n})(SemanticTokensRangeRequest = exports.SemanticTokensRangeRequest || (exports.SemanticTokensRangeRequest = {}));\r\n", "/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nfunction __export(m) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst vscode_jsonrpc_1 = require(\"vscode-jsonrpc\");\r\nexports.ErrorCodes = vscode_jsonrpc_1.ErrorCodes;\r\nexports.ResponseError = vscode_jsonrpc_1.ResponseError;\r\nexports.CancellationToken = vscode_jsonrpc_1.CancellationToken;\r\nexports.CancellationTokenSource = vscode_jsonrpc_1.CancellationTokenSource;\r\nexports.Disposable = vscode_jsonrpc_1.Disposable;\r\nexports.Event = vscode_jsonrpc_1.Event;\r\nexports.Emitter = vscode_jsonrpc_1.Emitter;\r\nexports.Trace = vscode_jsonrpc_1.Trace;\r\nexports.TraceFormat = vscode_jsonrpc_1.TraceFormat;\r\nexports.SetTraceNotification = vscode_jsonrpc_1.SetTraceNotification;\r\nexports.LogTraceNotification = vscode_jsonrpc_1.LogTraceNotification;\r\nexports.RequestType = vscode_jsonrpc_1.RequestType;\r\nexports.RequestType0 = vscode_jsonrpc_1.RequestType0;\r\nexports.NotificationType = vscode_jsonrpc_1.NotificationType;\r\nexports.NotificationType0 = vscode_jsonrpc_1.NotificationType0;\r\nexports.MessageReader = vscode_jsonrpc_1.MessageReader;\r\nexports.MessageWriter = vscode_jsonrpc_1.MessageWriter;\r\nexports.ConnectionStrategy = vscode_jsonrpc_1.ConnectionStrategy;\r\nexports.StreamMessageReader = vscode_jsonrpc_1.StreamMessageReader;\r\nexports.StreamMessageWriter = vscode_jsonrpc_1.StreamMessageWriter;\r\nexports.IPCMessageReader = vscode_jsonrpc_1.IPCMessageReader;\r\nexports.IPCMessageWriter = vscode_jsonrpc_1.IPCMessageWriter;\r\nexports.createClientPipeTransport = vscode_jsonrpc_1.createClientPipeTransport;\r\nexports.createServerPipeTransport = vscode_jsonrpc_1.createServerPipeTransport;\r\nexports.generateRandomPipeName = vscode_jsonrpc_1.generateRandomPipeName;\r\nexports.createClientSocketTransport = vscode_jsonrpc_1.createClientSocketTransport;\r\nexports.createServerSocketTransport = vscode_jsonrpc_1.createServerSocketTransport;\r\nexports.ProgressType = vscode_jsonrpc_1.ProgressType;\r\n__export(require(\"vscode-languageserver-types\"));\r\n__export(require(\"./protocol\"));\r\nconst callHierarchy = require(\"./protocol.callHierarchy.proposed\");\r\nconst st = require(\"./protocol.sematicTokens.proposed\");\r\nvar Proposed;\r\n(function (Proposed) {\r\n    let CallHierarchyPrepareRequest;\r\n    (function (CallHierarchyPrepareRequest) {\r\n        CallHierarchyPrepareRequest.method = callHierarchy.CallHierarchyPrepareRequest.method;\r\n        CallHierarchyPrepareRequest.type = callHierarchy.CallHierarchyPrepareRequest.type;\r\n    })(CallHierarchyPrepareRequest = Proposed.CallHierarchyPrepareRequest || (Proposed.CallHierarchyPrepareRequest = {}));\r\n    let CallHierarchyIncomingCallsRequest;\r\n    (function (CallHierarchyIncomingCallsRequest) {\r\n        CallHierarchyIncomingCallsRequest.method = callHierarchy.CallHierarchyIncomingCallsRequest.method;\r\n        CallHierarchyIncomingCallsRequest.type = callHierarchy.CallHierarchyIncomingCallsRequest.type;\r\n    })(CallHierarchyIncomingCallsRequest = Proposed.CallHierarchyIncomingCallsRequest || (Proposed.CallHierarchyIncomingCallsRequest = {}));\r\n    let CallHierarchyOutgoingCallsRequest;\r\n    (function (CallHierarchyOutgoingCallsRequest) {\r\n        CallHierarchyOutgoingCallsRequest.method = callHierarchy.CallHierarchyOutgoingCallsRequest.method;\r\n        CallHierarchyOutgoingCallsRequest.type = callHierarchy.CallHierarchyOutgoingCallsRequest.type;\r\n    })(CallHierarchyOutgoingCallsRequest = Proposed.CallHierarchyOutgoingCallsRequest || (Proposed.CallHierarchyOutgoingCallsRequest = {}));\r\n    Proposed.SemanticTokenTypes = st.SemanticTokenTypes;\r\n    Proposed.SemanticTokenModifiers = st.SemanticTokenModifiers;\r\n    Proposed.SemanticTokens = st.SemanticTokens;\r\n    let SemanticTokensRequest;\r\n    (function (SemanticTokensRequest) {\r\n        SemanticTokensRequest.method = st.SemanticTokensRequest.method;\r\n        SemanticTokensRequest.type = st.SemanticTokensRequest.type;\r\n    })(SemanticTokensRequest = Proposed.SemanticTokensRequest || (Proposed.SemanticTokensRequest = {}));\r\n    let SemanticTokensEditsRequest;\r\n    (function (SemanticTokensEditsRequest) {\r\n        SemanticTokensEditsRequest.method = st.SemanticTokensEditsRequest.method;\r\n        SemanticTokensEditsRequest.type = st.SemanticTokensEditsRequest.type;\r\n    })(SemanticTokensEditsRequest = Proposed.SemanticTokensEditsRequest || (Proposed.SemanticTokensEditsRequest = {}));\r\n    let SemanticTokensRangeRequest;\r\n    (function (SemanticTokensRangeRequest) {\r\n        SemanticTokensRangeRequest.method = st.SemanticTokensRangeRequest.method;\r\n        SemanticTokensRangeRequest.type = st.SemanticTokensRangeRequest.type;\r\n    })(SemanticTokensRangeRequest = Proposed.SemanticTokensRangeRequest || (Proposed.SemanticTokensRangeRequest = {}));\r\n})(Proposed = exports.Proposed || (exports.Proposed = {}));\r\nfunction createProtocolConnection(reader, writer, logger, strategy) {\r\n    return vscode_jsonrpc_1.createMessageConnection(reader, writer, logger, strategy);\r\n}\r\nexports.createProtocolConnection = createProtocolConnection;\r\n", "/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\n'use strict';\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction boolean(value) {\n    return value === true || value === false;\n}\nexports.boolean = boolean;\nfunction string(value) {\n    return typeof value === 'string' || value instanceof String;\n}\nexports.string = string;\nfunction number(value) {\n    return typeof value === 'number' || value instanceof Number;\n}\nexports.number = number;\nfunction error(value) {\n    return value instanceof Error;\n}\nexports.error = error;\nfunction func(value) {\n    return typeof value === 'function';\n}\nexports.func = func;\nfunction array(value) {\n    return Array.isArray(value);\n}\nexports.array = array;\nfunction stringArray(value) {\n    return array(value) && value.every(elem => string(elem));\n}\nexports.stringArray = stringArray;\nfunction typedArray(value, check) {\n    return Array.isArray(value) && value.every(check);\n}\nexports.typedArray = typedArray;\nfunction thenable(value) {\n    return value && func(value.then);\n}\nexports.thenable = thenable;\nfunction asPromise(value) {\n    if (value instanceof Promise) {\n        return value;\n    }\n    else if (thenable(value)) {\n        return new Promise((resolve, reject) => {\n            value.then((resolved) => resolve(resolved), (error) => reject(error));\n        });\n    }\n    else {\n        return Promise.resolve(value);\n    }\n}\nexports.asPromise = asPromise;\n", "/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\n'use strict';\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst code = require(\"vscode\");\nclass ProtocolCompletionItem extends code.CompletionItem {\n    constructor(label) {\n        super(label);\n    }\n}\nexports.default = ProtocolCompletionItem;\n", "/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\n'use strict';\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst code = require(\"vscode\");\nclass ProtocolCodeLens extends code.CodeLens {\n    constructor(range) {\n        super(range);\n    }\n}\nexports.default = ProtocolCodeLens;\n", "/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\n'use strict';\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst code = require(\"vscode\");\nclass ProtocolDocumentLink extends code.DocumentLink {\n    constructor(range, target) {\n        super(range, target);\n    }\n}\nexports.default = ProtocolDocumentLink;\n", "/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\n'use strict';\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst code = require(\"vscode\");\nconst proto = require(\"vscode-languageserver-protocol\");\nconst Is = require(\"./utils/is\");\nconst protocolCompletionItem_1 = require(\"./protocolCompletionItem\");\nconst protocolCodeLens_1 = require(\"./protocolCodeLens\");\nconst protocolDocumentLink_1 = require(\"./protocolDocumentLink\");\nfunction createConverter(uriConverter) {\n    const nullConverter = (value) => value.toString();\n    const _uriConverter = uriConverter || nullConverter;\n    function asUri(value) {\n        return _uriConverter(value);\n    }\n    function asTextDocumentIdentifier(textDocument) {\n        return {\n            uri: _uriConverter(textDocument.uri)\n        };\n    }\n    function asVersionedTextDocumentIdentifier(textDocument) {\n        return {\n            uri: _uriConverter(textDocument.uri),\n            version: textDocument.version\n        };\n    }\n    function asOpenTextDocumentParams(textDocument) {\n        return {\n            textDocument: {\n                uri: _uriConverter(textDocument.uri),\n                languageId: textDocument.languageId,\n                version: textDocument.version,\n                text: textDocument.getText()\n            }\n        };\n    }\n    function isTextDocumentChangeEvent(value) {\n        let candidate = value;\n        return !!candidate.document && !!candidate.contentChanges;\n    }\n    function isTextDocument(value) {\n        let candidate = value;\n        return !!candidate.uri && !!candidate.version;\n    }\n    function asChangeTextDocumentParams(arg) {\n        if (isTextDocument(arg)) {\n            let result = {\n                textDocument: {\n                    uri: _uriConverter(arg.uri),\n                    version: arg.version\n                },\n                contentChanges: [{ text: arg.getText() }]\n            };\n            return result;\n        }\n        else if (isTextDocumentChangeEvent(arg)) {\n            let document = arg.document;\n            let result = {\n                textDocument: {\n                    uri: _uriConverter(document.uri),\n                    version: document.version\n                },\n                contentChanges: arg.contentChanges.map((change) => {\n                    let range = change.range;\n                    return {\n                        range: {\n                            start: { line: range.start.line, character: range.start.character },\n                            end: { line: range.end.line, character: range.end.character }\n                        },\n                        rangeLength: change.rangeLength,\n                        text: change.text\n                    };\n                })\n            };\n            return result;\n        }\n        else {\n            throw Error('Unsupported text document change parameter');\n        }\n    }\n    function asCloseTextDocumentParams(textDocument) {\n        return {\n            textDocument: asTextDocumentIdentifier(textDocument)\n        };\n    }\n    function asSaveTextDocumentParams(textDocument, includeContent = false) {\n        let result = {\n            textDocument: asVersionedTextDocumentIdentifier(textDocument)\n        };\n        if (includeContent) {\n            result.text = textDocument.getText();\n        }\n        return result;\n    }\n    function asTextDocumentSaveReason(reason) {\n        switch (reason) {\n            case code.TextDocumentSaveReason.Manual:\n                return proto.TextDocumentSaveReason.Manual;\n            case code.TextDocumentSaveReason.AfterDelay:\n                return proto.TextDocumentSaveReason.AfterDelay;\n            case code.TextDocumentSaveReason.FocusOut:\n                return proto.TextDocumentSaveReason.FocusOut;\n        }\n        return proto.TextDocumentSaveReason.Manual;\n    }\n    function asWillSaveTextDocumentParams(event) {\n        return {\n            textDocument: asTextDocumentIdentifier(event.document),\n            reason: asTextDocumentSaveReason(event.reason)\n        };\n    }\n    function asTextDocumentPositionParams(textDocument, position) {\n        return {\n            textDocument: asTextDocumentIdentifier(textDocument),\n            position: asWorkerPosition(position)\n        };\n    }\n    function asCompletionTriggerKind(triggerKind) {\n        switch (triggerKind) {\n            case code.CompletionTriggerKind.TriggerCharacter:\n                return proto.CompletionTriggerKind.TriggerCharacter;\n            case code.CompletionTriggerKind.TriggerForIncompleteCompletions:\n                return proto.CompletionTriggerKind.TriggerForIncompleteCompletions;\n            default:\n                return proto.CompletionTriggerKind.Invoked;\n        }\n    }\n    function asCompletionParams(textDocument, position, context) {\n        return {\n            textDocument: asTextDocumentIdentifier(textDocument),\n            position: asWorkerPosition(position),\n            context: {\n                triggerKind: asCompletionTriggerKind(context.triggerKind),\n                triggerCharacter: context.triggerCharacter\n            }\n        };\n    }\n    function asSignatureHelpTriggerKind(triggerKind) {\n        switch (triggerKind) {\n            case code.SignatureHelpTriggerKind.Invoke:\n                return proto.SignatureHelpTriggerKind.Invoked;\n            case code.SignatureHelpTriggerKind.TriggerCharacter:\n                return proto.SignatureHelpTriggerKind.TriggerCharacter;\n            case code.SignatureHelpTriggerKind.ContentChange:\n                return proto.SignatureHelpTriggerKind.ContentChange;\n        }\n    }\n    function asParameterInformation(value) {\n        // We leave the documentation out on purpose since it usually adds no\n        // value for the server.\n        return {\n            label: value.label\n        };\n    }\n    function asParameterInformations(values) {\n        return values.map(asParameterInformation);\n    }\n    function asSignatureInformation(value) {\n        // We leave the documentation out on purpose since it usually adds no\n        // value for the server.\n        return {\n            label: value.label,\n            parameters: asParameterInformations(value.parameters)\n        };\n    }\n    function asSignatureInformations(values) {\n        return values.map(asSignatureInformation);\n    }\n    function asSignatureHelp(value) {\n        if (value === undefined) {\n            return value;\n        }\n        return {\n            signatures: asSignatureInformations(value.signatures),\n            activeSignature: value.activeSignature,\n            activeParameter: value.activeParameter\n        };\n    }\n    function asSignatureHelpParams(textDocument, position, context) {\n        return {\n            textDocument: asTextDocumentIdentifier(textDocument),\n            position: asWorkerPosition(position),\n            context: {\n                isRetrigger: context.isRetrigger,\n                triggerCharacter: context.triggerCharacter,\n                triggerKind: asSignatureHelpTriggerKind(context.triggerKind),\n                activeSignatureHelp: asSignatureHelp(context.activeSignatureHelp)\n            }\n        };\n    }\n    function asWorkerPosition(position) {\n        return { line: position.line, character: position.character };\n    }\n    function asPosition(value) {\n        if (value === undefined || value === null) {\n            return value;\n        }\n        return { line: value.line, character: value.character };\n    }\n    function asPositions(value) {\n        let result = [];\n        for (let elem of value) {\n            result.push(asPosition(elem));\n        }\n        return result;\n    }\n    function isInsertReplace(value) {\n        const candidate = value;\n        return candidate && !!candidate.inserting && !!candidate.replacing;\n    }\n    function asRange(value) {\n        if (value === undefined || value === null) {\n            return value;\n        }\n        // The LSP has no support yet for insert replace. So this can never happen.\n        if (isInsertReplace(value)) {\n            throw new Error(`Receving unknown insert replace range.`);\n        }\n        return { start: asPosition(value.start), end: asPosition(value.end) };\n    }\n    function asLocation(value) {\n        if (value === undefined || value === null) {\n            return value;\n        }\n        return proto.Location.create(asUri(value.uri), asRange(value.range));\n    }\n    function asDiagnosticSeverity(value) {\n        switch (value) {\n            case code.DiagnosticSeverity.Error:\n                return proto.DiagnosticSeverity.Error;\n            case code.DiagnosticSeverity.Warning:\n                return proto.DiagnosticSeverity.Warning;\n            case code.DiagnosticSeverity.Information:\n                return proto.DiagnosticSeverity.Information;\n            case code.DiagnosticSeverity.Hint:\n                return proto.DiagnosticSeverity.Hint;\n        }\n    }\n    function asDiagnosticTags(tags) {\n        if (!tags) {\n            return undefined;\n        }\n        let result = [];\n        for (let tag of tags) {\n            let converted = asDiagnosticTag(tag);\n            if (converted !== undefined) {\n                result.push(converted);\n            }\n        }\n        return result.length > 0 ? result : undefined;\n    }\n    function asDiagnosticTag(tag) {\n        switch (tag) {\n            case code.DiagnosticTag.Unnecessary:\n                return proto.DiagnosticTag.Unnecessary;\n            case code.DiagnosticTag.Deprecated:\n                return proto.DiagnosticTag.Deprecated;\n            default:\n                return undefined;\n        }\n    }\n    function asRelatedInformation(item) {\n        return {\n            message: item.message,\n            location: asLocation(item.location)\n        };\n    }\n    function asRelatedInformations(items) {\n        return items.map(asRelatedInformation);\n    }\n    function asDiagnostic(item) {\n        let result = proto.Diagnostic.create(asRange(item.range), item.message);\n        if (Is.number(item.severity)) {\n            result.severity = asDiagnosticSeverity(item.severity);\n        }\n        if (Is.number(item.code) || Is.string(item.code)) {\n            result.code = item.code;\n        }\n        if (Array.isArray(item.tags)) {\n            result.tags = asDiagnosticTags(item.tags);\n        }\n        if (item.relatedInformation) {\n            result.relatedInformation = asRelatedInformations(item.relatedInformation);\n        }\n        if (item.source) {\n            result.source = item.source;\n        }\n        return result;\n    }\n    function asDiagnostics(items) {\n        if (items === undefined || items === null) {\n            return items;\n        }\n        return items.map(asDiagnostic);\n    }\n    function asDocumentation(format, documentation) {\n        switch (format) {\n            case '$string':\n                return documentation;\n            case proto.MarkupKind.PlainText:\n                return { kind: format, value: documentation };\n            case proto.MarkupKind.Markdown:\n                return { kind: format, value: documentation.value };\n            default:\n                return `Unsupported Markup content received. Kind is: ${format}`;\n        }\n    }\n    function asCompletionItemTag(tag) {\n        switch (tag) {\n            case code.CompletionItemTag.Deprecated:\n                return proto.CompletionItemTag.Deprecated;\n        }\n        return undefined;\n    }\n    function asCompletionItemTags(tags) {\n        if (tags === undefined) {\n            return tags;\n        }\n        const result = [];\n        for (let tag of tags) {\n            const converted = asCompletionItemTag(tag);\n            if (converted !== undefined) {\n                result.push(converted);\n            }\n        }\n        return result;\n    }\n    function asCompletionItemKind(value, original) {\n        if (original !== undefined) {\n            return original;\n        }\n        return value + 1;\n    }\n    function asCompletionItem(item) {\n        let result = { label: item.label };\n        let protocolItem = item instanceof protocolCompletionItem_1.default ? item : undefined;\n        if (item.detail) {\n            result.detail = item.detail;\n        }\n        // We only send items back we created. So this can't be something else than\n        // a string right now.\n        if (item.documentation) {\n            if (!protocolItem || protocolItem.documentationFormat === '$string') {\n                result.documentation = item.documentation;\n            }\n            else {\n                result.documentation = asDocumentation(protocolItem.documentationFormat, item.documentation);\n            }\n        }\n        if (item.filterText) {\n            result.filterText = item.filterText;\n        }\n        fillPrimaryInsertText(result, item);\n        if (Is.number(item.kind)) {\n            result.kind = asCompletionItemKind(item.kind, protocolItem && protocolItem.originalItemKind);\n        }\n        if (item.sortText) {\n            result.sortText = item.sortText;\n        }\n        if (item.additionalTextEdits) {\n            result.additionalTextEdits = asTextEdits(item.additionalTextEdits);\n        }\n        if (item.commitCharacters) {\n            result.commitCharacters = item.commitCharacters.slice();\n        }\n        if (item.command) {\n            result.command = asCommand(item.command);\n        }\n        if (item.preselect === true || item.preselect === false) {\n            result.preselect = item.preselect;\n        }\n        const tags = asCompletionItemTags(item.tags);\n        if (protocolItem) {\n            if (protocolItem.data !== undefined) {\n                result.data = protocolItem.data;\n            }\n            if (protocolItem.deprecated === true || protocolItem.deprecated === false) {\n                if (protocolItem.deprecated === true && tags !== undefined && tags.length > 0) {\n                    const index = tags.indexOf(code.CompletionItemTag.Deprecated);\n                    if (index !== -1) {\n                        tags.splice(index, 1);\n                    }\n                }\n                result.deprecated = protocolItem.deprecated;\n            }\n        }\n        if (tags !== undefined && tags.length > 0) {\n            result.tags = tags;\n        }\n        return result;\n    }\n    function fillPrimaryInsertText(target, source) {\n        let format = proto.InsertTextFormat.PlainText;\n        let text = undefined;\n        let range = undefined;\n        if (source.textEdit) {\n            text = source.textEdit.newText;\n            range = asRange(source.textEdit.range);\n        }\n        else if (source.insertText instanceof code.SnippetString) {\n            format = proto.InsertTextFormat.Snippet;\n            text = source.insertText.value;\n        }\n        else {\n            text = source.insertText;\n        }\n        if (source.range) {\n            range = asRange(source.range);\n        }\n        target.insertTextFormat = format;\n        if (source.fromEdit && text !== undefined && range !== undefined) {\n            target.textEdit = { newText: text, range: range };\n        }\n        else {\n            target.insertText = text;\n        }\n    }\n    function asTextEdit(edit) {\n        return { range: asRange(edit.range), newText: edit.newText };\n    }\n    function asTextEdits(edits) {\n        if (edits === undefined || edits === null) {\n            return edits;\n        }\n        return edits.map(asTextEdit);\n    }\n    function asSymbolKind(item) {\n        if (item <= code.SymbolKind.TypeParameter) {\n            // Symbol kind is one based in the protocol and zero based in code.\n            return (item + 1);\n        }\n        return proto.SymbolKind.Property;\n    }\n    function asSymbolTag(item) {\n        return item;\n    }\n    function asSymbolTags(items) {\n        return items.map(asSymbolTag);\n    }\n    function asReferenceParams(textDocument, position, options) {\n        return {\n            textDocument: asTextDocumentIdentifier(textDocument),\n            position: asWorkerPosition(position),\n            context: { includeDeclaration: options.includeDeclaration }\n        };\n    }\n    function asCodeActionContext(context) {\n        if (context === undefined || context === null) {\n            return context;\n        }\n        let only;\n        if (context.only && Is.string(context.only.value)) {\n            only = [context.only.value];\n        }\n        return proto.CodeActionContext.create(asDiagnostics(context.diagnostics), only);\n    }\n    function asCommand(item) {\n        let result = proto.Command.create(item.title, item.command);\n        if (item.arguments) {\n            result.arguments = item.arguments;\n        }\n        return result;\n    }\n    function asCodeLens(item) {\n        let result = proto.CodeLens.create(asRange(item.range));\n        if (item.command) {\n            result.command = asCommand(item.command);\n        }\n        if (item instanceof protocolCodeLens_1.default) {\n            if (item.data) {\n                result.data = item.data;\n            }\n        }\n        return result;\n    }\n    function asFormattingOptions(item) {\n        return { tabSize: item.tabSize, insertSpaces: item.insertSpaces };\n    }\n    function asDocumentSymbolParams(textDocument) {\n        return {\n            textDocument: asTextDocumentIdentifier(textDocument)\n        };\n    }\n    function asCodeLensParams(textDocument) {\n        return {\n            textDocument: asTextDocumentIdentifier(textDocument)\n        };\n    }\n    function asDocumentLink(item) {\n        let result = proto.DocumentLink.create(asRange(item.range));\n        if (item.target) {\n            result.target = asUri(item.target);\n        }\n        if (item.tooltip !== undefined) {\n            result.tooltip = item.tooltip;\n        }\n        let protocolItem = item instanceof protocolDocumentLink_1.default ? item : undefined;\n        if (protocolItem && protocolItem.data) {\n            result.data = protocolItem.data;\n        }\n        return result;\n    }\n    function asDocumentLinkParams(textDocument) {\n        return {\n            textDocument: asTextDocumentIdentifier(textDocument)\n        };\n    }\n    return {\n        asUri,\n        asTextDocumentIdentifier,\n        asVersionedTextDocumentIdentifier,\n        asOpenTextDocumentParams,\n        asChangeTextDocumentParams,\n        asCloseTextDocumentParams,\n        asSaveTextDocumentParams,\n        asWillSaveTextDocumentParams,\n        asTextDocumentPositionParams,\n        asCompletionParams,\n        asSignatureHelpParams,\n        asWorkerPosition,\n        asRange,\n        asPosition,\n        asPositions,\n        asLocation,\n        asDiagnosticSeverity,\n        asDiagnosticTag,\n        asDiagnostic,\n        asDiagnostics,\n        asCompletionItem,\n        asTextEdit,\n        asSymbolKind,\n        asSymbolTag,\n        asSymbolTags,\n        asReferenceParams,\n        asCodeActionContext,\n        asCommand,\n        asCodeLens,\n        asFormattingOptions,\n        asDocumentSymbolParams,\n        asCodeLensParams,\n        asDocumentLink,\n        asDocumentLinkParams\n    };\n}\nexports.createConverter = createConverter;\n", "/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\n'use strict';\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst code = require(\"vscode\");\nconst ls = require(\"vscode-languageserver-protocol\");\nconst Is = require(\"./utils/is\");\nconst protocolCompletionItem_1 = require(\"./protocolCompletionItem\");\nconst protocolCodeLens_1 = require(\"./protocolCodeLens\");\nconst protocolDocumentLink_1 = require(\"./protocolDocumentLink\");\nvar CodeBlock;\n(function (CodeBlock) {\n    function is(value) {\n        let candidate = value;\n        return candidate && Is.string(candidate.language) && Is.string(candidate.value);\n    }\n    CodeBlock.is = is;\n})(CodeBlock || (CodeBlock = {}));\nfunction createConverter(uriConverter) {\n    const nullConverter = (value) => code.Uri.parse(value);\n    const _uriConverter = uriConverter || nullConverter;\n    function asUri(value) {\n        return _uriConverter(value);\n    }\n    function asDiagnostics(diagnostics) {\n        return diagnostics.map(asDiagnostic);\n    }\n    function asDiagnostic(diagnostic) {\n        let result = new code.Diagnostic(asRange(diagnostic.range), diagnostic.message, asDiagnosticSeverity(diagnostic.severity));\n        if (Is.number(diagnostic.code) || Is.string(diagnostic.code)) {\n            result.code = diagnostic.code;\n        }\n        if (diagnostic.source) {\n            result.source = diagnostic.source;\n        }\n        if (diagnostic.relatedInformation) {\n            result.relatedInformation = asRelatedInformation(diagnostic.relatedInformation);\n        }\n        if (Array.isArray(diagnostic.tags)) {\n            result.tags = asDiagnosticTags(diagnostic.tags);\n        }\n        return result;\n    }\n    function asRelatedInformation(relatedInformation) {\n        return relatedInformation.map(asDiagnosticRelatedInformation);\n    }\n    function asDiagnosticRelatedInformation(information) {\n        return new code.DiagnosticRelatedInformation(asLocation(information.location), information.message);\n    }\n    function asDiagnosticTags(tags) {\n        if (!tags) {\n            return undefined;\n        }\n        let result = [];\n        for (let tag of tags) {\n            let converted = asDiagnosticTag(tag);\n            if (converted !== undefined) {\n                result.push(converted);\n            }\n        }\n        return result.length > 0 ? result : undefined;\n    }\n    function asDiagnosticTag(tag) {\n        switch (tag) {\n            case ls.DiagnosticTag.Unnecessary:\n                return code.DiagnosticTag.Unnecessary;\n            case ls.DiagnosticTag.Deprecated:\n                return code.DiagnosticTag.Deprecated;\n            default:\n                return undefined;\n        }\n    }\n    function asPosition(value) {\n        if (!value) {\n            return undefined;\n        }\n        return new code.Position(value.line, value.character);\n    }\n    function asRange(value) {\n        if (!value) {\n            return undefined;\n        }\n        return new code.Range(asPosition(value.start), asPosition(value.end));\n    }\n    function asRanges(value) {\n        return value.map(value => asRange(value));\n    }\n    function asDiagnosticSeverity(value) {\n        if (value === undefined || value === null) {\n            return code.DiagnosticSeverity.Error;\n        }\n        switch (value) {\n            case ls.DiagnosticSeverity.Error:\n                return code.DiagnosticSeverity.Error;\n            case ls.DiagnosticSeverity.Warning:\n                return code.DiagnosticSeverity.Warning;\n            case ls.DiagnosticSeverity.Information:\n                return code.DiagnosticSeverity.Information;\n            case ls.DiagnosticSeverity.Hint:\n                return code.DiagnosticSeverity.Hint;\n        }\n        return code.DiagnosticSeverity.Error;\n    }\n    function asHoverContent(value) {\n        if (Is.string(value)) {\n            return new code.MarkdownString(value);\n        }\n        else if (CodeBlock.is(value)) {\n            let result = new code.MarkdownString();\n            return result.appendCodeblock(value.value, value.language);\n        }\n        else if (Array.isArray(value)) {\n            let result = [];\n            for (let element of value) {\n                let item = new code.MarkdownString();\n                if (CodeBlock.is(element)) {\n                    item.appendCodeblock(element.value, element.language);\n                }\n                else {\n                    item.appendMarkdown(element);\n                }\n                result.push(item);\n            }\n            return result;\n        }\n        else {\n            let result;\n            switch (value.kind) {\n                case ls.MarkupKind.Markdown:\n                    return new code.MarkdownString(value.value);\n                case ls.MarkupKind.PlainText:\n                    result = new code.MarkdownString();\n                    result.appendText(value.value);\n                    return result;\n                default:\n                    result = new code.MarkdownString();\n                    result.appendText(`Unsupported Markup content received. Kind is: ${value.kind}`);\n                    return result;\n            }\n        }\n    }\n    function asDocumentation(value) {\n        if (Is.string(value)) {\n            return value;\n        }\n        else {\n            switch (value.kind) {\n                case ls.MarkupKind.Markdown:\n                    return new code.MarkdownString(value.value);\n                case ls.MarkupKind.PlainText:\n                    return value.value;\n                default:\n                    return `Unsupported Markup content received. Kind is: ${value.kind}`;\n            }\n        }\n    }\n    function asHover(hover) {\n        if (!hover) {\n            return undefined;\n        }\n        return new code.Hover(asHoverContent(hover.contents), asRange(hover.range));\n    }\n    function asCompletionResult(result) {\n        if (!result) {\n            return undefined;\n        }\n        if (Array.isArray(result)) {\n            let items = result;\n            return items.map(asCompletionItem);\n        }\n        let list = result;\n        return new code.CompletionList(list.items.map(asCompletionItem), list.isIncomplete);\n    }\n    function asCompletionItemKind(value) {\n        // Protocol item kind is 1 based, codes item kind is zero based.\n        if (ls.CompletionItemKind.Text <= value && value <= ls.CompletionItemKind.TypeParameter) {\n            return [value - 1, undefined];\n        }\n        return [code.CompletionItemKind.Text, value];\n    }\n    function asCompletionItemTag(tag) {\n        switch (tag) {\n            case ls.CompletionItemTag.Deprecated:\n                return code.CompletionItemTag.Deprecated;\n        }\n        return undefined;\n    }\n    function asCompletionItemTags(tags) {\n        if (tags === undefined || tags === null) {\n            return [];\n        }\n        const result = [];\n        for (let tag of tags) {\n            const converted = asCompletionItemTag(tag);\n            if (converted !== undefined) {\n                result.push(converted);\n            }\n        }\n        return result;\n    }\n    function asCompletionItem(item) {\n        let tags = asCompletionItemTags(item.tags);\n        let result = new protocolCompletionItem_1.default(item.label);\n        if (item.detail) {\n            result.detail = item.detail;\n        }\n        if (item.documentation) {\n            result.documentation = asDocumentation(item.documentation);\n            result.documentationFormat = Is.string(item.documentation) ? '$string' : item.documentation.kind;\n        }\n        if (item.filterText) {\n            result.filterText = item.filterText;\n        }\n        let insertText = asCompletionInsertText(item);\n        if (insertText) {\n            result.insertText = insertText.text;\n            result.range = insertText.range;\n            result.fromEdit = insertText.fromEdit;\n        }\n        if (Is.number(item.kind)) {\n            let [itemKind, original] = asCompletionItemKind(item.kind);\n            result.kind = itemKind;\n            if (original) {\n                result.originalItemKind = original;\n            }\n        }\n        if (item.sortText) {\n            result.sortText = item.sortText;\n        }\n        if (item.additionalTextEdits) {\n            result.additionalTextEdits = asTextEdits(item.additionalTextEdits);\n        }\n        if (Is.stringArray(item.commitCharacters)) {\n            result.commitCharacters = item.commitCharacters.slice();\n        }\n        if (item.command) {\n            result.command = asCommand(item.command);\n        }\n        if (item.deprecated === true || item.deprecated === false) {\n            result.deprecated = item.deprecated;\n            if (item.deprecated === true) {\n                tags.push(code.CompletionItemTag.Deprecated);\n            }\n        }\n        if (item.preselect === true || item.preselect === false) {\n            result.preselect = item.preselect;\n        }\n        if (item.data !== undefined) {\n            result.data = item.data;\n        }\n        if (tags.length > 0) {\n            result.tags = tags;\n        }\n        return result;\n    }\n    function asCompletionInsertText(item) {\n        if (item.textEdit) {\n            if (item.insertTextFormat === ls.InsertTextFormat.Snippet) {\n                return { text: new code.SnippetString(item.textEdit.newText), range: asRange(item.textEdit.range), fromEdit: true };\n            }\n            else {\n                return { text: item.textEdit.newText, range: asRange(item.textEdit.range), fromEdit: true };\n            }\n        }\n        else if (item.insertText) {\n            if (item.insertTextFormat === ls.InsertTextFormat.Snippet) {\n                return { text: new code.SnippetString(item.insertText), fromEdit: false };\n            }\n            else {\n                return { text: item.insertText, fromEdit: false };\n            }\n        }\n        else {\n            return undefined;\n        }\n    }\n    function asTextEdit(edit) {\n        if (!edit) {\n            return undefined;\n        }\n        return new code.TextEdit(asRange(edit.range), edit.newText);\n    }\n    function asTextEdits(items) {\n        if (!items) {\n            return undefined;\n        }\n        return items.map(asTextEdit);\n    }\n    function asSignatureHelp(item) {\n        if (!item) {\n            return undefined;\n        }\n        let result = new code.SignatureHelp();\n        if (Is.number(item.activeSignature)) {\n            result.activeSignature = item.activeSignature;\n        }\n        else {\n            // activeSignature was optional in the past\n            result.activeSignature = 0;\n        }\n        if (Is.number(item.activeParameter)) {\n            result.activeParameter = item.activeParameter;\n        }\n        else {\n            // activeParameter was optional in the past\n            result.activeParameter = 0;\n        }\n        if (item.signatures) {\n            result.signatures = asSignatureInformations(item.signatures);\n        }\n        return result;\n    }\n    function asSignatureInformations(items) {\n        return items.map(asSignatureInformation);\n    }\n    function asSignatureInformation(item) {\n        let result = new code.SignatureInformation(item.label);\n        if (item.documentation) {\n            result.documentation = asDocumentation(item.documentation);\n        }\n        if (item.parameters) {\n            result.parameters = asParameterInformations(item.parameters);\n        }\n        return result;\n    }\n    function asParameterInformations(item) {\n        return item.map(asParameterInformation);\n    }\n    function asParameterInformation(item) {\n        let result = new code.ParameterInformation(item.label);\n        if (item.documentation) {\n            result.documentation = asDocumentation(item.documentation);\n        }\n        return result;\n    }\n    function asLocation(item) {\n        if (!item) {\n            return undefined;\n        }\n        return new code.Location(_uriConverter(item.uri), asRange(item.range));\n    }\n    function asDeclarationResult(item) {\n        if (!item) {\n            return undefined;\n        }\n        return asLocationResult(item);\n    }\n    function asDefinitionResult(item) {\n        if (!item) {\n            return undefined;\n        }\n        return asLocationResult(item);\n    }\n    function asLocationLink(item) {\n        if (!item) {\n            return undefined;\n        }\n        let result = {\n            targetUri: _uriConverter(item.targetUri),\n            targetRange: asRange(item.targetSelectionRange),\n            originSelectionRange: asRange(item.originSelectionRange),\n            targetSelectionRange: asRange(item.targetSelectionRange)\n        };\n        if (!result.targetSelectionRange) {\n            throw new Error(`targetSelectionRange must not be undefined or null`);\n        }\n        return result;\n    }\n    function asLocationResult(item) {\n        if (!item) {\n            return undefined;\n        }\n        if (Is.array(item)) {\n            if (item.length === 0) {\n                return [];\n            }\n            else if (ls.LocationLink.is(item[0])) {\n                let links = item;\n                return links.map((link) => asLocationLink(link));\n            }\n            else {\n                let locations = item;\n                return locations.map((location) => asLocation(location));\n            }\n        }\n        else if (ls.LocationLink.is(item)) {\n            return [asLocationLink(item)];\n        }\n        else {\n            return asLocation(item);\n        }\n    }\n    function asReferences(values) {\n        if (!values) {\n            return undefined;\n        }\n        return values.map(location => asLocation(location));\n    }\n    function asDocumentHighlights(values) {\n        if (!values) {\n            return undefined;\n        }\n        return values.map(asDocumentHighlight);\n    }\n    function asDocumentHighlight(item) {\n        let result = new code.DocumentHighlight(asRange(item.range));\n        if (Is.number(item.kind)) {\n            result.kind = asDocumentHighlightKind(item.kind);\n        }\n        return result;\n    }\n    function asDocumentHighlightKind(item) {\n        switch (item) {\n            case ls.DocumentHighlightKind.Text:\n                return code.DocumentHighlightKind.Text;\n            case ls.DocumentHighlightKind.Read:\n                return code.DocumentHighlightKind.Read;\n            case ls.DocumentHighlightKind.Write:\n                return code.DocumentHighlightKind.Write;\n        }\n        return code.DocumentHighlightKind.Text;\n    }\n    function asSymbolInformations(values, uri) {\n        if (!values) {\n            return undefined;\n        }\n        return values.map(information => asSymbolInformation(information, uri));\n    }\n    function asSymbolKind(item) {\n        if (item <= ls.SymbolKind.TypeParameter) {\n            // Symbol kind is one based in the protocol and zero based in code.\n            return item - 1;\n        }\n        return code.SymbolKind.Property;\n    }\n    function asSymbolTag(value) {\n        return value;\n    }\n    function asSymbolTags(items) {\n        if (items === undefined || items === null) {\n            return undefined;\n        }\n        return items.map(asSymbolTag);\n    }\n    function asSymbolInformation(item, uri) {\n        // Symbol kind is one based in the protocol and zero based in code.\n        let result = new code.SymbolInformation(item.name, asSymbolKind(item.kind), asRange(item.location.range), item.location.uri ? _uriConverter(item.location.uri) : uri);\n        if (item.containerName) {\n            result.containerName = item.containerName;\n        }\n        return result;\n    }\n    function asDocumentSymbols(values) {\n        if (values === undefined || values === null) {\n            return undefined;\n        }\n        return values.map(asDocumentSymbol);\n    }\n    function asDocumentSymbol(value) {\n        let result = new code.DocumentSymbol(value.name, value.detail || '', asSymbolKind(value.kind), asRange(value.range), asRange(value.selectionRange));\n        if (value.children !== undefined && value.children.length > 0) {\n            let children = [];\n            for (let child of value.children) {\n                children.push(asDocumentSymbol(child));\n            }\n            result.children = children;\n        }\n        return result;\n    }\n    function asCommand(item) {\n        let result = { title: item.title, command: item.command };\n        if (item.arguments) {\n            result.arguments = item.arguments;\n        }\n        return result;\n    }\n    function asCommands(items) {\n        if (!items) {\n            return undefined;\n        }\n        return items.map(asCommand);\n    }\n    const kindMapping = new Map();\n    kindMapping.set(ls.CodeActionKind.Empty, code.CodeActionKind.Empty);\n    kindMapping.set(ls.CodeActionKind.QuickFix, code.CodeActionKind.QuickFix);\n    kindMapping.set(ls.CodeActionKind.Refactor, code.CodeActionKind.Refactor);\n    kindMapping.set(ls.CodeActionKind.RefactorExtract, code.CodeActionKind.RefactorExtract);\n    kindMapping.set(ls.CodeActionKind.RefactorInline, code.CodeActionKind.RefactorInline);\n    kindMapping.set(ls.CodeActionKind.RefactorRewrite, code.CodeActionKind.RefactorRewrite);\n    kindMapping.set(ls.CodeActionKind.Source, code.CodeActionKind.Source);\n    kindMapping.set(ls.CodeActionKind.SourceOrganizeImports, code.CodeActionKind.SourceOrganizeImports);\n    function asCodeActionKind(item) {\n        if (item === undefined || item === null) {\n            return undefined;\n        }\n        let result = kindMapping.get(item);\n        if (result) {\n            return result;\n        }\n        let parts = item.split('.');\n        result = code.CodeActionKind.Empty;\n        for (let part of parts) {\n            result = result.append(part);\n        }\n        return result;\n    }\n    function asCodeActionKinds(items) {\n        if (items === undefined || items === null) {\n            return undefined;\n        }\n        return items.map(kind => asCodeActionKind(kind));\n    }\n    function asCodeAction(item) {\n        if (item === undefined || item === null) {\n            return undefined;\n        }\n        let result = new code.CodeAction(item.title);\n        if (item.kind !== undefined) {\n            result.kind = asCodeActionKind(item.kind);\n        }\n        if (item.diagnostics) {\n            result.diagnostics = asDiagnostics(item.diagnostics);\n        }\n        if (item.edit) {\n            result.edit = asWorkspaceEdit(item.edit);\n        }\n        if (item.command) {\n            result.command = asCommand(item.command);\n        }\n        if (item.isPreferred !== undefined) {\n            result.isPreferred = item.isPreferred;\n        }\n        return result;\n    }\n    function asCodeLens(item) {\n        if (!item) {\n            return undefined;\n        }\n        let result = new protocolCodeLens_1.default(asRange(item.range));\n        if (item.command) {\n            result.command = asCommand(item.command);\n        }\n        if (item.data !== undefined && item.data !== null) {\n            result.data = item.data;\n        }\n        return result;\n    }\n    function asCodeLenses(items) {\n        if (!items) {\n            return undefined;\n        }\n        return items.map((codeLens) => asCodeLens(codeLens));\n    }\n    function asWorkspaceEdit(item) {\n        if (!item) {\n            return undefined;\n        }\n        let result = new code.WorkspaceEdit();\n        if (item.documentChanges) {\n            item.documentChanges.forEach(change => {\n                if (ls.CreateFile.is(change)) {\n                    result.createFile(_uriConverter(change.uri), change.options);\n                }\n                else if (ls.RenameFile.is(change)) {\n                    result.renameFile(_uriConverter(change.oldUri), _uriConverter(change.newUri), change.options);\n                }\n                else if (ls.DeleteFile.is(change)) {\n                    result.deleteFile(_uriConverter(change.uri), change.options);\n                }\n                else if (ls.TextDocumentEdit.is(change)) {\n                    result.set(_uriConverter(change.textDocument.uri), asTextEdits(change.edits));\n                }\n                else {\n                    console.error(`Unknown workspace edit change received:\\n${JSON.stringify(change, undefined, 4)}`);\n                }\n            });\n        }\n        else if (item.changes) {\n            Object.keys(item.changes).forEach(key => {\n                result.set(_uriConverter(key), asTextEdits(item.changes[key]));\n            });\n        }\n        return result;\n    }\n    function asDocumentLink(item) {\n        let range = asRange(item.range);\n        let target = item.target ? asUri(item.target) : undefined;\n        // target must be optional in DocumentLink\n        let link = new protocolDocumentLink_1.default(range, target);\n        if (item.tooltip !== undefined) {\n            link.tooltip = item.tooltip;\n        }\n        if (item.data !== undefined && item.data !== null) {\n            link.data = item.data;\n        }\n        return link;\n    }\n    function asDocumentLinks(items) {\n        if (!items) {\n            return undefined;\n        }\n        return items.map(asDocumentLink);\n    }\n    function asColor(color) {\n        return new code.Color(color.red, color.green, color.blue, color.alpha);\n    }\n    function asColorInformation(ci) {\n        return new code.ColorInformation(asRange(ci.range), asColor(ci.color));\n    }\n    function asColorInformations(colorInformation) {\n        if (Array.isArray(colorInformation)) {\n            return colorInformation.map(asColorInformation);\n        }\n        return undefined;\n    }\n    function asColorPresentation(cp) {\n        let presentation = new code.ColorPresentation(cp.label);\n        presentation.additionalTextEdits = asTextEdits(cp.additionalTextEdits);\n        if (cp.textEdit) {\n            presentation.textEdit = asTextEdit(cp.textEdit);\n        }\n        return presentation;\n    }\n    function asColorPresentations(colorPresentations) {\n        if (Array.isArray(colorPresentations)) {\n            return colorPresentations.map(asColorPresentation);\n        }\n        return undefined;\n    }\n    function asFoldingRangeKind(kind) {\n        if (kind) {\n            switch (kind) {\n                case ls.FoldingRangeKind.Comment:\n                    return code.FoldingRangeKind.Comment;\n                case ls.FoldingRangeKind.Imports:\n                    return code.FoldingRangeKind.Imports;\n                case ls.FoldingRangeKind.Region:\n                    return code.FoldingRangeKind.Region;\n            }\n        }\n        return undefined;\n    }\n    function asFoldingRange(r) {\n        return new code.FoldingRange(r.startLine, r.endLine, asFoldingRangeKind(r.kind));\n    }\n    function asFoldingRanges(foldingRanges) {\n        if (Array.isArray(foldingRanges)) {\n            return foldingRanges.map(asFoldingRange);\n        }\n        return undefined;\n    }\n    function asSelectionRange(selectionRange) {\n        return new code.SelectionRange(asRange(selectionRange.range), selectionRange.parent ? asSelectionRange(selectionRange.parent) : undefined);\n    }\n    function asSelectionRanges(selectionRanges) {\n        if (!Array.isArray(selectionRanges)) {\n            return [];\n        }\n        let result = [];\n        for (let range of selectionRanges) {\n            result.push(asSelectionRange(range));\n        }\n        return result;\n    }\n    return {\n        asUri,\n        asDiagnostics,\n        asDiagnostic,\n        asRange,\n        asRanges,\n        asPosition,\n        asDiagnosticSeverity,\n        asDiagnosticTag,\n        asHover,\n        asCompletionResult,\n        asCompletionItem,\n        asTextEdit,\n        asTextEdits,\n        asSignatureHelp,\n        asSignatureInformations,\n        asSignatureInformation,\n        asParameterInformations,\n        asParameterInformation,\n        asDeclarationResult,\n        asDefinitionResult,\n        asLocation,\n        asReferences,\n        asDocumentHighlights,\n        asDocumentHighlight,\n        asDocumentHighlightKind,\n        asSymbolKind,\n        asSymbolTag,\n        asSymbolTags,\n        asSymbolInformations,\n        asSymbolInformation,\n        asDocumentSymbols,\n        asDocumentSymbol,\n        asCommand,\n        asCommands,\n        asCodeAction,\n        asCodeActionKind,\n        asCodeActionKinds,\n        asCodeLens,\n        asCodeLenses,\n        asWorkspaceEdit,\n        asDocumentLink,\n        asDocumentLinks,\n        asFoldingRangeKind,\n        asFoldingRange,\n        asFoldingRanges,\n        asColor,\n        asColorInformation,\n        asColorInformations,\n        asColorPresentation,\n        asColorPresentations,\n        asSelectionRange,\n        asSelectionRanges\n    };\n}\nexports.createConverter = createConverter;\n", "/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\n'use strict';\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass Delayer {\n    constructor(defaultDelay) {\n        this.defaultDelay = defaultDelay;\n        this.timeout = undefined;\n        this.completionPromise = undefined;\n        this.onSuccess = undefined;\n        this.task = undefined;\n    }\n    trigger(task, delay = this.defaultDelay) {\n        this.task = task;\n        if (delay >= 0) {\n            this.cancelTimeout();\n        }\n        if (!this.completionPromise) {\n            this.completionPromise = new Promise((resolve) => {\n                this.onSuccess = resolve;\n            }).then(() => {\n                this.completionPromise = undefined;\n                this.onSuccess = undefined;\n                var result = this.task();\n                this.task = undefined;\n                return result;\n            });\n        }\n        if (delay >= 0 || this.timeout === void 0) {\n            this.timeout = setTimeout(() => {\n                this.timeout = undefined;\n                this.onSuccess(undefined);\n            }, delay >= 0 ? delay : this.defaultDelay);\n        }\n        return this.completionPromise;\n    }\n    forceDelivery() {\n        if (!this.completionPromise) {\n            return undefined;\n        }\n        this.cancelTimeout();\n        let result = this.task();\n        this.completionPromise = undefined;\n        this.onSuccess = undefined;\n        this.task = undefined;\n        return result;\n    }\n    isTriggered() {\n        return this.timeout !== void 0;\n    }\n    cancel() {\n        this.cancelTimeout();\n        this.completionPromise = undefined;\n    }\n    cancelTimeout() {\n        if (this.timeout !== void 0) {\n            clearTimeout(this.timeout);\n            this.timeout = undefined;\n        }\n    }\n}\nexports.Delayer = Delayer;\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass ValueUUID {\n    constructor(_value) {\n        this._value = _value;\n        // empty\n    }\n    asHex() {\n        return this._value;\n    }\n    equals(other) {\n        return this.asHex() === other.asHex();\n    }\n}\nclass V4UUID extends ValueUUID {\n    constructor() {\n        super([\n            V4UUID._randomHex(),\n            V4UUID._randomHex(),\n            V4UUID._randomHex(),\n            V4UUID._randomHex(),\n            V4UUID._randomHex(),\n            V4UUID._randomHex(),\n            V4UUID._randomHex(),\n            V4UUID._randomHex(),\n            '-',\n            V4UUID._randomHex(),\n            V4UUID._randomHex(),\n            V4UUID._randomHex(),\n            V4UUID._randomHex(),\n            '-',\n            '4',\n            V4UUID._randomHex(),\n            V4UUID._randomHex(),\n            V4UUID._randomHex(),\n            '-',\n            V4UUID._oneOf(V4UUID._timeHighBits),\n            V4UUID._randomHex(),\n            V4UUID._randomHex(),\n            V4UUID._randomHex(),\n            '-',\n            V4UUID._randomHex(),\n            V4UUID._randomHex(),\n            V4UUID._randomHex(),\n            V4UUID._randomHex(),\n            V4UUID._randomHex(),\n            V4UUID._randomHex(),\n            V4UUID._randomHex(),\n            V4UUID._randomHex(),\n            V4UUID._randomHex(),\n            V4UUID._randomHex(),\n            V4UUID._randomHex(),\n            V4UUID._randomHex(),\n        ].join(''));\n    }\n    static _oneOf(array) {\n        return array[Math.floor(array.length * Math.random())];\n    }\n    static _randomHex() {\n        return V4UUID._oneOf(V4UUID._chars);\n    }\n}\nV4UUID._chars = ['0', '1', '2', '3', '4', '5', '6', '6', '7', '8', '9', 'a', 'b', 'c', 'd', 'e', 'f'];\nV4UUID._timeHighBits = ['8', '9', 'a', 'b'];\n/**\n * An empty UUID that contains only zeros.\n */\nexports.empty = new ValueUUID('00000000-0000-0000-0000-000000000000');\nfunction v4() {\n    return new V4UUID();\n}\nexports.v4 = v4;\nconst _UUIDPattern = /^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$/i;\nfunction isUUID(value) {\n    return _UUIDPattern.test(value);\n}\nexports.isUUID = isUUID;\n/**\n * Parses a UUID that is of the format xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx.\n * @param value A uuid string.\n */\nfunction parse(value) {\n    if (!isUUID(value)) {\n        throw new Error('invalid uuid');\n    }\n    return new ValueUUID(value);\n}\nexports.parse = parse;\nfunction generateUuid() {\n    return v4().asHex();\n}\nexports.generateUuid = generateUuid;\n", "/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\n'use strict';\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst vscode_1 = require(\"vscode\");\nconst vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\nconst Is = require(\"./utils/is\");\nclass ProgressPart {\n    constructor(_client, _token) {\n        this._client = _client;\n        this._token = _token;\n        this._reported = 0;\n        this._disposable = this._client.onProgress(vscode_languageserver_protocol_1.WorkDoneProgress.type, this._token, (value) => {\n            switch (value.kind) {\n                case 'begin':\n                    this.begin(value);\n                    break;\n                case 'report':\n                    this.report(value);\n                    break;\n                case 'end':\n                    this.done();\n                    break;\n            }\n        });\n    }\n    begin(params) {\n        let location = params.cancellable ? vscode_1.ProgressLocation.Notification : vscode_1.ProgressLocation.Window;\n        vscode_1.window.withProgress({ location, cancellable: params.cancellable, title: params.title }, async (progress, cancellationToken) => {\n            this._progress = progress;\n            this._infinite = params.percentage === undefined;\n            this._cancellationToken = cancellationToken;\n            this._cancellationToken.onCancellationRequested(() => {\n                this._client.sendNotification(vscode_languageserver_protocol_1.WorkDoneProgressCancelNotification.type, { token: this._token });\n            });\n            this.report(params);\n            return new Promise((resolve, reject) => {\n                this._resolve = resolve;\n                this._reject = reject;\n            });\n        });\n    }\n    report(params) {\n        if (this._infinite && Is.string(params.message)) {\n            this._progress.report({ message: params.message });\n        }\n        else if (Is.number(params.percentage)) {\n            let percentage = Math.max(0, Math.min(params.percentage, 100));\n            let delta = Math.max(0, percentage - this._reported);\n            this._progress.report({ message: params.message, increment: delta });\n            this._reported += delta;\n        }\n    }\n    cancel() {\n        if (this._disposable) {\n            this._disposable.dispose();\n            this._disposable = undefined;\n        }\n        if (this._reject) {\n            this._reject();\n            this._resolve = undefined;\n            this._reject = undefined;\n        }\n    }\n    done() {\n        if (this._disposable) {\n            this._disposable.dispose();\n            this._disposable = undefined;\n        }\n        if (this._resolve) {\n            this._resolve();\n            this._resolve = undefined;\n            this._reject = undefined;\n        }\n    }\n}\nexports.ProgressPart = ProgressPart;\n", "/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\n'use strict';\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst vscode_1 = require(\"vscode\");\nconst vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\nconst c2p = require(\"./codeConverter\");\nconst p2c = require(\"./protocolConverter\");\nconst Is = require(\"./utils/is\");\nconst async_1 = require(\"./utils/async\");\nconst UUID = require(\"./utils/uuid\");\nconst progressPart_1 = require(\"./progressPart\");\n__export(require(\"vscode-languageserver-protocol\"));\nclass ConsoleLogger {\n    error(message) {\n        console.error(message);\n    }\n    warn(message) {\n        console.warn(message);\n    }\n    info(message) {\n        console.info(message);\n    }\n    log(message) {\n        console.log(message);\n    }\n}\nfunction createConnection(input, output, errorHandler, closeHandler) {\n    let logger = new ConsoleLogger();\n    let connection = vscode_languageserver_protocol_1.createProtocolConnection(input, output, logger);\n    connection.onError((data) => { errorHandler(data[0], data[1], data[2]); });\n    connection.onClose(closeHandler);\n    let result = {\n        listen: () => connection.listen(),\n        sendRequest: (type, ...params) => connection.sendRequest(Is.string(type) ? type : type.method, ...params),\n        onRequest: (type, handler) => connection.onRequest(Is.string(type) ? type : type.method, handler),\n        sendNotification: (type, params) => connection.sendNotification(Is.string(type) ? type : type.method, params),\n        onNotification: (type, handler) => connection.onNotification(Is.string(type) ? type : type.method, handler),\n        onProgress: connection.onProgress,\n        sendProgress: connection.sendProgress,\n        trace: (value, tracer, sendNotificationOrTraceOptions) => {\n            const defaultTraceOptions = {\n                sendNotification: false,\n                traceFormat: vscode_languageserver_protocol_1.TraceFormat.Text\n            };\n            if (sendNotificationOrTraceOptions === void 0) {\n                connection.trace(value, tracer, defaultTraceOptions);\n            }\n            else if (Is.boolean(sendNotificationOrTraceOptions)) {\n                connection.trace(value, tracer, sendNotificationOrTraceOptions);\n            }\n            else {\n                connection.trace(value, tracer, sendNotificationOrTraceOptions);\n            }\n        },\n        initialize: (params) => connection.sendRequest(vscode_languageserver_protocol_1.InitializeRequest.type, params),\n        shutdown: () => connection.sendRequest(vscode_languageserver_protocol_1.ShutdownRequest.type, undefined),\n        exit: () => connection.sendNotification(vscode_languageserver_protocol_1.ExitNotification.type),\n        onLogMessage: (handler) => connection.onNotification(vscode_languageserver_protocol_1.LogMessageNotification.type, handler),\n        onShowMessage: (handler) => connection.onNotification(vscode_languageserver_protocol_1.ShowMessageNotification.type, handler),\n        onTelemetry: (handler) => connection.onNotification(vscode_languageserver_protocol_1.TelemetryEventNotification.type, handler),\n        didChangeConfiguration: (params) => connection.sendNotification(vscode_languageserver_protocol_1.DidChangeConfigurationNotification.type, params),\n        didChangeWatchedFiles: (params) => connection.sendNotification(vscode_languageserver_protocol_1.DidChangeWatchedFilesNotification.type, params),\n        didOpenTextDocument: (params) => connection.sendNotification(vscode_languageserver_protocol_1.DidOpenTextDocumentNotification.type, params),\n        didChangeTextDocument: (params) => connection.sendNotification(vscode_languageserver_protocol_1.DidChangeTextDocumentNotification.type, params),\n        didCloseTextDocument: (params) => connection.sendNotification(vscode_languageserver_protocol_1.DidCloseTextDocumentNotification.type, params),\n        didSaveTextDocument: (params) => connection.sendNotification(vscode_languageserver_protocol_1.DidSaveTextDocumentNotification.type, params),\n        onDiagnostics: (handler) => connection.onNotification(vscode_languageserver_protocol_1.PublishDiagnosticsNotification.type, handler),\n        dispose: () => connection.dispose()\n    };\n    return result;\n}\n/**\n * An action to be performed when the connection is producing errors.\n */\nvar ErrorAction;\n(function (ErrorAction) {\n    /**\n     * Continue running the server.\n     */\n    ErrorAction[ErrorAction[\"Continue\"] = 1] = \"Continue\";\n    /**\n     * Shutdown the server.\n     */\n    ErrorAction[ErrorAction[\"Shutdown\"] = 2] = \"Shutdown\";\n})(ErrorAction = exports.ErrorAction || (exports.ErrorAction = {}));\n/**\n * An action to be performed when the connection to a server got closed.\n */\nvar CloseAction;\n(function (CloseAction) {\n    /**\n     * Don't restart the server. The connection stays closed.\n     */\n    CloseAction[CloseAction[\"DoNotRestart\"] = 1] = \"DoNotRestart\";\n    /**\n     * Restart the server.\n     */\n    CloseAction[CloseAction[\"Restart\"] = 2] = \"Restart\";\n})(CloseAction = exports.CloseAction || (exports.CloseAction = {}));\nclass DefaultErrorHandler {\n    constructor(name) {\n        this.name = name;\n        this.restarts = [];\n    }\n    error(_error, _message, count) {\n        if (count && count <= 3) {\n            return ErrorAction.Continue;\n        }\n        return ErrorAction.Shutdown;\n    }\n    closed() {\n        this.restarts.push(Date.now());\n        if (this.restarts.length < 5) {\n            return CloseAction.Restart;\n        }\n        else {\n            let diff = this.restarts[this.restarts.length - 1] - this.restarts[0];\n            if (diff <= 3 * 60 * 1000) {\n                vscode_1.window.showErrorMessage(`The ${this.name} server crashed 5 times in the last 3 minutes. The server will not be restarted.`);\n                return CloseAction.DoNotRestart;\n            }\n            else {\n                this.restarts.shift();\n                return CloseAction.Restart;\n            }\n        }\n    }\n}\nvar RevealOutputChannelOn;\n(function (RevealOutputChannelOn) {\n    RevealOutputChannelOn[RevealOutputChannelOn[\"Info\"] = 1] = \"Info\";\n    RevealOutputChannelOn[RevealOutputChannelOn[\"Warn\"] = 2] = \"Warn\";\n    RevealOutputChannelOn[RevealOutputChannelOn[\"Error\"] = 3] = \"Error\";\n    RevealOutputChannelOn[RevealOutputChannelOn[\"Never\"] = 4] = \"Never\";\n})(RevealOutputChannelOn = exports.RevealOutputChannelOn || (exports.RevealOutputChannelOn = {}));\nvar State;\n(function (State) {\n    State[State[\"Stopped\"] = 1] = \"Stopped\";\n    State[State[\"Starting\"] = 3] = \"Starting\";\n    State[State[\"Running\"] = 2] = \"Running\";\n})(State = exports.State || (exports.State = {}));\nvar ClientState;\n(function (ClientState) {\n    ClientState[ClientState[\"Initial\"] = 0] = \"Initial\";\n    ClientState[ClientState[\"Starting\"] = 1] = \"Starting\";\n    ClientState[ClientState[\"StartFailed\"] = 2] = \"StartFailed\";\n    ClientState[ClientState[\"Running\"] = 3] = \"Running\";\n    ClientState[ClientState[\"Stopping\"] = 4] = \"Stopping\";\n    ClientState[ClientState[\"Stopped\"] = 5] = \"Stopped\";\n})(ClientState || (ClientState = {}));\nconst SupportedSymbolKinds = [\n    vscode_languageserver_protocol_1.SymbolKind.File,\n    vscode_languageserver_protocol_1.SymbolKind.Module,\n    vscode_languageserver_protocol_1.SymbolKind.Namespace,\n    vscode_languageserver_protocol_1.SymbolKind.Package,\n    vscode_languageserver_protocol_1.SymbolKind.Class,\n    vscode_languageserver_protocol_1.SymbolKind.Method,\n    vscode_languageserver_protocol_1.SymbolKind.Property,\n    vscode_languageserver_protocol_1.SymbolKind.Field,\n    vscode_languageserver_protocol_1.SymbolKind.Constructor,\n    vscode_languageserver_protocol_1.SymbolKind.Enum,\n    vscode_languageserver_protocol_1.SymbolKind.Interface,\n    vscode_languageserver_protocol_1.SymbolKind.Function,\n    vscode_languageserver_protocol_1.SymbolKind.Variable,\n    vscode_languageserver_protocol_1.SymbolKind.Constant,\n    vscode_languageserver_protocol_1.SymbolKind.String,\n    vscode_languageserver_protocol_1.SymbolKind.Number,\n    vscode_languageserver_protocol_1.SymbolKind.Boolean,\n    vscode_languageserver_protocol_1.SymbolKind.Array,\n    vscode_languageserver_protocol_1.SymbolKind.Object,\n    vscode_languageserver_protocol_1.SymbolKind.Key,\n    vscode_languageserver_protocol_1.SymbolKind.Null,\n    vscode_languageserver_protocol_1.SymbolKind.EnumMember,\n    vscode_languageserver_protocol_1.SymbolKind.Struct,\n    vscode_languageserver_protocol_1.SymbolKind.Event,\n    vscode_languageserver_protocol_1.SymbolKind.Operator,\n    vscode_languageserver_protocol_1.SymbolKind.TypeParameter\n];\nconst SupportedCompletionItemKinds = [\n    vscode_languageserver_protocol_1.CompletionItemKind.Text,\n    vscode_languageserver_protocol_1.CompletionItemKind.Method,\n    vscode_languageserver_protocol_1.CompletionItemKind.Function,\n    vscode_languageserver_protocol_1.CompletionItemKind.Constructor,\n    vscode_languageserver_protocol_1.CompletionItemKind.Field,\n    vscode_languageserver_protocol_1.CompletionItemKind.Variable,\n    vscode_languageserver_protocol_1.CompletionItemKind.Class,\n    vscode_languageserver_protocol_1.CompletionItemKind.Interface,\n    vscode_languageserver_protocol_1.CompletionItemKind.Module,\n    vscode_languageserver_protocol_1.CompletionItemKind.Property,\n    vscode_languageserver_protocol_1.CompletionItemKind.Unit,\n    vscode_languageserver_protocol_1.CompletionItemKind.Value,\n    vscode_languageserver_protocol_1.CompletionItemKind.Enum,\n    vscode_languageserver_protocol_1.CompletionItemKind.Keyword,\n    vscode_languageserver_protocol_1.CompletionItemKind.Snippet,\n    vscode_languageserver_protocol_1.CompletionItemKind.Color,\n    vscode_languageserver_protocol_1.CompletionItemKind.File,\n    vscode_languageserver_protocol_1.CompletionItemKind.Reference,\n    vscode_languageserver_protocol_1.CompletionItemKind.Folder,\n    vscode_languageserver_protocol_1.CompletionItemKind.EnumMember,\n    vscode_languageserver_protocol_1.CompletionItemKind.Constant,\n    vscode_languageserver_protocol_1.CompletionItemKind.Struct,\n    vscode_languageserver_protocol_1.CompletionItemKind.Event,\n    vscode_languageserver_protocol_1.CompletionItemKind.Operator,\n    vscode_languageserver_protocol_1.CompletionItemKind.TypeParameter\n];\nfunction ensure(target, key) {\n    if (target[key] === void 0) {\n        target[key] = {};\n    }\n    return target[key];\n}\nvar DynamicFeature;\n(function (DynamicFeature) {\n    function is(value) {\n        let candidate = value;\n        return candidate && Is.func(candidate.register) && Is.func(candidate.unregister) && Is.func(candidate.dispose) && candidate.messages !== void 0;\n    }\n    DynamicFeature.is = is;\n})(DynamicFeature || (DynamicFeature = {}));\nclass DocumentNotifiactions {\n    constructor(_client, _event, _type, _middleware, _createParams, _selectorFilter) {\n        this._client = _client;\n        this._event = _event;\n        this._type = _type;\n        this._middleware = _middleware;\n        this._createParams = _createParams;\n        this._selectorFilter = _selectorFilter;\n        this._selectors = new Map();\n    }\n    static textDocumentFilter(selectors, textDocument) {\n        for (const selector of selectors) {\n            if (vscode_1.languages.match(selector, textDocument)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    register(_message, data) {\n        if (!data.registerOptions.documentSelector) {\n            return;\n        }\n        if (!this._listener) {\n            this._listener = this._event(this.callback, this);\n        }\n        this._selectors.set(data.id, data.registerOptions.documentSelector);\n    }\n    callback(data) {\n        if (!this._selectorFilter || this._selectorFilter(this._selectors.values(), data)) {\n            if (this._middleware) {\n                this._middleware(data, (data) => this._client.sendNotification(this._type, this._createParams(data)));\n            }\n            else {\n                this._client.sendNotification(this._type, this._createParams(data));\n            }\n            this.notificationSent(data);\n        }\n    }\n    notificationSent(_data) {\n    }\n    unregister(id) {\n        this._selectors.delete(id);\n        if (this._selectors.size === 0 && this._listener) {\n            this._listener.dispose();\n            this._listener = undefined;\n        }\n    }\n    dispose() {\n        this._selectors.clear();\n        if (this._listener) {\n            this._listener.dispose();\n            this._listener = undefined;\n        }\n    }\n    getProvider(document) {\n        for (const selector of this._selectors.values()) {\n            if (vscode_1.languages.match(selector, document)) {\n                return {\n                    send: (data) => {\n                        this.callback(data);\n                    }\n                };\n            }\n        }\n        throw new Error(`No provider available for the given text document`);\n    }\n}\nclass DidOpenTextDocumentFeature extends DocumentNotifiactions {\n    constructor(client, _syncedDocuments) {\n        super(client, vscode_1.workspace.onDidOpenTextDocument, vscode_languageserver_protocol_1.DidOpenTextDocumentNotification.type, client.clientOptions.middleware.didOpen, (textDocument) => client.code2ProtocolConverter.asOpenTextDocumentParams(textDocument), DocumentNotifiactions.textDocumentFilter);\n        this._syncedDocuments = _syncedDocuments;\n    }\n    get messages() {\n        return vscode_languageserver_protocol_1.DidOpenTextDocumentNotification.type;\n    }\n    fillClientCapabilities(capabilities) {\n        ensure(ensure(capabilities, 'textDocument'), 'synchronization').dynamicRegistration = true;\n    }\n    initialize(capabilities, documentSelector) {\n        let textDocumentSyncOptions = capabilities.resolvedTextDocumentSync;\n        if (documentSelector && textDocumentSyncOptions && textDocumentSyncOptions.openClose) {\n            this.register(this.messages, { id: UUID.generateUuid(), registerOptions: { documentSelector: documentSelector } });\n        }\n    }\n    register(message, data) {\n        super.register(message, data);\n        if (!data.registerOptions.documentSelector) {\n            return;\n        }\n        let documentSelector = data.registerOptions.documentSelector;\n        vscode_1.workspace.textDocuments.forEach((textDocument) => {\n            let uri = textDocument.uri.toString();\n            if (this._syncedDocuments.has(uri)) {\n                return;\n            }\n            if (vscode_1.languages.match(documentSelector, textDocument)) {\n                let middleware = this._client.clientOptions.middleware;\n                let didOpen = (textDocument) => {\n                    this._client.sendNotification(this._type, this._createParams(textDocument));\n                };\n                if (middleware.didOpen) {\n                    middleware.didOpen(textDocument, didOpen);\n                }\n                else {\n                    didOpen(textDocument);\n                }\n                this._syncedDocuments.set(uri, textDocument);\n            }\n        });\n    }\n    notificationSent(textDocument) {\n        super.notificationSent(textDocument);\n        this._syncedDocuments.set(textDocument.uri.toString(), textDocument);\n    }\n}\nclass DidCloseTextDocumentFeature extends DocumentNotifiactions {\n    constructor(client, _syncedDocuments) {\n        super(client, vscode_1.workspace.onDidCloseTextDocument, vscode_languageserver_protocol_1.DidCloseTextDocumentNotification.type, client.clientOptions.middleware.didClose, (textDocument) => client.code2ProtocolConverter.asCloseTextDocumentParams(textDocument), DocumentNotifiactions.textDocumentFilter);\n        this._syncedDocuments = _syncedDocuments;\n    }\n    get messages() {\n        return vscode_languageserver_protocol_1.DidCloseTextDocumentNotification.type;\n    }\n    fillClientCapabilities(capabilities) {\n        ensure(ensure(capabilities, 'textDocument'), 'synchronization').dynamicRegistration = true;\n    }\n    initialize(capabilities, documentSelector) {\n        let textDocumentSyncOptions = capabilities.resolvedTextDocumentSync;\n        if (documentSelector && textDocumentSyncOptions && textDocumentSyncOptions.openClose) {\n            this.register(this.messages, { id: UUID.generateUuid(), registerOptions: { documentSelector: documentSelector } });\n        }\n    }\n    notificationSent(textDocument) {\n        super.notificationSent(textDocument);\n        this._syncedDocuments.delete(textDocument.uri.toString());\n    }\n    unregister(id) {\n        let selector = this._selectors.get(id);\n        // The super call removed the selector from the map\n        // of selectors.\n        super.unregister(id);\n        let selectors = this._selectors.values();\n        this._syncedDocuments.forEach((textDocument) => {\n            if (vscode_1.languages.match(selector, textDocument) && !this._selectorFilter(selectors, textDocument)) {\n                let middleware = this._client.clientOptions.middleware;\n                let didClose = (textDocument) => {\n                    this._client.sendNotification(this._type, this._createParams(textDocument));\n                };\n                this._syncedDocuments.delete(textDocument.uri.toString());\n                if (middleware.didClose) {\n                    middleware.didClose(textDocument, didClose);\n                }\n                else {\n                    didClose(textDocument);\n                }\n            }\n        });\n    }\n}\nclass DidChangeTextDocumentFeature {\n    constructor(_client) {\n        this._client = _client;\n        this._changeData = new Map();\n        this._forcingDelivery = false;\n    }\n    get messages() {\n        return vscode_languageserver_protocol_1.DidChangeTextDocumentNotification.type;\n    }\n    fillClientCapabilities(capabilities) {\n        ensure(ensure(capabilities, 'textDocument'), 'synchronization').dynamicRegistration = true;\n    }\n    initialize(capabilities, documentSelector) {\n        let textDocumentSyncOptions = capabilities.resolvedTextDocumentSync;\n        if (documentSelector && textDocumentSyncOptions && textDocumentSyncOptions.change !== void 0 && textDocumentSyncOptions.change !== vscode_languageserver_protocol_1.TextDocumentSyncKind.None) {\n            this.register(this.messages, {\n                id: UUID.generateUuid(),\n                registerOptions: Object.assign({}, { documentSelector: documentSelector }, { syncKind: textDocumentSyncOptions.change })\n            });\n        }\n    }\n    register(_message, data) {\n        if (!data.registerOptions.documentSelector) {\n            return;\n        }\n        if (!this._listener) {\n            this._listener = vscode_1.workspace.onDidChangeTextDocument(this.callback, this);\n        }\n        this._changeData.set(data.id, {\n            documentSelector: data.registerOptions.documentSelector,\n            syncKind: data.registerOptions.syncKind\n        });\n    }\n    callback(event) {\n        // Text document changes are send for dirty changes as well. We don't\n        // have dirty / undirty events in the LSP so we ignore content changes\n        // with length zero.\n        if (event.contentChanges.length === 0) {\n            return;\n        }\n        for (const changeData of this._changeData.values()) {\n            if (vscode_1.languages.match(changeData.documentSelector, event.document)) {\n                let middleware = this._client.clientOptions.middleware;\n                if (changeData.syncKind === vscode_languageserver_protocol_1.TextDocumentSyncKind.Incremental) {\n                    let params = this._client.code2ProtocolConverter.asChangeTextDocumentParams(event);\n                    if (middleware.didChange) {\n                        middleware.didChange(event, () => this._client.sendNotification(vscode_languageserver_protocol_1.DidChangeTextDocumentNotification.type, params));\n                    }\n                    else {\n                        this._client.sendNotification(vscode_languageserver_protocol_1.DidChangeTextDocumentNotification.type, params);\n                    }\n                }\n                else if (changeData.syncKind === vscode_languageserver_protocol_1.TextDocumentSyncKind.Full) {\n                    let didChange = (event) => {\n                        if (this._changeDelayer) {\n                            if (this._changeDelayer.uri !== event.document.uri.toString()) {\n                                // Use this force delivery to track boolean state. Otherwise we might call two times.\n                                this.forceDelivery();\n                                this._changeDelayer.uri = event.document.uri.toString();\n                            }\n                            this._changeDelayer.delayer.trigger(() => {\n                                this._client.sendNotification(vscode_languageserver_protocol_1.DidChangeTextDocumentNotification.type, this._client.code2ProtocolConverter.asChangeTextDocumentParams(event.document));\n                            });\n                        }\n                        else {\n                            this._changeDelayer = {\n                                uri: event.document.uri.toString(),\n                                delayer: new async_1.Delayer(200)\n                            };\n                            this._changeDelayer.delayer.trigger(() => {\n                                this._client.sendNotification(vscode_languageserver_protocol_1.DidChangeTextDocumentNotification.type, this._client.code2ProtocolConverter.asChangeTextDocumentParams(event.document));\n                            }, -1);\n                        }\n                    };\n                    if (middleware.didChange) {\n                        middleware.didChange(event, didChange);\n                    }\n                    else {\n                        didChange(event);\n                    }\n                }\n            }\n        }\n    }\n    unregister(id) {\n        this._changeData.delete(id);\n        if (this._changeData.size === 0 && this._listener) {\n            this._listener.dispose();\n            this._listener = undefined;\n        }\n    }\n    dispose() {\n        this._changeDelayer = undefined;\n        this._forcingDelivery = false;\n        this._changeData.clear();\n        if (this._listener) {\n            this._listener.dispose();\n            this._listener = undefined;\n        }\n    }\n    forceDelivery() {\n        if (this._forcingDelivery || !this._changeDelayer) {\n            return;\n        }\n        try {\n            this._forcingDelivery = true;\n            this._changeDelayer.delayer.forceDelivery();\n        }\n        finally {\n            this._forcingDelivery = false;\n        }\n    }\n    getProvider(document) {\n        for (const changeData of this._changeData.values()) {\n            if (vscode_1.languages.match(changeData.documentSelector, document)) {\n                return {\n                    send: (event) => {\n                        this.callback(event);\n                    }\n                };\n            }\n        }\n        throw new Error(`No provider available for the given text document`);\n    }\n}\nclass WillSaveFeature extends DocumentNotifiactions {\n    constructor(client) {\n        super(client, vscode_1.workspace.onWillSaveTextDocument, vscode_languageserver_protocol_1.WillSaveTextDocumentNotification.type, client.clientOptions.middleware.willSave, (willSaveEvent) => client.code2ProtocolConverter.asWillSaveTextDocumentParams(willSaveEvent), (selectors, willSaveEvent) => DocumentNotifiactions.textDocumentFilter(selectors, willSaveEvent.document));\n    }\n    get messages() {\n        return vscode_languageserver_protocol_1.WillSaveTextDocumentNotification.type;\n    }\n    fillClientCapabilities(capabilities) {\n        let value = ensure(ensure(capabilities, 'textDocument'), 'synchronization');\n        value.willSave = true;\n    }\n    initialize(capabilities, documentSelector) {\n        let textDocumentSyncOptions = capabilities.resolvedTextDocumentSync;\n        if (documentSelector && textDocumentSyncOptions && textDocumentSyncOptions.willSave) {\n            this.register(this.messages, {\n                id: UUID.generateUuid(),\n                registerOptions: { documentSelector: documentSelector }\n            });\n        }\n    }\n}\nclass WillSaveWaitUntilFeature {\n    constructor(_client) {\n        this._client = _client;\n        this._selectors = new Map();\n    }\n    get messages() {\n        return vscode_languageserver_protocol_1.WillSaveTextDocumentWaitUntilRequest.type;\n    }\n    fillClientCapabilities(capabilities) {\n        let value = ensure(ensure(capabilities, 'textDocument'), 'synchronization');\n        value.willSaveWaitUntil = true;\n    }\n    initialize(capabilities, documentSelector) {\n        let textDocumentSyncOptions = capabilities.resolvedTextDocumentSync;\n        if (documentSelector && textDocumentSyncOptions && textDocumentSyncOptions.willSaveWaitUntil) {\n            this.register(this.messages, {\n                id: UUID.generateUuid(),\n                registerOptions: { documentSelector: documentSelector }\n            });\n        }\n    }\n    register(_message, data) {\n        if (!data.registerOptions.documentSelector) {\n            return;\n        }\n        if (!this._listener) {\n            this._listener = vscode_1.workspace.onWillSaveTextDocument(this.callback, this);\n        }\n        this._selectors.set(data.id, data.registerOptions.documentSelector);\n    }\n    callback(event) {\n        if (DocumentNotifiactions.textDocumentFilter(this._selectors.values(), event.document)) {\n            let middleware = this._client.clientOptions.middleware;\n            let willSaveWaitUntil = (event) => {\n                return this._client.sendRequest(vscode_languageserver_protocol_1.WillSaveTextDocumentWaitUntilRequest.type, this._client.code2ProtocolConverter.asWillSaveTextDocumentParams(event)).then((edits) => {\n                    let vEdits = this._client.protocol2CodeConverter.asTextEdits(edits);\n                    return vEdits === void 0 ? [] : vEdits;\n                });\n            };\n            event.waitUntil(middleware.willSaveWaitUntil\n                ? middleware.willSaveWaitUntil(event, willSaveWaitUntil)\n                : willSaveWaitUntil(event));\n        }\n    }\n    unregister(id) {\n        this._selectors.delete(id);\n        if (this._selectors.size === 0 && this._listener) {\n            this._listener.dispose();\n            this._listener = undefined;\n        }\n    }\n    dispose() {\n        this._selectors.clear();\n        if (this._listener) {\n            this._listener.dispose();\n            this._listener = undefined;\n        }\n    }\n}\nclass DidSaveTextDocumentFeature extends DocumentNotifiactions {\n    constructor(client) {\n        super(client, vscode_1.workspace.onDidSaveTextDocument, vscode_languageserver_protocol_1.DidSaveTextDocumentNotification.type, client.clientOptions.middleware.didSave, (textDocument) => client.code2ProtocolConverter.asSaveTextDocumentParams(textDocument, this._includeText), DocumentNotifiactions.textDocumentFilter);\n    }\n    get messages() {\n        return vscode_languageserver_protocol_1.DidSaveTextDocumentNotification.type;\n    }\n    fillClientCapabilities(capabilities) {\n        ensure(ensure(capabilities, 'textDocument'), 'synchronization').didSave = true;\n    }\n    initialize(capabilities, documentSelector) {\n        let textDocumentSyncOptions = capabilities.resolvedTextDocumentSync;\n        if (documentSelector && textDocumentSyncOptions && textDocumentSyncOptions.save) {\n            this.register(this.messages, {\n                id: UUID.generateUuid(),\n                registerOptions: Object.assign({}, { documentSelector: documentSelector }, { includeText: !!textDocumentSyncOptions.save.includeText })\n            });\n        }\n    }\n    register(method, data) {\n        this._includeText = !!data.registerOptions.includeText;\n        super.register(method, data);\n    }\n}\nclass FileSystemWatcherFeature {\n    constructor(_client, _notifyFileEvent) {\n        this._client = _client;\n        this._notifyFileEvent = _notifyFileEvent;\n        this._watchers = new Map();\n    }\n    get messages() {\n        return vscode_languageserver_protocol_1.DidChangeWatchedFilesNotification.type;\n    }\n    fillClientCapabilities(capabilities) {\n        ensure(ensure(capabilities, 'workspace'), 'didChangeWatchedFiles').dynamicRegistration = true;\n    }\n    initialize(_capabilities, _documentSelector) {\n    }\n    register(_method, data) {\n        if (!Array.isArray(data.registerOptions.watchers)) {\n            return;\n        }\n        let disposeables = [];\n        for (let watcher of data.registerOptions.watchers) {\n            if (!Is.string(watcher.globPattern)) {\n                continue;\n            }\n            let watchCreate = true, watchChange = true, watchDelete = true;\n            if (watcher.kind !== void 0 && watcher.kind !== null) {\n                watchCreate = (watcher.kind & vscode_languageserver_protocol_1.WatchKind.Create) !== 0;\n                watchChange = (watcher.kind & vscode_languageserver_protocol_1.WatchKind.Change) !== 0;\n                watchDelete = (watcher.kind & vscode_languageserver_protocol_1.WatchKind.Delete) !== 0;\n            }\n            let fileSystemWatcher = vscode_1.workspace.createFileSystemWatcher(watcher.globPattern, !watchCreate, !watchChange, !watchDelete);\n            this.hookListeners(fileSystemWatcher, watchCreate, watchChange, watchDelete);\n            disposeables.push(fileSystemWatcher);\n        }\n        this._watchers.set(data.id, disposeables);\n    }\n    registerRaw(id, fileSystemWatchers) {\n        let disposeables = [];\n        for (let fileSystemWatcher of fileSystemWatchers) {\n            this.hookListeners(fileSystemWatcher, true, true, true, disposeables);\n        }\n        this._watchers.set(id, disposeables);\n    }\n    hookListeners(fileSystemWatcher, watchCreate, watchChange, watchDelete, listeners) {\n        if (watchCreate) {\n            fileSystemWatcher.onDidCreate((resource) => this._notifyFileEvent({\n                uri: this._client.code2ProtocolConverter.asUri(resource),\n                type: vscode_languageserver_protocol_1.FileChangeType.Created\n            }), null, listeners);\n        }\n        if (watchChange) {\n            fileSystemWatcher.onDidChange((resource) => this._notifyFileEvent({\n                uri: this._client.code2ProtocolConverter.asUri(resource),\n                type: vscode_languageserver_protocol_1.FileChangeType.Changed\n            }), null, listeners);\n        }\n        if (watchDelete) {\n            fileSystemWatcher.onDidDelete((resource) => this._notifyFileEvent({\n                uri: this._client.code2ProtocolConverter.asUri(resource),\n                type: vscode_languageserver_protocol_1.FileChangeType.Deleted\n            }), null, listeners);\n        }\n    }\n    unregister(id) {\n        let disposeables = this._watchers.get(id);\n        if (disposeables) {\n            for (let disposable of disposeables) {\n                disposable.dispose();\n            }\n        }\n    }\n    dispose() {\n        this._watchers.forEach((disposeables) => {\n            for (let disposable of disposeables) {\n                disposable.dispose();\n            }\n        });\n        this._watchers.clear();\n    }\n}\nclass TextDocumentFeature {\n    constructor(_client, _message) {\n        this._client = _client;\n        this._message = _message;\n        this._registrations = new Map();\n    }\n    get messages() {\n        return this._message;\n    }\n    register(message, data) {\n        if (message.method !== this.messages.method) {\n            throw new Error(`Register called on wrong feature. Requested ${message.method} but reached feature ${this.messages.method}`);\n        }\n        if (!data.registerOptions.documentSelector) {\n            return;\n        }\n        let registration = this.registerLanguageProvider(data.registerOptions);\n        this._registrations.set(data.id, { disposable: registration[0], data, provider: registration[1] });\n    }\n    unregister(id) {\n        let registration = this._registrations.get(id);\n        if (registration !== undefined) {\n            registration.disposable.dispose();\n        }\n    }\n    dispose() {\n        this._registrations.forEach((value) => {\n            value.disposable.dispose();\n        });\n        this._registrations.clear();\n    }\n    getRegistration(documentSelector, capability) {\n        if (!capability) {\n            return [undefined, undefined];\n        }\n        else if (vscode_languageserver_protocol_1.TextDocumentRegistrationOptions.is(capability)) {\n            const id = vscode_languageserver_protocol_1.StaticRegistrationOptions.hasId(capability) ? capability.id : UUID.generateUuid();\n            const selector = capability.documentSelector || documentSelector;\n            if (selector) {\n                return [id, Object.assign({}, capability, { documentSelector: selector })];\n            }\n        }\n        else if (Is.boolean(capability) && capability === true || vscode_languageserver_protocol_1.WorkDoneProgressOptions.is(capability)) {\n            if (!documentSelector) {\n                return [undefined, undefined];\n            }\n            let options = (Is.boolean(capability) && capability === true ? { documentSelector } : Object.assign({}, capability, { documentSelector }));\n            return [UUID.generateUuid(), options];\n        }\n        return [undefined, undefined];\n    }\n    getRegistrationOptions(documentSelector, capability) {\n        if (!documentSelector || !capability) {\n            return undefined;\n        }\n        return (Is.boolean(capability) && capability === true ? { documentSelector } : Object.assign({}, capability, { documentSelector }));\n    }\n    getProvider(textDocument) {\n        for (const registration of this._registrations.values()) {\n            let selector = registration.data.registerOptions.documentSelector;\n            if (selector !== null && vscode_1.languages.match(selector, textDocument)) {\n                return registration.provider;\n            }\n        }\n        throw new Error(`The feature has no registration for the provided text document ${textDocument.uri.toString()}`);\n    }\n}\nexports.TextDocumentFeature = TextDocumentFeature;\nclass WorkspaceFeature {\n    constructor(_client, _message) {\n        this._client = _client;\n        this._message = _message;\n        this._registrations = new Map();\n    }\n    get messages() {\n        return this._message;\n    }\n    register(message, data) {\n        if (message.method !== this.messages.method) {\n            throw new Error(`Register called on wron feature. Requested ${message.method} but reached feature ${this.messages.method}`);\n        }\n        const registration = this.registerLanguageProvider(data.registerOptions);\n        this._registrations.set(data.id, { disposable: registration[0], provider: registration[1] });\n    }\n    unregister(id) {\n        let registration = this._registrations.get(id);\n        if (registration !== undefined) {\n            registration.disposable.dispose();\n        }\n    }\n    dispose() {\n        this._registrations.forEach((registration) => {\n            registration.disposable.dispose();\n        });\n        this._registrations.clear();\n    }\n    getProviders() {\n        const result = [];\n        for (const registration of this._registrations.values()) {\n            result.push(registration.provider);\n        }\n        return result;\n    }\n}\nclass CompletionItemFeature extends TextDocumentFeature {\n    constructor(client) {\n        super(client, vscode_languageserver_protocol_1.CompletionRequest.type);\n    }\n    fillClientCapabilities(capabilites) {\n        let completion = ensure(ensure(capabilites, 'textDocument'), 'completion');\n        completion.dynamicRegistration = true;\n        completion.contextSupport = true;\n        completion.completionItem = {\n            snippetSupport: true,\n            commitCharactersSupport: true,\n            documentationFormat: [vscode_languageserver_protocol_1.MarkupKind.Markdown, vscode_languageserver_protocol_1.MarkupKind.PlainText],\n            deprecatedSupport: true,\n            preselectSupport: true,\n            tagSupport: { valueSet: [vscode_languageserver_protocol_1.CompletionItemTag.Deprecated] }\n        };\n        completion.completionItemKind = { valueSet: SupportedCompletionItemKinds };\n    }\n    initialize(capabilities, documentSelector) {\n        const options = this.getRegistrationOptions(documentSelector, capabilities.completionProvider);\n        if (!options) {\n            return;\n        }\n        this.register(this.messages, {\n            id: UUID.generateUuid(),\n            registerOptions: options\n        });\n    }\n    registerLanguageProvider(options) {\n        const triggerCharacters = options.triggerCharacters || [];\n        const provider = {\n            provideCompletionItems: (document, position, token, context) => {\n                const client = this._client;\n                const middleware = this._client.clientOptions.middleware;\n                const provideCompletionItems = (document, position, context, token) => {\n                    return client.sendRequest(vscode_languageserver_protocol_1.CompletionRequest.type, client.code2ProtocolConverter.asCompletionParams(document, position, context), token).then(client.protocol2CodeConverter.asCompletionResult, (error) => {\n                        client.logFailedRequest(vscode_languageserver_protocol_1.CompletionRequest.type, error);\n                        return Promise.resolve([]);\n                    });\n                };\n                return middleware.provideCompletionItem\n                    ? middleware.provideCompletionItem(document, position, context, token, provideCompletionItems)\n                    : provideCompletionItems(document, position, context, token);\n            },\n            resolveCompletionItem: options.resolveProvider\n                ? (item, token) => {\n                    const client = this._client;\n                    const middleware = this._client.clientOptions.middleware;\n                    const resolveCompletionItem = (item, token) => {\n                        return client.sendRequest(vscode_languageserver_protocol_1.CompletionResolveRequest.type, client.code2ProtocolConverter.asCompletionItem(item), token).then(client.protocol2CodeConverter.asCompletionItem, (error) => {\n                            client.logFailedRequest(vscode_languageserver_protocol_1.CompletionResolveRequest.type, error);\n                            return Promise.resolve(item);\n                        });\n                    };\n                    return middleware.resolveCompletionItem\n                        ? middleware.resolveCompletionItem(item, token, resolveCompletionItem)\n                        : resolveCompletionItem(item, token);\n                }\n                : undefined\n        };\n        return [vscode_1.languages.registerCompletionItemProvider(options.documentSelector, provider, ...triggerCharacters), provider];\n    }\n}\nclass HoverFeature extends TextDocumentFeature {\n    constructor(client) {\n        super(client, vscode_languageserver_protocol_1.HoverRequest.type);\n    }\n    fillClientCapabilities(capabilites) {\n        const hoverCapability = (ensure(ensure(capabilites, 'textDocument'), 'hover'));\n        hoverCapability.dynamicRegistration = true;\n        hoverCapability.contentFormat = [vscode_languageserver_protocol_1.MarkupKind.Markdown, vscode_languageserver_protocol_1.MarkupKind.PlainText];\n    }\n    initialize(capabilities, documentSelector) {\n        const options = this.getRegistrationOptions(documentSelector, capabilities.hoverProvider);\n        if (!options) {\n            return;\n        }\n        this.register(this.messages, {\n            id: UUID.generateUuid(),\n            registerOptions: options\n        });\n    }\n    registerLanguageProvider(options) {\n        const provider = {\n            provideHover: (document, position, token) => {\n                const client = this._client;\n                const provideHover = (document, position, token) => {\n                    return client.sendRequest(vscode_languageserver_protocol_1.HoverRequest.type, client.code2ProtocolConverter.asTextDocumentPositionParams(document, position), token).then(client.protocol2CodeConverter.asHover, (error) => {\n                        client.logFailedRequest(vscode_languageserver_protocol_1.HoverRequest.type, error);\n                        return Promise.resolve(null);\n                    });\n                };\n                const middleware = client.clientOptions.middleware;\n                return middleware.provideHover\n                    ? middleware.provideHover(document, position, token, provideHover)\n                    : provideHover(document, position, token);\n            }\n        };\n        return [vscode_1.languages.registerHoverProvider(options.documentSelector, provider), provider];\n    }\n}\nclass SignatureHelpFeature extends TextDocumentFeature {\n    constructor(client) {\n        super(client, vscode_languageserver_protocol_1.SignatureHelpRequest.type);\n    }\n    fillClientCapabilities(capabilites) {\n        let config = ensure(ensure(capabilites, 'textDocument'), 'signatureHelp');\n        config.dynamicRegistration = true;\n        config.signatureInformation = { documentationFormat: [vscode_languageserver_protocol_1.MarkupKind.Markdown, vscode_languageserver_protocol_1.MarkupKind.PlainText] };\n        config.signatureInformation.parameterInformation = { labelOffsetSupport: true };\n        config.contextSupport = true;\n    }\n    initialize(capabilities, documentSelector) {\n        const options = this.getRegistrationOptions(documentSelector, capabilities.signatureHelpProvider);\n        if (!options) {\n            return;\n        }\n        this.register(this.messages, {\n            id: UUID.generateUuid(),\n            registerOptions: options\n        });\n    }\n    registerLanguageProvider(options) {\n        const provider = {\n            provideSignatureHelp: (document, position, token, context) => {\n                const client = this._client;\n                const providerSignatureHelp = (document, position, context, token) => {\n                    return client.sendRequest(vscode_languageserver_protocol_1.SignatureHelpRequest.type, client.code2ProtocolConverter.asSignatureHelpParams(document, position, context), token).then(client.protocol2CodeConverter.asSignatureHelp, (error) => {\n                        client.logFailedRequest(vscode_languageserver_protocol_1.SignatureHelpRequest.type, error);\n                        return Promise.resolve(null);\n                    });\n                };\n                const middleware = client.clientOptions.middleware;\n                return middleware.provideSignatureHelp\n                    ? middleware.provideSignatureHelp(document, position, context, token, providerSignatureHelp)\n                    : providerSignatureHelp(document, position, context, token);\n            }\n        };\n        let disposable;\n        if (options.retriggerCharacters === undefined) {\n            const triggerCharacters = options.triggerCharacters || [];\n            disposable = vscode_1.languages.registerSignatureHelpProvider(options.documentSelector, provider, ...triggerCharacters);\n        }\n        else {\n            const metaData = {\n                triggerCharacters: options.triggerCharacters || [],\n                retriggerCharacters: options.retriggerCharacters || []\n            };\n            disposable = vscode_1.languages.registerSignatureHelpProvider(options.documentSelector, provider, metaData);\n        }\n        return [disposable, provider];\n    }\n}\nclass DefinitionFeature extends TextDocumentFeature {\n    constructor(client) {\n        super(client, vscode_languageserver_protocol_1.DefinitionRequest.type);\n    }\n    fillClientCapabilities(capabilites) {\n        let definitionSupport = ensure(ensure(capabilites, 'textDocument'), 'definition');\n        definitionSupport.dynamicRegistration = true;\n        definitionSupport.linkSupport = true;\n    }\n    initialize(capabilities, documentSelector) {\n        const options = this.getRegistrationOptions(documentSelector, capabilities.definitionProvider);\n        if (!options) {\n            return;\n        }\n        this.register(this.messages, { id: UUID.generateUuid(), registerOptions: options });\n    }\n    registerLanguageProvider(options) {\n        const provider = {\n            provideDefinition: (document, position, token) => {\n                const client = this._client;\n                const provideDefinition = (document, position, token) => {\n                    return client.sendRequest(vscode_languageserver_protocol_1.DefinitionRequest.type, client.code2ProtocolConverter.asTextDocumentPositionParams(document, position), token).then(client.protocol2CodeConverter.asDefinitionResult, (error) => {\n                        client.logFailedRequest(vscode_languageserver_protocol_1.DefinitionRequest.type, error);\n                        return Promise.resolve(null);\n                    });\n                };\n                const middleware = client.clientOptions.middleware;\n                return middleware.provideDefinition\n                    ? middleware.provideDefinition(document, position, token, provideDefinition)\n                    : provideDefinition(document, position, token);\n            }\n        };\n        return [vscode_1.languages.registerDefinitionProvider(options.documentSelector, provider), provider];\n    }\n}\nclass ReferencesFeature extends TextDocumentFeature {\n    constructor(client) {\n        super(client, vscode_languageserver_protocol_1.ReferencesRequest.type);\n    }\n    fillClientCapabilities(capabilites) {\n        ensure(ensure(capabilites, 'textDocument'), 'references').dynamicRegistration = true;\n    }\n    initialize(capabilities, documentSelector) {\n        const options = this.getRegistrationOptions(documentSelector, capabilities.referencesProvider);\n        if (!options) {\n            return;\n        }\n        this.register(this.messages, { id: UUID.generateUuid(), registerOptions: options });\n    }\n    registerLanguageProvider(options) {\n        const provider = {\n            provideReferences: (document, position, options, token) => {\n                const client = this._client;\n                const _providerReferences = (document, position, options, token) => {\n                    return client.sendRequest(vscode_languageserver_protocol_1.ReferencesRequest.type, client.code2ProtocolConverter.asReferenceParams(document, position, options), token).then(client.protocol2CodeConverter.asReferences, (error) => {\n                        client.logFailedRequest(vscode_languageserver_protocol_1.ReferencesRequest.type, error);\n                        return Promise.resolve([]);\n                    });\n                };\n                const middleware = client.clientOptions.middleware;\n                return middleware.provideReferences\n                    ? middleware.provideReferences(document, position, options, token, _providerReferences)\n                    : _providerReferences(document, position, options, token);\n            }\n        };\n        return [vscode_1.languages.registerReferenceProvider(options.documentSelector, provider), provider];\n    }\n}\nclass DocumentHighlightFeature extends TextDocumentFeature {\n    constructor(client) {\n        super(client, vscode_languageserver_protocol_1.DocumentHighlightRequest.type);\n    }\n    fillClientCapabilities(capabilites) {\n        ensure(ensure(capabilites, 'textDocument'), 'documentHighlight').dynamicRegistration = true;\n    }\n    initialize(capabilities, documentSelector) {\n        const options = this.getRegistrationOptions(documentSelector, capabilities.documentHighlightProvider);\n        if (!options) {\n            return;\n        }\n        this.register(this.messages, { id: UUID.generateUuid(), registerOptions: options });\n    }\n    registerLanguageProvider(options) {\n        const provider = {\n            provideDocumentHighlights: (document, position, token) => {\n                const client = this._client;\n                const _provideDocumentHighlights = (document, position, token) => {\n                    return client.sendRequest(vscode_languageserver_protocol_1.DocumentHighlightRequest.type, client.code2ProtocolConverter.asTextDocumentPositionParams(document, position), token).then(client.protocol2CodeConverter.asDocumentHighlights, (error) => {\n                        client.logFailedRequest(vscode_languageserver_protocol_1.DocumentHighlightRequest.type, error);\n                        return Promise.resolve([]);\n                    });\n                };\n                const middleware = client.clientOptions.middleware;\n                return middleware.provideDocumentHighlights\n                    ? middleware.provideDocumentHighlights(document, position, token, _provideDocumentHighlights)\n                    : _provideDocumentHighlights(document, position, token);\n            }\n        };\n        return [vscode_1.languages.registerDocumentHighlightProvider(options.documentSelector, provider), provider];\n    }\n}\nclass DocumentSymbolFeature extends TextDocumentFeature {\n    constructor(client) {\n        super(client, vscode_languageserver_protocol_1.DocumentSymbolRequest.type);\n    }\n    fillClientCapabilities(capabilites) {\n        let symbolCapabilities = ensure(ensure(capabilites, 'textDocument'), 'documentSymbol');\n        symbolCapabilities.dynamicRegistration = true;\n        symbolCapabilities.symbolKind = {\n            valueSet: SupportedSymbolKinds\n        };\n        symbolCapabilities.hierarchicalDocumentSymbolSupport = true;\n    }\n    initialize(capabilities, documentSelector) {\n        const options = this.getRegistrationOptions(documentSelector, capabilities.documentSymbolProvider);\n        if (!options) {\n            return;\n        }\n        this.register(this.messages, { id: UUID.generateUuid(), registerOptions: options });\n    }\n    registerLanguageProvider(options) {\n        const provider = {\n            provideDocumentSymbols: (document, token) => {\n                const client = this._client;\n                const _provideDocumentSymbols = (document, token) => {\n                    return client.sendRequest(vscode_languageserver_protocol_1.DocumentSymbolRequest.type, client.code2ProtocolConverter.asDocumentSymbolParams(document), token).then((data) => {\n                        if (data === null) {\n                            return undefined;\n                        }\n                        if (data.length === 0) {\n                            return [];\n                        }\n                        else {\n                            let element = data[0];\n                            if (vscode_languageserver_protocol_1.DocumentSymbol.is(element)) {\n                                return client.protocol2CodeConverter.asDocumentSymbols(data);\n                            }\n                            else {\n                                return client.protocol2CodeConverter.asSymbolInformations(data);\n                            }\n                        }\n                    }, (error) => {\n                        client.logFailedRequest(vscode_languageserver_protocol_1.DocumentSymbolRequest.type, error);\n                        return Promise.resolve([]);\n                    });\n                };\n                const middleware = client.clientOptions.middleware;\n                return middleware.provideDocumentSymbols\n                    ? middleware.provideDocumentSymbols(document, token, _provideDocumentSymbols)\n                    : _provideDocumentSymbols(document, token);\n            }\n        };\n        return [vscode_1.languages.registerDocumentSymbolProvider(options.documentSelector, provider), provider];\n    }\n}\nclass WorkspaceSymbolFeature extends WorkspaceFeature {\n    constructor(client) {\n        super(client, vscode_languageserver_protocol_1.WorkspaceSymbolRequest.type);\n    }\n    fillClientCapabilities(capabilites) {\n        let symbolCapabilities = ensure(ensure(capabilites, 'workspace'), 'symbol');\n        symbolCapabilities.dynamicRegistration = true;\n        symbolCapabilities.symbolKind = {\n            valueSet: SupportedSymbolKinds\n        };\n    }\n    initialize(capabilities) {\n        if (!capabilities.workspaceSymbolProvider) {\n            return;\n        }\n        this.register(this.messages, {\n            id: UUID.generateUuid(),\n            registerOptions: capabilities.workspaceSymbolProvider === true ? { workDoneProgress: false } : capabilities.workspaceSymbolProvider\n        });\n    }\n    registerLanguageProvider(_options) {\n        const provider = {\n            provideWorkspaceSymbols: (query, token) => {\n                const client = this._client;\n                const provideWorkspaceSymbols = (query, token) => {\n                    return client.sendRequest(vscode_languageserver_protocol_1.WorkspaceSymbolRequest.type, { query }, token).then(client.protocol2CodeConverter.asSymbolInformations, (error) => {\n                        client.logFailedRequest(vscode_languageserver_protocol_1.WorkspaceSymbolRequest.type, error);\n                        return Promise.resolve([]);\n                    });\n                };\n                const middleware = client.clientOptions.middleware;\n                return middleware.provideWorkspaceSymbols\n                    ? middleware.provideWorkspaceSymbols(query, token, provideWorkspaceSymbols)\n                    : provideWorkspaceSymbols(query, token);\n            }\n        };\n        return [vscode_1.languages.registerWorkspaceSymbolProvider(provider), provider];\n    }\n}\nclass CodeActionFeature extends TextDocumentFeature {\n    constructor(client) {\n        super(client, vscode_languageserver_protocol_1.CodeActionRequest.type);\n    }\n    fillClientCapabilities(capabilites) {\n        const cap = ensure(ensure(capabilites, 'textDocument'), 'codeAction');\n        cap.dynamicRegistration = true;\n        cap.isPreferredSupport = true;\n        cap.codeActionLiteralSupport = {\n            codeActionKind: {\n                valueSet: [\n                    vscode_languageserver_protocol_1.CodeActionKind.Empty,\n                    vscode_languageserver_protocol_1.CodeActionKind.QuickFix,\n                    vscode_languageserver_protocol_1.CodeActionKind.Refactor,\n                    vscode_languageserver_protocol_1.CodeActionKind.RefactorExtract,\n                    vscode_languageserver_protocol_1.CodeActionKind.RefactorInline,\n                    vscode_languageserver_protocol_1.CodeActionKind.RefactorRewrite,\n                    vscode_languageserver_protocol_1.CodeActionKind.Source,\n                    vscode_languageserver_protocol_1.CodeActionKind.SourceOrganizeImports\n                ]\n            }\n        };\n    }\n    initialize(capabilities, documentSelector) {\n        const options = this.getRegistrationOptions(documentSelector, capabilities.codeActionProvider);\n        if (!options) {\n            return;\n        }\n        this.register(this.messages, { id: UUID.generateUuid(), registerOptions: options });\n    }\n    registerLanguageProvider(options) {\n        const provider = {\n            provideCodeActions: (document, range, context, token) => {\n                const client = this._client;\n                const _provideCodeActions = (document, range, context, token) => {\n                    const params = {\n                        textDocument: client.code2ProtocolConverter.asTextDocumentIdentifier(document),\n                        range: client.code2ProtocolConverter.asRange(range),\n                        context: client.code2ProtocolConverter.asCodeActionContext(context)\n                    };\n                    return client.sendRequest(vscode_languageserver_protocol_1.CodeActionRequest.type, params, token).then((values) => {\n                        if (values === null) {\n                            return undefined;\n                        }\n                        const result = [];\n                        for (let item of values) {\n                            if (vscode_languageserver_protocol_1.Command.is(item)) {\n                                result.push(client.protocol2CodeConverter.asCommand(item));\n                            }\n                            else {\n                                result.push(client.protocol2CodeConverter.asCodeAction(item));\n                            }\n                        }\n                        return result;\n                    }, (error) => {\n                        client.logFailedRequest(vscode_languageserver_protocol_1.CodeActionRequest.type, error);\n                        return Promise.resolve([]);\n                    });\n                };\n                const middleware = client.clientOptions.middleware;\n                return middleware.provideCodeActions\n                    ? middleware.provideCodeActions(document, range, context, token, _provideCodeActions)\n                    : _provideCodeActions(document, range, context, token);\n            }\n        };\n        return [vscode_1.languages.registerCodeActionsProvider(options.documentSelector, provider, (options.codeActionKinds\n                ? { providedCodeActionKinds: this._client.protocol2CodeConverter.asCodeActionKinds(options.codeActionKinds) }\n                : undefined)), provider];\n    }\n}\nclass CodeLensFeature extends TextDocumentFeature {\n    constructor(client) {\n        super(client, vscode_languageserver_protocol_1.CodeLensRequest.type);\n    }\n    fillClientCapabilities(capabilites) {\n        ensure(ensure(capabilites, 'textDocument'), 'codeLens').dynamicRegistration = true;\n    }\n    initialize(capabilities, documentSelector) {\n        const options = this.getRegistrationOptions(documentSelector, capabilities.codeLensProvider);\n        if (!options) {\n            return;\n        }\n        this.register(this.messages, { id: UUID.generateUuid(), registerOptions: options });\n    }\n    registerLanguageProvider(options) {\n        const provider = {\n            provideCodeLenses: (document, token) => {\n                const client = this._client;\n                const provideCodeLenses = (document, token) => {\n                    return client.sendRequest(vscode_languageserver_protocol_1.CodeLensRequest.type, client.code2ProtocolConverter.asCodeLensParams(document), token).then(client.protocol2CodeConverter.asCodeLenses, (error) => {\n                        client.logFailedRequest(vscode_languageserver_protocol_1.CodeLensRequest.type, error);\n                        return Promise.resolve([]);\n                    });\n                };\n                const middleware = client.clientOptions.middleware;\n                return middleware.provideCodeLenses\n                    ? middleware.provideCodeLenses(document, token, provideCodeLenses)\n                    : provideCodeLenses(document, token);\n            },\n            resolveCodeLens: (options.resolveProvider)\n                ? (codeLens, token) => {\n                    const client = this._client;\n                    const resolveCodeLens = (codeLens, token) => {\n                        return client.sendRequest(vscode_languageserver_protocol_1.CodeLensResolveRequest.type, client.code2ProtocolConverter.asCodeLens(codeLens), token).then(client.protocol2CodeConverter.asCodeLens, (error) => {\n                            client.logFailedRequest(vscode_languageserver_protocol_1.CodeLensResolveRequest.type, error);\n                            return codeLens;\n                        });\n                    };\n                    const middleware = client.clientOptions.middleware;\n                    return middleware.resolveCodeLens\n                        ? middleware.resolveCodeLens(codeLens, token, resolveCodeLens)\n                        : resolveCodeLens(codeLens, token);\n                }\n                : undefined\n        };\n        return [vscode_1.languages.registerCodeLensProvider(options.documentSelector, provider), provider];\n    }\n}\nclass DocumentFormattingFeature extends TextDocumentFeature {\n    constructor(client) {\n        super(client, vscode_languageserver_protocol_1.DocumentFormattingRequest.type);\n    }\n    fillClientCapabilities(capabilites) {\n        ensure(ensure(capabilites, 'textDocument'), 'formatting').dynamicRegistration = true;\n    }\n    initialize(capabilities, documentSelector) {\n        const options = this.getRegistrationOptions(documentSelector, capabilities.documentFormattingProvider);\n        if (!options) {\n            return;\n        }\n        this.register(this.messages, { id: UUID.generateUuid(), registerOptions: options });\n    }\n    registerLanguageProvider(options) {\n        const provider = {\n            provideDocumentFormattingEdits: (document, options, token) => {\n                const client = this._client;\n                const provideDocumentFormattingEdits = (document, options, token) => {\n                    const params = {\n                        textDocument: client.code2ProtocolConverter.asTextDocumentIdentifier(document),\n                        options: client.code2ProtocolConverter.asFormattingOptions(options)\n                    };\n                    return client.sendRequest(vscode_languageserver_protocol_1.DocumentFormattingRequest.type, params, token).then(client.protocol2CodeConverter.asTextEdits, (error) => {\n                        client.logFailedRequest(vscode_languageserver_protocol_1.DocumentFormattingRequest.type, error);\n                        return Promise.resolve([]);\n                    });\n                };\n                const middleware = client.clientOptions.middleware;\n                return middleware.provideDocumentFormattingEdits\n                    ? middleware.provideDocumentFormattingEdits(document, options, token, provideDocumentFormattingEdits)\n                    : provideDocumentFormattingEdits(document, options, token);\n            }\n        };\n        return [vscode_1.languages.registerDocumentFormattingEditProvider(options.documentSelector, provider), provider];\n    }\n}\nclass DocumentRangeFormattingFeature extends TextDocumentFeature {\n    constructor(client) {\n        super(client, vscode_languageserver_protocol_1.DocumentRangeFormattingRequest.type);\n    }\n    fillClientCapabilities(capabilites) {\n        ensure(ensure(capabilites, 'textDocument'), 'rangeFormatting').dynamicRegistration = true;\n    }\n    initialize(capabilities, documentSelector) {\n        const options = this.getRegistrationOptions(documentSelector, capabilities.documentRangeFormattingProvider);\n        if (!options) {\n            return;\n        }\n        this.register(this.messages, { id: UUID.generateUuid(), registerOptions: options });\n    }\n    registerLanguageProvider(options) {\n        const provider = {\n            provideDocumentRangeFormattingEdits: (document, range, options, token) => {\n                const client = this._client;\n                const provideDocumentRangeFormattingEdits = (document, range, options, token) => {\n                    let params = {\n                        textDocument: client.code2ProtocolConverter.asTextDocumentIdentifier(document),\n                        range: client.code2ProtocolConverter.asRange(range),\n                        options: client.code2ProtocolConverter.asFormattingOptions(options)\n                    };\n                    return client.sendRequest(vscode_languageserver_protocol_1.DocumentRangeFormattingRequest.type, params, token).then(client.protocol2CodeConverter.asTextEdits, (error) => {\n                        client.logFailedRequest(vscode_languageserver_protocol_1.DocumentRangeFormattingRequest.type, error);\n                        return Promise.resolve([]);\n                    });\n                };\n                let middleware = client.clientOptions.middleware;\n                return middleware.provideDocumentRangeFormattingEdits\n                    ? middleware.provideDocumentRangeFormattingEdits(document, range, options, token, provideDocumentRangeFormattingEdits)\n                    : provideDocumentRangeFormattingEdits(document, range, options, token);\n            }\n        };\n        return [vscode_1.languages.registerDocumentRangeFormattingEditProvider(options.documentSelector, provider), provider];\n    }\n}\nclass DocumentOnTypeFormattingFeature extends TextDocumentFeature {\n    constructor(client) {\n        super(client, vscode_languageserver_protocol_1.DocumentOnTypeFormattingRequest.type);\n    }\n    fillClientCapabilities(capabilites) {\n        ensure(ensure(capabilites, 'textDocument'), 'onTypeFormatting').dynamicRegistration = true;\n    }\n    initialize(capabilities, documentSelector) {\n        const options = this.getRegistrationOptions(documentSelector, capabilities.documentOnTypeFormattingProvider);\n        if (!options) {\n            return;\n        }\n        this.register(this.messages, { id: UUID.generateUuid(), registerOptions: options });\n    }\n    registerLanguageProvider(options) {\n        const provider = {\n            provideOnTypeFormattingEdits: (document, position, ch, options, token) => {\n                const client = this._client;\n                const provideOnTypeFormattingEdits = (document, position, ch, options, token) => {\n                    let params = {\n                        textDocument: client.code2ProtocolConverter.asTextDocumentIdentifier(document),\n                        position: client.code2ProtocolConverter.asPosition(position),\n                        ch: ch,\n                        options: client.code2ProtocolConverter.asFormattingOptions(options)\n                    };\n                    return client.sendRequest(vscode_languageserver_protocol_1.DocumentOnTypeFormattingRequest.type, params, token).then(client.protocol2CodeConverter.asTextEdits, (error) => {\n                        client.logFailedRequest(vscode_languageserver_protocol_1.DocumentOnTypeFormattingRequest.type, error);\n                        return Promise.resolve([]);\n                    });\n                };\n                const middleware = client.clientOptions.middleware;\n                return middleware.provideOnTypeFormattingEdits\n                    ? middleware.provideOnTypeFormattingEdits(document, position, ch, options, token, provideOnTypeFormattingEdits)\n                    : provideOnTypeFormattingEdits(document, position, ch, options, token);\n            }\n        };\n        const moreTriggerCharacter = options.moreTriggerCharacter || [];\n        return [vscode_1.languages.registerOnTypeFormattingEditProvider(options.documentSelector, provider, options.firstTriggerCharacter, ...moreTriggerCharacter), provider];\n    }\n}\nclass RenameFeature extends TextDocumentFeature {\n    constructor(client) {\n        super(client, vscode_languageserver_protocol_1.RenameRequest.type);\n    }\n    fillClientCapabilities(capabilites) {\n        let rename = ensure(ensure(capabilites, 'textDocument'), 'rename');\n        rename.dynamicRegistration = true;\n        rename.prepareSupport = true;\n    }\n    initialize(capabilities, documentSelector) {\n        const options = this.getRegistrationOptions(documentSelector, capabilities.renameProvider);\n        if (!options) {\n            return;\n        }\n        if (Is.boolean(capabilities.renameProvider)) {\n            options.prepareProvider = false;\n        }\n        this.register(this.messages, { id: UUID.generateUuid(), registerOptions: options });\n    }\n    registerLanguageProvider(options) {\n        const provider = {\n            provideRenameEdits: (document, position, newName, token) => {\n                const client = this._client;\n                const provideRenameEdits = (document, position, newName, token) => {\n                    let params = {\n                        textDocument: client.code2ProtocolConverter.asTextDocumentIdentifier(document),\n                        position: client.code2ProtocolConverter.asPosition(position),\n                        newName: newName\n                    };\n                    return client.sendRequest(vscode_languageserver_protocol_1.RenameRequest.type, params, token).then(client.protocol2CodeConverter.asWorkspaceEdit, (error) => {\n                        client.logFailedRequest(vscode_languageserver_protocol_1.RenameRequest.type, error);\n                        return Promise.reject(new Error(error.message));\n                    });\n                };\n                const middleware = client.clientOptions.middleware;\n                return middleware.provideRenameEdits\n                    ? middleware.provideRenameEdits(document, position, newName, token, provideRenameEdits)\n                    : provideRenameEdits(document, position, newName, token);\n            },\n            prepareRename: options.prepareProvider\n                ? (document, position, token) => {\n                    const client = this._client;\n                    const prepareRename = (document, position, token) => {\n                        let params = {\n                            textDocument: client.code2ProtocolConverter.asTextDocumentIdentifier(document),\n                            position: client.code2ProtocolConverter.asPosition(position),\n                        };\n                        return client.sendRequest(vscode_languageserver_protocol_1.PrepareRenameRequest.type, params, token).then((result) => {\n                            if (vscode_languageserver_protocol_1.Range.is(result)) {\n                                return client.protocol2CodeConverter.asRange(result);\n                            }\n                            else if (result && vscode_languageserver_protocol_1.Range.is(result.range)) {\n                                return {\n                                    range: client.protocol2CodeConverter.asRange(result.range),\n                                    placeholder: result.placeholder\n                                };\n                            }\n                            // To cancel the rename vscode API expects a rejected promise.\n                            return Promise.reject(new Error(`The element can't be renamed.`));\n                        }, (error) => {\n                            client.logFailedRequest(vscode_languageserver_protocol_1.PrepareRenameRequest.type, error);\n                            return Promise.reject(new Error(error.message));\n                        });\n                    };\n                    const middleware = client.clientOptions.middleware;\n                    return middleware.prepareRename\n                        ? middleware.prepareRename(document, position, token, prepareRename)\n                        : prepareRename(document, position, token);\n                }\n                : undefined\n        };\n        return [vscode_1.languages.registerRenameProvider(options.documentSelector, provider), provider];\n    }\n}\nclass DocumentLinkFeature extends TextDocumentFeature {\n    constructor(client) {\n        super(client, vscode_languageserver_protocol_1.DocumentLinkRequest.type);\n    }\n    fillClientCapabilities(capabilites) {\n        const documentLinkCapabilities = ensure(ensure(capabilites, 'textDocument'), 'documentLink');\n        documentLinkCapabilities.dynamicRegistration = true;\n        documentLinkCapabilities.tooltipSupport = true;\n    }\n    initialize(capabilities, documentSelector) {\n        const options = this.getRegistrationOptions(documentSelector, capabilities.documentLinkProvider);\n        if (!options) {\n            return;\n        }\n        this.register(this.messages, { id: UUID.generateUuid(), registerOptions: options });\n    }\n    registerLanguageProvider(options) {\n        const provider = {\n            provideDocumentLinks: (document, token) => {\n                const client = this._client;\n                const provideDocumentLinks = (document, token) => {\n                    return client.sendRequest(vscode_languageserver_protocol_1.DocumentLinkRequest.type, client.code2ProtocolConverter.asDocumentLinkParams(document), token).then(client.protocol2CodeConverter.asDocumentLinks, (error) => {\n                        client.logFailedRequest(vscode_languageserver_protocol_1.DocumentLinkRequest.type, error);\n                        return Promise.resolve([]);\n                    });\n                };\n                const middleware = client.clientOptions.middleware;\n                return middleware.provideDocumentLinks\n                    ? middleware.provideDocumentLinks(document, token, provideDocumentLinks)\n                    : provideDocumentLinks(document, token);\n            },\n            resolveDocumentLink: options.resolveProvider\n                ? (link, token) => {\n                    const client = this._client;\n                    let resolveDocumentLink = (link, token) => {\n                        return client.sendRequest(vscode_languageserver_protocol_1.DocumentLinkResolveRequest.type, client.code2ProtocolConverter.asDocumentLink(link), token).then(client.protocol2CodeConverter.asDocumentLink, (error) => {\n                            client.logFailedRequest(vscode_languageserver_protocol_1.DocumentLinkResolveRequest.type, error);\n                            return Promise.resolve(link);\n                        });\n                    };\n                    const middleware = client.clientOptions.middleware;\n                    return middleware.resolveDocumentLink\n                        ? middleware.resolveDocumentLink(link, token, resolveDocumentLink)\n                        : resolveDocumentLink(link, token);\n                }\n                : undefined\n        };\n        return [vscode_1.languages.registerDocumentLinkProvider(options.documentSelector, provider), provider];\n    }\n}\nclass ConfigurationFeature {\n    constructor(_client) {\n        this._client = _client;\n        this._listeners = new Map();\n    }\n    get messages() {\n        return vscode_languageserver_protocol_1.DidChangeConfigurationNotification.type;\n    }\n    fillClientCapabilities(capabilities) {\n        ensure(ensure(capabilities, 'workspace'), 'didChangeConfiguration').dynamicRegistration = true;\n    }\n    initialize() {\n        let section = this._client.clientOptions.synchronize.configurationSection;\n        if (section !== void 0) {\n            this.register(this.messages, {\n                id: UUID.generateUuid(),\n                registerOptions: {\n                    section: section\n                }\n            });\n        }\n    }\n    register(_message, data) {\n        let disposable = vscode_1.workspace.onDidChangeConfiguration((event) => {\n            this.onDidChangeConfiguration(data.registerOptions.section, event);\n        });\n        this._listeners.set(data.id, disposable);\n        if (data.registerOptions.section !== void 0) {\n            this.onDidChangeConfiguration(data.registerOptions.section, undefined);\n        }\n    }\n    unregister(id) {\n        let disposable = this._listeners.get(id);\n        if (disposable) {\n            this._listeners.delete(id);\n            disposable.dispose();\n        }\n    }\n    dispose() {\n        for (let disposable of this._listeners.values()) {\n            disposable.dispose();\n        }\n        this._listeners.clear();\n    }\n    onDidChangeConfiguration(configurationSection, event) {\n        let sections;\n        if (Is.string(configurationSection)) {\n            sections = [configurationSection];\n        }\n        else {\n            sections = configurationSection;\n        }\n        if (sections !== void 0 && event !== void 0) {\n            let affected = sections.some((section) => event.affectsConfiguration(section));\n            if (!affected) {\n                return;\n            }\n        }\n        let didChangeConfiguration = (sections) => {\n            if (sections === void 0) {\n                this._client.sendNotification(vscode_languageserver_protocol_1.DidChangeConfigurationNotification.type, { settings: null });\n                return;\n            }\n            this._client.sendNotification(vscode_languageserver_protocol_1.DidChangeConfigurationNotification.type, { settings: this.extractSettingsInformation(sections) });\n        };\n        let middleware = this.getMiddleware();\n        middleware\n            ? middleware(sections, didChangeConfiguration)\n            : didChangeConfiguration(sections);\n    }\n    extractSettingsInformation(keys) {\n        function ensurePath(config, path) {\n            let current = config;\n            for (let i = 0; i < path.length - 1; i++) {\n                let obj = current[path[i]];\n                if (!obj) {\n                    obj = Object.create(null);\n                    current[path[i]] = obj;\n                }\n                current = obj;\n            }\n            return current;\n        }\n        let resource = this._client.clientOptions.workspaceFolder\n            ? this._client.clientOptions.workspaceFolder.uri\n            : undefined;\n        let result = Object.create(null);\n        for (let i = 0; i < keys.length; i++) {\n            let key = keys[i];\n            let index = key.indexOf('.');\n            let config = null;\n            if (index >= 0) {\n                config = vscode_1.workspace.getConfiguration(key.substr(0, index), resource).get(key.substr(index + 1));\n            }\n            else {\n                config = vscode_1.workspace.getConfiguration(key, resource);\n            }\n            if (config) {\n                let path = keys[i].split('.');\n                ensurePath(result, path)[path[path.length - 1]] = config;\n            }\n        }\n        return result;\n    }\n    getMiddleware() {\n        let middleware = this._client.clientOptions.middleware;\n        if (middleware.workspace && middleware.workspace.didChangeConfiguration) {\n            return middleware.workspace.didChangeConfiguration;\n        }\n        else {\n            return undefined;\n        }\n    }\n}\nclass ExecuteCommandFeature {\n    constructor(_client) {\n        this._client = _client;\n        this._commands = new Map();\n    }\n    get messages() {\n        return vscode_languageserver_protocol_1.ExecuteCommandRequest.type;\n    }\n    fillClientCapabilities(capabilities) {\n        ensure(ensure(capabilities, 'workspace'), 'executeCommand').dynamicRegistration = true;\n    }\n    initialize(capabilities) {\n        if (!capabilities.executeCommandProvider) {\n            return;\n        }\n        this.register(this.messages, {\n            id: UUID.generateUuid(),\n            registerOptions: Object.assign({}, capabilities.executeCommandProvider)\n        });\n    }\n    register(_message, data) {\n        const client = this._client;\n        const middleware = client.clientOptions.middleware;\n        const executeCommand = (command, args) => {\n            let params = {\n                command,\n                arguments: args\n            };\n            return client.sendRequest(vscode_languageserver_protocol_1.ExecuteCommandRequest.type, params).then(undefined, (error) => {\n                client.logFailedRequest(vscode_languageserver_protocol_1.ExecuteCommandRequest.type, error);\n            });\n        };\n        if (data.registerOptions.commands) {\n            const disposeables = [];\n            for (const command of data.registerOptions.commands) {\n                disposeables.push(vscode_1.commands.registerCommand(command, (...args) => {\n                    return middleware.executeCommand\n                        ? middleware.executeCommand(command, args, executeCommand)\n                        : executeCommand(command, args);\n                }));\n            }\n            this._commands.set(data.id, disposeables);\n        }\n    }\n    unregister(id) {\n        let disposeables = this._commands.get(id);\n        if (disposeables) {\n            disposeables.forEach(disposable => disposable.dispose());\n        }\n    }\n    dispose() {\n        this._commands.forEach((value) => {\n            value.forEach(disposable => disposable.dispose());\n        });\n        this._commands.clear();\n    }\n}\nvar MessageTransports;\n(function (MessageTransports) {\n    function is(value) {\n        let candidate = value;\n        return candidate && vscode_languageserver_protocol_1.MessageReader.is(value.reader) && vscode_languageserver_protocol_1.MessageWriter.is(value.writer);\n    }\n    MessageTransports.is = is;\n})(MessageTransports = exports.MessageTransports || (exports.MessageTransports = {}));\nclass OnReady {\n    constructor(_resolve, _reject) {\n        this._resolve = _resolve;\n        this._reject = _reject;\n        this._used = false;\n    }\n    get isUsed() {\n        return this._used;\n    }\n    resolve() {\n        this._used = true;\n        this._resolve();\n    }\n    reject(error) {\n        this._used = true;\n        this._reject(error);\n    }\n}\nclass BaseLanguageClient {\n    constructor(id, name, clientOptions) {\n        this._traceFormat = vscode_languageserver_protocol_1.TraceFormat.Text;\n        this._features = [];\n        this._method2Message = new Map();\n        this._dynamicFeatures = new Map();\n        this._id = id;\n        this._name = name;\n        clientOptions = clientOptions || {};\n        this._clientOptions = {\n            documentSelector: clientOptions.documentSelector || [],\n            synchronize: clientOptions.synchronize || {},\n            diagnosticCollectionName: clientOptions.diagnosticCollectionName,\n            outputChannelName: clientOptions.outputChannelName || this._name,\n            revealOutputChannelOn: clientOptions.revealOutputChannelOn || RevealOutputChannelOn.Error,\n            stdioEncoding: clientOptions.stdioEncoding || 'utf8',\n            initializationOptions: clientOptions.initializationOptions,\n            initializationFailedHandler: clientOptions.initializationFailedHandler,\n            progressOnInitialization: !!clientOptions.progressOnInitialization,\n            errorHandler: clientOptions.errorHandler || new DefaultErrorHandler(this._name),\n            middleware: clientOptions.middleware || {},\n            uriConverters: clientOptions.uriConverters,\n            workspaceFolder: clientOptions.workspaceFolder\n        };\n        this._clientOptions.synchronize = this._clientOptions.synchronize || {};\n        this.state = ClientState.Initial;\n        this._connectionPromise = undefined;\n        this._resolvedConnection = undefined;\n        this._initializeResult = undefined;\n        if (clientOptions.outputChannel) {\n            this._outputChannel = clientOptions.outputChannel;\n            this._disposeOutputChannel = false;\n        }\n        else {\n            this._outputChannel = undefined;\n            this._disposeOutputChannel = true;\n        }\n        this._traceOutputChannel = clientOptions.traceOutputChannel;\n        this._listeners = undefined;\n        this._providers = undefined;\n        this._diagnostics = undefined;\n        this._fileEvents = [];\n        this._fileEventDelayer = new async_1.Delayer(250);\n        this._onReady = new Promise((resolve, reject) => {\n            this._onReadyCallbacks = new OnReady(resolve, reject);\n        });\n        this._onStop = undefined;\n        this._telemetryEmitter = new vscode_languageserver_protocol_1.Emitter();\n        this._stateChangeEmitter = new vscode_languageserver_protocol_1.Emitter();\n        this._tracer = {\n            log: (messageOrDataObject, data) => {\n                if (Is.string(messageOrDataObject)) {\n                    this.logTrace(messageOrDataObject, data);\n                }\n                else {\n                    this.logObjectTrace(messageOrDataObject);\n                }\n            },\n        };\n        this._c2p = c2p.createConverter(clientOptions.uriConverters ? clientOptions.uriConverters.code2Protocol : undefined);\n        this._p2c = p2c.createConverter(clientOptions.uriConverters ? clientOptions.uriConverters.protocol2Code : undefined);\n        this._syncedDocuments = new Map();\n        this.registerBuiltinFeatures();\n    }\n    get state() {\n        return this._state;\n    }\n    set state(value) {\n        let oldState = this.getPublicState();\n        this._state = value;\n        let newState = this.getPublicState();\n        if (newState !== oldState) {\n            this._stateChangeEmitter.fire({ oldState, newState });\n        }\n    }\n    getPublicState() {\n        if (this.state === ClientState.Running) {\n            return State.Running;\n        }\n        else if (this.state === ClientState.Starting) {\n            return State.Starting;\n        }\n        else {\n            return State.Stopped;\n        }\n    }\n    get initializeResult() {\n        return this._initializeResult;\n    }\n    sendRequest(type, ...params) {\n        if (!this.isConnectionActive()) {\n            throw new Error('Language client is not ready yet');\n        }\n        this.forceDocumentSync();\n        try {\n            return this._resolvedConnection.sendRequest(type, ...params);\n        }\n        catch (error) {\n            this.error(`Sending request ${Is.string(type) ? type : type.method} failed.`, error);\n            throw error;\n        }\n    }\n    onRequest(type, handler) {\n        if (!this.isConnectionActive()) {\n            throw new Error('Language client is not ready yet');\n        }\n        try {\n            this._resolvedConnection.onRequest(type, handler);\n        }\n        catch (error) {\n            this.error(`Registering request handler ${Is.string(type) ? type : type.method} failed.`, error);\n            throw error;\n        }\n    }\n    sendNotification(type, params) {\n        if (!this.isConnectionActive()) {\n            throw new Error('Language client is not ready yet');\n        }\n        this.forceDocumentSync();\n        try {\n            this._resolvedConnection.sendNotification(type, params);\n        }\n        catch (error) {\n            this.error(`Sending notification ${Is.string(type) ? type : type.method} failed.`, error);\n            throw error;\n        }\n    }\n    onNotification(type, handler) {\n        if (!this.isConnectionActive()) {\n            throw new Error('Language client is not ready yet');\n        }\n        try {\n            this._resolvedConnection.onNotification(type, handler);\n        }\n        catch (error) {\n            this.error(`Registering notification handler ${Is.string(type) ? type : type.method} failed.`, error);\n            throw error;\n        }\n    }\n    onProgress(type, token, handler) {\n        if (!this.isConnectionActive()) {\n            throw new Error('Language client is not ready yet');\n        }\n        try {\n            return this._resolvedConnection.onProgress(type, token, handler);\n        }\n        catch (error) {\n            this.error(`Registering progress handler for token ${token} failed.`, error);\n            throw error;\n        }\n    }\n    sendProgress(type, token, value) {\n        if (!this.isConnectionActive()) {\n            throw new Error('Language client is not ready yet');\n        }\n        this.forceDocumentSync();\n        try {\n            this._resolvedConnection.sendProgress(type, token, value);\n        }\n        catch (error) {\n            this.error(`Sending progress for token ${token} failed.`, error);\n            throw error;\n        }\n    }\n    get clientOptions() {\n        return this._clientOptions;\n    }\n    get protocol2CodeConverter() {\n        return this._p2c;\n    }\n    get code2ProtocolConverter() {\n        return this._c2p;\n    }\n    get onTelemetry() {\n        return this._telemetryEmitter.event;\n    }\n    get onDidChangeState() {\n        return this._stateChangeEmitter.event;\n    }\n    get outputChannel() {\n        if (!this._outputChannel) {\n            this._outputChannel = vscode_1.window.createOutputChannel(this._clientOptions.outputChannelName ? this._clientOptions.outputChannelName : this._name);\n        }\n        return this._outputChannel;\n    }\n    get traceOutputChannel() {\n        if (this._traceOutputChannel) {\n            return this._traceOutputChannel;\n        }\n        return this.outputChannel;\n    }\n    get diagnostics() {\n        return this._diagnostics;\n    }\n    createDefaultErrorHandler() {\n        return new DefaultErrorHandler(this._name);\n    }\n    set trace(value) {\n        this._trace = value;\n        this.onReady().then(() => {\n            this.resolveConnection().then((connection) => {\n                connection.trace(this._trace, this._tracer, {\n                    sendNotification: false,\n                    traceFormat: this._traceFormat\n                });\n            });\n        }, () => {\n        });\n    }\n    data2String(data) {\n        if (data instanceof vscode_languageserver_protocol_1.ResponseError) {\n            const responseError = data;\n            return `  Message: ${responseError.message}\\n  Code: ${responseError.code} ${responseError.data ? '\\n' + responseError.data.toString() : ''}`;\n        }\n        if (data instanceof Error) {\n            if (Is.string(data.stack)) {\n                return data.stack;\n            }\n            return data.message;\n        }\n        if (Is.string(data)) {\n            return data;\n        }\n        return data.toString();\n    }\n    info(message, data, showNotification = true) {\n        this.outputChannel.appendLine(`[Info  - ${(new Date().toLocaleTimeString())}] ${message}`);\n        if (data) {\n            this.outputChannel.appendLine(this.data2String(data));\n        }\n        if (showNotification && this._clientOptions.revealOutputChannelOn <= RevealOutputChannelOn.Info) {\n            this.showNotificationMessage();\n        }\n    }\n    warn(message, data, showNotification = true) {\n        this.outputChannel.appendLine(`[Warn  - ${(new Date().toLocaleTimeString())}] ${message}`);\n        if (data) {\n            this.outputChannel.appendLine(this.data2String(data));\n        }\n        if (showNotification && this._clientOptions.revealOutputChannelOn <= RevealOutputChannelOn.Warn) {\n            this.showNotificationMessage();\n        }\n    }\n    error(message, data, showNotification = true) {\n        this.outputChannel.appendLine(`[Error - ${(new Date().toLocaleTimeString())}] ${message}`);\n        if (data) {\n            this.outputChannel.appendLine(this.data2String(data));\n        }\n        if (showNotification && this._clientOptions.revealOutputChannelOn <= RevealOutputChannelOn.Error) {\n            this.showNotificationMessage();\n        }\n    }\n    showNotificationMessage() {\n        vscode_1.window.showInformationMessage('A request has failed. See the output for more information.', 'Go to output').then(() => {\n            this.outputChannel.show(true);\n        });\n    }\n    logTrace(message, data) {\n        this.traceOutputChannel.appendLine(`[Trace - ${(new Date().toLocaleTimeString())}] ${message}`);\n        if (data) {\n            this.traceOutputChannel.appendLine(this.data2String(data));\n        }\n    }\n    logObjectTrace(data) {\n        if (data.isLSPMessage && data.type) {\n            this.traceOutputChannel.append(`[LSP   - ${(new Date().toLocaleTimeString())}] `);\n        }\n        else {\n            this.traceOutputChannel.append(`[Trace - ${(new Date().toLocaleTimeString())}] `);\n        }\n        if (data) {\n            this.traceOutputChannel.appendLine(`${JSON.stringify(data)}`);\n        }\n    }\n    needsStart() {\n        return this.state === ClientState.Initial || this.state === ClientState.Stopping || this.state === ClientState.Stopped;\n    }\n    needsStop() {\n        return this.state === ClientState.Starting || this.state === ClientState.Running;\n    }\n    onReady() {\n        return this._onReady;\n    }\n    isConnectionActive() {\n        return this.state === ClientState.Running && !!this._resolvedConnection;\n    }\n    start() {\n        if (this._onReadyCallbacks.isUsed) {\n            this._onReady = new Promise((resolve, reject) => {\n                this._onReadyCallbacks = new OnReady(resolve, reject);\n            });\n        }\n        this._listeners = [];\n        this._providers = [];\n        // If we restart then the diagnostics collection is reused.\n        if (!this._diagnostics) {\n            this._diagnostics = this._clientOptions.diagnosticCollectionName\n                ? vscode_1.languages.createDiagnosticCollection(this._clientOptions.diagnosticCollectionName)\n                : vscode_1.languages.createDiagnosticCollection();\n        }\n        this.state = ClientState.Starting;\n        this.resolveConnection().then((connection) => {\n            connection.onLogMessage((message) => {\n                switch (message.type) {\n                    case vscode_languageserver_protocol_1.MessageType.Error:\n                        this.error(message.message, undefined, false);\n                        break;\n                    case vscode_languageserver_protocol_1.MessageType.Warning:\n                        this.warn(message.message, undefined, false);\n                        break;\n                    case vscode_languageserver_protocol_1.MessageType.Info:\n                        this.info(message.message, undefined, false);\n                        break;\n                    default:\n                        this.outputChannel.appendLine(message.message);\n                }\n            });\n            connection.onShowMessage((message) => {\n                switch (message.type) {\n                    case vscode_languageserver_protocol_1.MessageType.Error:\n                        vscode_1.window.showErrorMessage(message.message);\n                        break;\n                    case vscode_languageserver_protocol_1.MessageType.Warning:\n                        vscode_1.window.showWarningMessage(message.message);\n                        break;\n                    case vscode_languageserver_protocol_1.MessageType.Info:\n                        vscode_1.window.showInformationMessage(message.message);\n                        break;\n                    default:\n                        vscode_1.window.showInformationMessage(message.message);\n                }\n            });\n            connection.onRequest(vscode_languageserver_protocol_1.ShowMessageRequest.type, (params) => {\n                let messageFunc;\n                switch (params.type) {\n                    case vscode_languageserver_protocol_1.MessageType.Error:\n                        messageFunc = vscode_1.window.showErrorMessage;\n                        break;\n                    case vscode_languageserver_protocol_1.MessageType.Warning:\n                        messageFunc = vscode_1.window.showWarningMessage;\n                        break;\n                    case vscode_languageserver_protocol_1.MessageType.Info:\n                        messageFunc = vscode_1.window.showInformationMessage;\n                        break;\n                    default:\n                        messageFunc = vscode_1.window.showInformationMessage;\n                }\n                let actions = params.actions || [];\n                return messageFunc(params.message, ...actions);\n            });\n            connection.onTelemetry((data) => {\n                this._telemetryEmitter.fire(data);\n            });\n            connection.listen();\n            // Error is handled in the initialize call.\n            return this.initialize(connection);\n        }).then(undefined, (error) => {\n            this.state = ClientState.StartFailed;\n            this._onReadyCallbacks.reject(error);\n            this.error('Starting client failed', error);\n            vscode_1.window.showErrorMessage(`Couldn't start client ${this._name}`);\n        });\n        return new vscode_1.Disposable(() => {\n            if (this.needsStop()) {\n                this.stop();\n            }\n        });\n    }\n    resolveConnection() {\n        if (!this._connectionPromise) {\n            this._connectionPromise = this.createConnection();\n        }\n        return this._connectionPromise;\n    }\n    initialize(connection) {\n        this.refreshTrace(connection, false);\n        let initOption = this._clientOptions.initializationOptions;\n        let rootPath = this._clientOptions.workspaceFolder\n            ? this._clientOptions.workspaceFolder.uri.fsPath\n            : this._clientGetRootPath();\n        let initParams = {\n            processId: process.pid,\n            clientInfo: {\n                name: 'vscode',\n                version: vscode_1.version\n            },\n            rootPath: rootPath ? rootPath : null,\n            rootUri: rootPath ? this._c2p.asUri(vscode_1.Uri.file(rootPath)) : null,\n            capabilities: this.computeClientCapabilities(),\n            initializationOptions: Is.func(initOption) ? initOption() : initOption,\n            trace: vscode_languageserver_protocol_1.Trace.toString(this._trace),\n            workspaceFolders: null\n        };\n        this.fillInitializeParams(initParams);\n        if (this._clientOptions.progressOnInitialization) {\n            const token = UUID.generateUuid();\n            const part = new progressPart_1.ProgressPart(connection, token);\n            initParams.workDoneToken = token;\n            return this.doInitialize(connection, initParams).then((result) => {\n                part.done();\n                return result;\n            }, (error) => {\n                part.cancel();\n                throw error;\n            });\n        }\n        else {\n            return this.doInitialize(connection, initParams);\n        }\n    }\n    doInitialize(connection, initParams) {\n        return connection.initialize(initParams).then((result) => {\n            this._resolvedConnection = connection;\n            this._initializeResult = result;\n            this.state = ClientState.Running;\n            let textDocumentSyncOptions = undefined;\n            if (Is.number(result.capabilities.textDocumentSync)) {\n                if (result.capabilities.textDocumentSync === vscode_languageserver_protocol_1.TextDocumentSyncKind.None) {\n                    textDocumentSyncOptions = {\n                        openClose: false,\n                        change: vscode_languageserver_protocol_1.TextDocumentSyncKind.None,\n                        save: undefined\n                    };\n                }\n                else {\n                    textDocumentSyncOptions = {\n                        openClose: true,\n                        change: result.capabilities.textDocumentSync,\n                        save: {\n                            includeText: false\n                        }\n                    };\n                }\n            }\n            else if (result.capabilities.textDocumentSync !== void 0 && result.capabilities.textDocumentSync !== null) {\n                textDocumentSyncOptions = result.capabilities.textDocumentSync;\n            }\n            this._capabilities = Object.assign({}, result.capabilities, { resolvedTextDocumentSync: textDocumentSyncOptions });\n            connection.onDiagnostics(params => this.handleDiagnostics(params));\n            connection.onRequest(vscode_languageserver_protocol_1.RegistrationRequest.type, params => this.handleRegistrationRequest(params));\n            // See https://github.com/Microsoft/vscode-languageserver-node/issues/199\n            connection.onRequest('client/registerFeature', params => this.handleRegistrationRequest(params));\n            connection.onRequest(vscode_languageserver_protocol_1.UnregistrationRequest.type, params => this.handleUnregistrationRequest(params));\n            // See https://github.com/Microsoft/vscode-languageserver-node/issues/199\n            connection.onRequest('client/unregisterFeature', params => this.handleUnregistrationRequest(params));\n            connection.onRequest(vscode_languageserver_protocol_1.ApplyWorkspaceEditRequest.type, params => this.handleApplyWorkspaceEdit(params));\n            connection.sendNotification(vscode_languageserver_protocol_1.InitializedNotification.type, {});\n            this.hookFileEvents(connection);\n            this.hookConfigurationChanged(connection);\n            this.initializeFeatures(connection);\n            this._onReadyCallbacks.resolve();\n            return result;\n        }).then(undefined, (error) => {\n            if (this._clientOptions.initializationFailedHandler) {\n                if (this._clientOptions.initializationFailedHandler(error)) {\n                    this.initialize(connection);\n                }\n                else {\n                    this.stop();\n                    this._onReadyCallbacks.reject(error);\n                }\n            }\n            else if (error instanceof vscode_languageserver_protocol_1.ResponseError && error.data && error.data.retry) {\n                vscode_1.window.showErrorMessage(error.message, { title: 'Retry', id: 'retry' }).then(item => {\n                    if (item && item.id === 'retry') {\n                        this.initialize(connection);\n                    }\n                    else {\n                        this.stop();\n                        this._onReadyCallbacks.reject(error);\n                    }\n                });\n            }\n            else {\n                if (error && error.message) {\n                    vscode_1.window.showErrorMessage(error.message);\n                }\n                this.error('Server initialization failed.', error);\n                this.stop();\n                this._onReadyCallbacks.reject(error);\n            }\n            throw error;\n        });\n    }\n    _clientGetRootPath() {\n        let folders = vscode_1.workspace.workspaceFolders;\n        if (!folders || folders.length === 0) {\n            return undefined;\n        }\n        let folder = folders[0];\n        if (folder.uri.scheme === 'file') {\n            return folder.uri.fsPath;\n        }\n        return undefined;\n    }\n    stop() {\n        this._initializeResult = undefined;\n        if (!this._connectionPromise) {\n            this.state = ClientState.Stopped;\n            return Promise.resolve();\n        }\n        if (this.state === ClientState.Stopping && this._onStop) {\n            return this._onStop;\n        }\n        this.state = ClientState.Stopping;\n        this.cleanUp(false);\n        // unhook listeners\n        return this._onStop = this.resolveConnection().then(connection => {\n            return connection.shutdown().then(() => {\n                connection.exit();\n                connection.dispose();\n                this.state = ClientState.Stopped;\n                this.cleanUpChannel();\n                this._onStop = undefined;\n                this._connectionPromise = undefined;\n                this._resolvedConnection = undefined;\n            });\n        });\n    }\n    cleanUp(channel = true, diagnostics = true) {\n        if (this._listeners) {\n            this._listeners.forEach(listener => listener.dispose());\n            this._listeners = undefined;\n        }\n        if (this._providers) {\n            this._providers.forEach(provider => provider.dispose());\n            this._providers = undefined;\n        }\n        if (this._syncedDocuments) {\n            this._syncedDocuments.clear();\n        }\n        for (let handler of this._dynamicFeatures.values()) {\n            handler.dispose();\n        }\n        if (channel) {\n            this.cleanUpChannel();\n        }\n        if (diagnostics && this._diagnostics) {\n            this._diagnostics.dispose();\n            this._diagnostics = undefined;\n        }\n    }\n    cleanUpChannel() {\n        if (this._outputChannel && this._disposeOutputChannel) {\n            this._outputChannel.dispose();\n            this._outputChannel = undefined;\n        }\n    }\n    notifyFileEvent(event) {\n        var _a, _b;\n        const client = this;\n        function didChangeWatchedFile(event) {\n            client._fileEvents.push(event);\n            client._fileEventDelayer.trigger(() => {\n                client.onReady().then(() => {\n                    client.resolveConnection().then(connection => {\n                        if (client.isConnectionActive()) {\n                            client.forceDocumentSync();\n                            connection.didChangeWatchedFiles({ changes: client._fileEvents });\n                        }\n                        client._fileEvents = [];\n                    });\n                }, (error) => {\n                    client.error(`Notify file events failed.`, error);\n                });\n            });\n        }\n        const workSpaceMiddleware = (_a = this.clientOptions.middleware) === null || _a === void 0 ? void 0 : _a.workspace;\n        ((_b = workSpaceMiddleware) === null || _b === void 0 ? void 0 : _b.didChangeWatchedFile) ? workSpaceMiddleware.didChangeWatchedFile(event, didChangeWatchedFile) : didChangeWatchedFile(event);\n    }\n    forceDocumentSync() {\n        this._dynamicFeatures.get(vscode_languageserver_protocol_1.DidChangeTextDocumentNotification.type.method).forceDelivery();\n    }\n    handleDiagnostics(params) {\n        if (!this._diagnostics) {\n            return;\n        }\n        let uri = this._p2c.asUri(params.uri);\n        let diagnostics = this._p2c.asDiagnostics(params.diagnostics);\n        let middleware = this.clientOptions.middleware;\n        if (middleware.handleDiagnostics) {\n            middleware.handleDiagnostics(uri, diagnostics, (uri, diagnostics) => this.setDiagnostics(uri, diagnostics));\n        }\n        else {\n            this.setDiagnostics(uri, diagnostics);\n        }\n    }\n    setDiagnostics(uri, diagnostics) {\n        if (!this._diagnostics) {\n            return;\n        }\n        this._diagnostics.set(uri, diagnostics);\n    }\n    createConnection() {\n        let errorHandler = (error, message, count) => {\n            this.handleConnectionError(error, message, count);\n        };\n        let closeHandler = () => {\n            this.handleConnectionClosed();\n        };\n        return this.createMessageTransports(this._clientOptions.stdioEncoding || 'utf8').then((transports) => {\n            return createConnection(transports.reader, transports.writer, errorHandler, closeHandler);\n        });\n    }\n    handleConnectionClosed() {\n        // Check whether this is a normal shutdown in progress or the client stopped normally.\n        if (this.state === ClientState.Stopping || this.state === ClientState.Stopped) {\n            return;\n        }\n        try {\n            if (this._resolvedConnection) {\n                this._resolvedConnection.dispose();\n            }\n        }\n        catch (error) {\n            // Disposing a connection could fail if error cases.\n        }\n        let action = CloseAction.DoNotRestart;\n        try {\n            action = this._clientOptions.errorHandler.closed();\n        }\n        catch (error) {\n            // Ignore errors coming from the error handler.\n        }\n        this._connectionPromise = undefined;\n        this._resolvedConnection = undefined;\n        if (action === CloseAction.DoNotRestart) {\n            this.error('Connection to server got closed. Server will not be restarted.');\n            this.state = ClientState.Stopped;\n            this.cleanUp(false, true);\n        }\n        else if (action === CloseAction.Restart) {\n            this.info('Connection to server got closed. Server will restart.');\n            this.cleanUp(false, false);\n            this.state = ClientState.Initial;\n            this.start();\n        }\n    }\n    handleConnectionError(error, message, count) {\n        let action = this._clientOptions.errorHandler.error(error, message, count);\n        if (action === ErrorAction.Shutdown) {\n            this.error('Connection to server is erroring. Shutting down server.');\n            this.stop();\n        }\n    }\n    hookConfigurationChanged(connection) {\n        vscode_1.workspace.onDidChangeConfiguration(() => {\n            this.refreshTrace(connection, true);\n        });\n    }\n    refreshTrace(connection, sendNotification = false) {\n        let config = vscode_1.workspace.getConfiguration(this._id);\n        let trace = vscode_languageserver_protocol_1.Trace.Off;\n        let traceFormat = vscode_languageserver_protocol_1.TraceFormat.Text;\n        if (config) {\n            const traceConfig = config.get('trace.server', 'off');\n            if (typeof traceConfig === 'string') {\n                trace = vscode_languageserver_protocol_1.Trace.fromString(traceConfig);\n            }\n            else {\n                trace = vscode_languageserver_protocol_1.Trace.fromString(config.get('trace.server.verbosity', 'off'));\n                traceFormat = vscode_languageserver_protocol_1.TraceFormat.fromString(config.get('trace.server.format', 'text'));\n            }\n        }\n        this._trace = trace;\n        this._traceFormat = traceFormat;\n        connection.trace(this._trace, this._tracer, {\n            sendNotification,\n            traceFormat: this._traceFormat\n        });\n    }\n    hookFileEvents(_connection) {\n        let fileEvents = this._clientOptions.synchronize.fileEvents;\n        if (!fileEvents) {\n            return;\n        }\n        let watchers;\n        if (Is.array(fileEvents)) {\n            watchers = fileEvents;\n        }\n        else {\n            watchers = [fileEvents];\n        }\n        if (!watchers) {\n            return;\n        }\n        this._dynamicFeatures.get(vscode_languageserver_protocol_1.DidChangeWatchedFilesNotification.type.method).registerRaw(UUID.generateUuid(), watchers);\n    }\n    registerFeatures(features) {\n        for (let feature of features) {\n            this.registerFeature(feature);\n        }\n    }\n    registerFeature(feature) {\n        this._features.push(feature);\n        if (DynamicFeature.is(feature)) {\n            let messages = feature.messages;\n            if (Array.isArray(messages)) {\n                for (let message of messages) {\n                    this._method2Message.set(message.method, message);\n                    this._dynamicFeatures.set(message.method, feature);\n                }\n            }\n            else {\n                this._method2Message.set(messages.method, messages);\n                this._dynamicFeatures.set(messages.method, feature);\n            }\n        }\n    }\n    getFeature(request) {\n        return this._dynamicFeatures.get(request);\n    }\n    registerBuiltinFeatures() {\n        this.registerFeature(new ConfigurationFeature(this));\n        this.registerFeature(new DidOpenTextDocumentFeature(this, this._syncedDocuments));\n        this.registerFeature(new DidChangeTextDocumentFeature(this));\n        this.registerFeature(new WillSaveFeature(this));\n        this.registerFeature(new WillSaveWaitUntilFeature(this));\n        this.registerFeature(new DidSaveTextDocumentFeature(this));\n        this.registerFeature(new DidCloseTextDocumentFeature(this, this._syncedDocuments));\n        this.registerFeature(new FileSystemWatcherFeature(this, (event) => this.notifyFileEvent(event)));\n        this.registerFeature(new CompletionItemFeature(this));\n        this.registerFeature(new HoverFeature(this));\n        this.registerFeature(new SignatureHelpFeature(this));\n        this.registerFeature(new DefinitionFeature(this));\n        this.registerFeature(new ReferencesFeature(this));\n        this.registerFeature(new DocumentHighlightFeature(this));\n        this.registerFeature(new DocumentSymbolFeature(this));\n        this.registerFeature(new WorkspaceSymbolFeature(this));\n        this.registerFeature(new CodeActionFeature(this));\n        this.registerFeature(new CodeLensFeature(this));\n        this.registerFeature(new DocumentFormattingFeature(this));\n        this.registerFeature(new DocumentRangeFormattingFeature(this));\n        this.registerFeature(new DocumentOnTypeFormattingFeature(this));\n        this.registerFeature(new RenameFeature(this));\n        this.registerFeature(new DocumentLinkFeature(this));\n        this.registerFeature(new ExecuteCommandFeature(this));\n    }\n    fillInitializeParams(params) {\n        for (let feature of this._features) {\n            if (Is.func(feature.fillInitializeParams)) {\n                feature.fillInitializeParams(params);\n            }\n        }\n    }\n    computeClientCapabilities() {\n        let result = {};\n        ensure(result, 'workspace').applyEdit = true;\n        let workspaceEdit = ensure(ensure(result, 'workspace'), 'workspaceEdit');\n        workspaceEdit.documentChanges = true;\n        workspaceEdit.resourceOperations = [vscode_languageserver_protocol_1.ResourceOperationKind.Create, vscode_languageserver_protocol_1.ResourceOperationKind.Rename, vscode_languageserver_protocol_1.ResourceOperationKind.Delete];\n        workspaceEdit.failureHandling = vscode_languageserver_protocol_1.FailureHandlingKind.TextOnlyTransactional;\n        let diagnostics = ensure(ensure(result, 'textDocument'), 'publishDiagnostics');\n        diagnostics.relatedInformation = true;\n        diagnostics.versionSupport = false;\n        diagnostics.tagSupport = { valueSet: [vscode_languageserver_protocol_1.DiagnosticTag.Unnecessary, vscode_languageserver_protocol_1.DiagnosticTag.Deprecated] };\n        for (let feature of this._features) {\n            feature.fillClientCapabilities(result);\n        }\n        return result;\n    }\n    initializeFeatures(_connection) {\n        let documentSelector = this._clientOptions.documentSelector;\n        for (let feature of this._features) {\n            feature.initialize(this._capabilities, documentSelector);\n        }\n    }\n    handleRegistrationRequest(params) {\n        return new Promise((resolve, reject) => {\n            for (let registration of params.registrations) {\n                const feature = this._dynamicFeatures.get(registration.method);\n                if (!feature) {\n                    reject(new Error(`No feature implementation for ${registration.method} found. Registration failed.`));\n                    return;\n                }\n                const options = registration.registerOptions || {};\n                options.documentSelector = options.documentSelector || this._clientOptions.documentSelector;\n                const data = {\n                    id: registration.id,\n                    registerOptions: options\n                };\n                feature.register(this._method2Message.get(registration.method), data);\n            }\n            resolve();\n        });\n    }\n    handleUnregistrationRequest(params) {\n        return new Promise((resolve, reject) => {\n            for (let unregistration of params.unregisterations) {\n                const feature = this._dynamicFeatures.get(unregistration.method);\n                if (!feature) {\n                    reject(new Error(`No feature implementation for ${unregistration.method} found. Unregistration failed.`));\n                    return;\n                }\n                feature.unregister(unregistration.id);\n            }\n            resolve();\n        });\n    }\n    handleApplyWorkspaceEdit(params) {\n        // This is some sort of workaround since the version check should be done by VS Code in the Workspace.applyEdit.\n        // However doing it here adds some safety since the server can lag more behind then an extension.\n        let workspaceEdit = params.edit;\n        let openTextDocuments = new Map();\n        vscode_1.workspace.textDocuments.forEach((document) => openTextDocuments.set(document.uri.toString(), document));\n        let versionMismatch = false;\n        if (workspaceEdit.documentChanges) {\n            for (const change of workspaceEdit.documentChanges) {\n                if (vscode_languageserver_protocol_1.TextDocumentEdit.is(change) && change.textDocument.version && change.textDocument.version >= 0) {\n                    let textDocument = openTextDocuments.get(change.textDocument.uri);\n                    if (textDocument && textDocument.version !== change.textDocument.version) {\n                        versionMismatch = true;\n                        break;\n                    }\n                }\n            }\n        }\n        if (versionMismatch) {\n            return Promise.resolve({ applied: false });\n        }\n        return Is.asPromise(vscode_1.workspace.applyEdit(this._p2c.asWorkspaceEdit(params.edit)).then((value) => { return { applied: value }; }));\n    }\n    logFailedRequest(type, error) {\n        // If we get a request cancel or a content modified don't log anything.\n        if (error instanceof vscode_languageserver_protocol_1.ResponseError && (error.code === vscode_languageserver_protocol_1.ErrorCodes.RequestCancelled || error.code === vscode_languageserver_protocol_1.ErrorCodes.ContentModified)) {\n            return;\n        }\n        this.error(`Request ${type.method} failed.`, error);\n    }\n}\nexports.BaseLanguageClient = BaseLanguageClient;\n", "/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\n'use strict';\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst vscode_1 = require(\"vscode\");\nconst vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\nconst client_1 = require(\"./client\");\nfunction ensure(target, key) {\n    if (target[key] === void 0) {\n        target[key] = {};\n    }\n    return target[key];\n}\nclass ColorProviderFeature extends client_1.TextDocumentFeature {\n    constructor(client) {\n        super(client, vscode_languageserver_protocol_1.DocumentColorRequest.type);\n    }\n    fillClientCapabilities(capabilites) {\n        ensure(ensure(capabilites, 'textDocument'), 'colorProvider').dynamicRegistration = true;\n    }\n    initialize(capabilities, documentSelector) {\n        let [id, options] = this.getRegistration(documentSelector, capabilities.colorProvider);\n        if (!id || !options) {\n            return;\n        }\n        this.register(this.messages, { id: id, registerOptions: options });\n    }\n    registerLanguageProvider(options) {\n        const provider = {\n            provideColorPresentations: (color, context, token) => {\n                const client = this._client;\n                const provideColorPresentations = (color, context, token) => {\n                    const requestParams = {\n                        color,\n                        textDocument: client.code2ProtocolConverter.asTextDocumentIdentifier(context.document),\n                        range: client.code2ProtocolConverter.asRange(context.range)\n                    };\n                    return client.sendRequest(vscode_languageserver_protocol_1.ColorPresentationRequest.type, requestParams, token).then(this.asColorPresentations.bind(this), (error) => {\n                        client.logFailedRequest(vscode_languageserver_protocol_1.ColorPresentationRequest.type, error);\n                        return Promise.resolve(null);\n                    });\n                };\n                const middleware = client.clientOptions.middleware;\n                return middleware.provideColorPresentations\n                    ? middleware.provideColorPresentations(color, context, token, provideColorPresentations)\n                    : provideColorPresentations(color, context, token);\n            },\n            provideDocumentColors: (document, token) => {\n                const client = this._client;\n                const provideDocumentColors = (document, token) => {\n                    const requestParams = {\n                        textDocument: client.code2ProtocolConverter.asTextDocumentIdentifier(document)\n                    };\n                    return client.sendRequest(vscode_languageserver_protocol_1.DocumentColorRequest.type, requestParams, token).then(this.asColorInformations.bind(this), (error) => {\n                        client.logFailedRequest(vscode_languageserver_protocol_1.ColorPresentationRequest.type, error);\n                        return Promise.resolve(null);\n                    });\n                };\n                const middleware = client.clientOptions.middleware;\n                return middleware.provideDocumentColors\n                    ? middleware.provideDocumentColors(document, token, provideDocumentColors)\n                    : provideDocumentColors(document, token);\n            }\n        };\n        return [vscode_1.languages.registerColorProvider(options.documentSelector, provider), provider];\n    }\n    asColor(color) {\n        return new vscode_1.Color(color.red, color.green, color.blue, color.alpha);\n    }\n    asColorInformations(colorInformation) {\n        if (Array.isArray(colorInformation)) {\n            return colorInformation.map(ci => {\n                return new vscode_1.ColorInformation(this._client.protocol2CodeConverter.asRange(ci.range), this.asColor(ci.color));\n            });\n        }\n        return [];\n    }\n    asColorPresentations(colorPresentations) {\n        if (Array.isArray(colorPresentations)) {\n            return colorPresentations.map(cp => {\n                let presentation = new vscode_1.ColorPresentation(cp.label);\n                presentation.additionalTextEdits = this._client.protocol2CodeConverter.asTextEdits(cp.additionalTextEdits);\n                presentation.textEdit = this._client.protocol2CodeConverter.asTextEdit(cp.textEdit);\n                return presentation;\n            });\n        }\n        return [];\n    }\n}\nexports.ColorProviderFeature = ColorProviderFeature;\n", "/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\n'use strict';\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst vscode_1 = require(\"vscode\");\nconst vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\nclass ConfigurationFeature {\n    constructor(_client) {\n        this._client = _client;\n    }\n    fillClientCapabilities(capabilities) {\n        capabilities.workspace = capabilities.workspace || {};\n        capabilities.workspace.configuration = true;\n    }\n    initialize() {\n        let client = this._client;\n        client.onRequest(vscode_languageserver_protocol_1.ConfigurationRequest.type, (params, token) => {\n            let configuration = (params) => {\n                let result = [];\n                for (let item of params.items) {\n                    let resource = item.scopeUri !== void 0 && item.scopeUri !== null ? this._client.protocol2CodeConverter.asUri(item.scopeUri) : undefined;\n                    result.push(this.getConfiguration(resource, item.section !== null ? item.section : undefined));\n                }\n                return result;\n            };\n            let middleware = client.clientOptions.middleware.workspace;\n            return middleware && middleware.configuration\n                ? middleware.configuration(params, token, configuration)\n                : configuration(params, token);\n        });\n    }\n    getConfiguration(resource, section) {\n        let result = null;\n        if (section) {\n            let index = section.lastIndexOf('.');\n            if (index === -1) {\n                result = vscode_1.workspace.getConfiguration(undefined, resource).get(section);\n            }\n            else {\n                let config = vscode_1.workspace.getConfiguration(section.substr(0, index), resource);\n                if (config) {\n                    result = config.get(section.substr(index + 1));\n                }\n            }\n        }\n        else {\n            let config = vscode_1.workspace.getConfiguration(undefined, resource);\n            result = {};\n            for (let key of Object.keys(config)) {\n                if (config.has(key)) {\n                    result[key] = config.get(key);\n                }\n            }\n        }\n        if (!result) {\n            return null;\n        }\n        return result;\n    }\n}\nexports.ConfigurationFeature = ConfigurationFeature;\n", "/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\n'use strict';\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst vscode_1 = require(\"vscode\");\nconst vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\nconst client_1 = require(\"./client\");\nfunction ensure(target, key) {\n    if (target[key] === void 0) {\n        target[key] = {};\n    }\n    return target[key];\n}\nclass ImplementationFeature extends client_1.TextDocumentFeature {\n    constructor(client) {\n        super(client, vscode_languageserver_protocol_1.ImplementationRequest.type);\n    }\n    fillClientCapabilities(capabilites) {\n        let implementationSupport = ensure(ensure(capabilites, 'textDocument'), 'implementation');\n        implementationSupport.dynamicRegistration = true;\n        implementationSupport.linkSupport = true;\n    }\n    initialize(capabilities, documentSelector) {\n        let [id, options] = this.getRegistration(documentSelector, capabilities.implementationProvider);\n        if (!id || !options) {\n            return;\n        }\n        this.register(this.messages, { id: id, registerOptions: options });\n    }\n    registerLanguageProvider(options) {\n        const provider = {\n            provideImplementation: (document, position, token) => {\n                const client = this._client;\n                const provideImplementation = (document, position, token) => {\n                    return client.sendRequest(vscode_languageserver_protocol_1.ImplementationRequest.type, client.code2ProtocolConverter.asTextDocumentPositionParams(document, position), token).then(client.protocol2CodeConverter.asDefinitionResult, (error) => {\n                        client.logFailedRequest(vscode_languageserver_protocol_1.ImplementationRequest.type, error);\n                        return Promise.resolve(null);\n                    });\n                };\n                const middleware = client.clientOptions.middleware;\n                return middleware.provideImplementation\n                    ? middleware.provideImplementation(document, position, token, provideImplementation)\n                    : provideImplementation(document, position, token);\n            }\n        };\n        return [vscode_1.languages.registerImplementationProvider(options.documentSelector, provider), provider];\n    }\n}\nexports.ImplementationFeature = ImplementationFeature;\n", "/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\n'use strict';\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst vscode_1 = require(\"vscode\");\nconst vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\nconst client_1 = require(\"./client\");\nfunction ensure(target, key) {\n    if (target[key] === void 0) {\n        target[key] = {};\n    }\n    return target[key];\n}\nclass TypeDefinitionFeature extends client_1.TextDocumentFeature {\n    constructor(client) {\n        super(client, vscode_languageserver_protocol_1.TypeDefinitionRequest.type);\n    }\n    fillClientCapabilities(capabilites) {\n        ensure(ensure(capabilites, 'textDocument'), 'typeDefinition').dynamicRegistration = true;\n        let typeDefinitionSupport = ensure(ensure(capabilites, 'textDocument'), 'typeDefinition');\n        typeDefinitionSupport.dynamicRegistration = true;\n        typeDefinitionSupport.linkSupport = true;\n    }\n    initialize(capabilities, documentSelector) {\n        let [id, options] = this.getRegistration(documentSelector, capabilities.typeDefinitionProvider);\n        if (!id || !options) {\n            return;\n        }\n        this.register(this.messages, { id: id, registerOptions: options });\n    }\n    registerLanguageProvider(options) {\n        const provider = {\n            provideTypeDefinition: (document, position, token) => {\n                const client = this._client;\n                const provideTypeDefinition = (document, position, token) => {\n                    return client.sendRequest(vscode_languageserver_protocol_1.TypeDefinitionRequest.type, client.code2ProtocolConverter.asTextDocumentPositionParams(document, position), token).then(client.protocol2CodeConverter.asDefinitionResult, (error) => {\n                        client.logFailedRequest(vscode_languageserver_protocol_1.TypeDefinitionRequest.type, error);\n                        return Promise.resolve(null);\n                    });\n                };\n                const middleware = client.clientOptions.middleware;\n                return middleware.provideTypeDefinition\n                    ? middleware.provideTypeDefinition(document, position, token, provideTypeDefinition)\n                    : provideTypeDefinition(document, position, token);\n            }\n        };\n        return [vscode_1.languages.registerTypeDefinitionProvider(options.documentSelector, provider), provider];\n    }\n}\nexports.TypeDefinitionFeature = TypeDefinitionFeature;\n", "/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\n'use strict';\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst UUID = require(\"./utils/uuid\");\nconst vscode_1 = require(\"vscode\");\nconst vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\nfunction access(target, key) {\n    if (target === void 0) {\n        return undefined;\n    }\n    return target[key];\n}\nfunction arrayDiff(left, right) {\n    return left.filter(element => right.indexOf(element) < 0);\n}\nexports.arrayDiff = arrayDiff;\nclass WorkspaceFoldersFeature {\n    constructor(_client) {\n        this._client = _client;\n        this._listeners = new Map();\n    }\n    get messages() {\n        return vscode_languageserver_protocol_1.DidChangeWorkspaceFoldersNotification.type;\n    }\n    fillInitializeParams(params) {\n        let folders = vscode_1.workspace.workspaceFolders;\n        this.initializeWithFolders(folders);\n        if (folders === void 0) {\n            params.workspaceFolders = null;\n        }\n        else {\n            params.workspaceFolders = folders.map(folder => this.asProtocol(folder));\n        }\n    }\n    initializeWithFolders(currentWorkspaceFolders) {\n        this._initialFolders = currentWorkspaceFolders;\n    }\n    fillClientCapabilities(capabilities) {\n        capabilities.workspace = capabilities.workspace || {};\n        capabilities.workspace.workspaceFolders = true;\n    }\n    initialize(capabilities) {\n        let client = this._client;\n        client.onRequest(vscode_languageserver_protocol_1.WorkspaceFoldersRequest.type, (token) => {\n            let workspaceFolders = () => {\n                let folders = vscode_1.workspace.workspaceFolders;\n                if (folders === void 0) {\n                    return null;\n                }\n                let result = folders.map((folder) => {\n                    return this.asProtocol(folder);\n                });\n                return result;\n            };\n            let middleware = client.clientOptions.middleware.workspace;\n            return middleware && middleware.workspaceFolders\n                ? middleware.workspaceFolders(token, workspaceFolders)\n                : workspaceFolders(token);\n        });\n        let value = access(access(access(capabilities, 'workspace'), 'workspaceFolders'), 'changeNotifications');\n        let id;\n        if (typeof value === 'string') {\n            id = value;\n        }\n        else if (value === true) {\n            id = UUID.generateUuid();\n        }\n        if (id) {\n            this.register(this.messages, {\n                id: id,\n                registerOptions: undefined\n            });\n        }\n    }\n    sendInitialEvent(currentWorkspaceFolders) {\n        if (this._initialFolders && currentWorkspaceFolders) {\n            const removed = arrayDiff(this._initialFolders, currentWorkspaceFolders);\n            const added = arrayDiff(currentWorkspaceFolders, this._initialFolders);\n            if (added.length > 0 || removed.length > 0) {\n                this.doSendEvent(added, removed);\n            }\n        }\n        else if (this._initialFolders) {\n            this.doSendEvent([], this._initialFolders);\n        }\n        else if (currentWorkspaceFolders) {\n            this.doSendEvent(currentWorkspaceFolders, []);\n        }\n    }\n    doSendEvent(addedFolders, removedFolders) {\n        let params = {\n            event: {\n                added: addedFolders.map(folder => this.asProtocol(folder)),\n                removed: removedFolders.map(folder => this.asProtocol(folder))\n            }\n        };\n        this._client.sendNotification(vscode_languageserver_protocol_1.DidChangeWorkspaceFoldersNotification.type, params);\n    }\n    register(_message, data) {\n        let id = data.id;\n        let client = this._client;\n        let disposable = vscode_1.workspace.onDidChangeWorkspaceFolders((event) => {\n            let didChangeWorkspaceFolders = (event) => {\n                this.doSendEvent(event.added, event.removed);\n            };\n            let middleware = client.clientOptions.middleware.workspace;\n            middleware && middleware.didChangeWorkspaceFolders\n                ? middleware.didChangeWorkspaceFolders(event, didChangeWorkspaceFolders)\n                : didChangeWorkspaceFolders(event);\n        });\n        this._listeners.set(id, disposable);\n        this.sendInitialEvent(vscode_1.workspace.workspaceFolders);\n    }\n    unregister(id) {\n        let disposable = this._listeners.get(id);\n        if (disposable === void 0) {\n            return;\n        }\n        this._listeners.delete(id);\n        disposable.dispose();\n    }\n    dispose() {\n        for (let disposable of this._listeners.values()) {\n            disposable.dispose();\n        }\n        this._listeners.clear();\n    }\n    asProtocol(workspaceFolder) {\n        if (workspaceFolder === void 0) {\n            return null;\n        }\n        return { uri: this._client.code2ProtocolConverter.asUri(workspaceFolder.uri), name: workspaceFolder.name };\n    }\n}\nexports.WorkspaceFoldersFeature = WorkspaceFoldersFeature;\n", "/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\n'use strict';\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst vscode_1 = require(\"vscode\");\nconst vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\nconst client_1 = require(\"./client\");\nfunction ensure(target, key) {\n    if (target[key] === void 0) {\n        target[key] = {};\n    }\n    return target[key];\n}\nclass FoldingRangeFeature extends client_1.TextDocumentFeature {\n    constructor(client) {\n        super(client, vscode_languageserver_protocol_1.FoldingRangeRequest.type);\n    }\n    fillClientCapabilities(capabilites) {\n        let capability = ensure(ensure(capabilites, 'textDocument'), 'foldingRange');\n        capability.dynamicRegistration = true;\n        capability.rangeLimit = 5000;\n        capability.lineFoldingOnly = true;\n    }\n    initialize(capabilities, documentSelector) {\n        let [id, options] = this.getRegistration(documentSelector, capabilities.foldingRangeProvider);\n        if (!id || !options) {\n            return;\n        }\n        this.register(this.messages, { id: id, registerOptions: options });\n    }\n    registerLanguageProvider(options) {\n        const provider = {\n            provideFoldingRanges: (document, context, token) => {\n                const client = this._client;\n                const provideFoldingRanges = (document, _, token) => {\n                    const requestParams = {\n                        textDocument: client.code2ProtocolConverter.asTextDocumentIdentifier(document)\n                    };\n                    return client.sendRequest(vscode_languageserver_protocol_1.FoldingRangeRequest.type, requestParams, token).then(this.asFoldingRanges.bind(this), (error) => {\n                        client.logFailedRequest(vscode_languageserver_protocol_1.FoldingRangeRequest.type, error);\n                        return Promise.resolve(null);\n                    });\n                };\n                const middleware = client.clientOptions.middleware;\n                return middleware.provideFoldingRanges\n                    ? middleware.provideFoldingRanges(document, context, token, provideFoldingRanges)\n                    : provideFoldingRanges(document, context, token);\n            }\n        };\n        return [vscode_1.languages.registerFoldingRangeProvider(options.documentSelector, provider), provider];\n    }\n    asFoldingRangeKind(kind) {\n        if (kind) {\n            switch (kind) {\n                case vscode_languageserver_protocol_1.FoldingRangeKind.Comment:\n                    return vscode_1.FoldingRangeKind.Comment;\n                case vscode_languageserver_protocol_1.FoldingRangeKind.Imports:\n                    return vscode_1.FoldingRangeKind.Imports;\n                case vscode_languageserver_protocol_1.FoldingRangeKind.Region:\n                    return vscode_1.FoldingRangeKind.Region;\n            }\n        }\n        return void 0;\n    }\n    asFoldingRanges(foldingRanges) {\n        if (Array.isArray(foldingRanges)) {\n            return foldingRanges.map(r => {\n                return new vscode_1.FoldingRange(r.startLine, r.endLine, this.asFoldingRangeKind(r.kind));\n            });\n        }\n        return [];\n    }\n}\nexports.FoldingRangeFeature = FoldingRangeFeature;\n", "/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\n'use strict';\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst vscode_1 = require(\"vscode\");\nconst vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\nconst client_1 = require(\"./client\");\nfunction ensure(target, key) {\n    if (target[key] === void 0) {\n        target[key] = {};\n    }\n    return target[key];\n}\nclass DeclarationFeature extends client_1.TextDocumentFeature {\n    constructor(client) {\n        super(client, vscode_languageserver_protocol_1.DeclarationRequest.type);\n    }\n    fillClientCapabilities(capabilites) {\n        const declarationSupport = ensure(ensure(capabilites, 'textDocument'), 'declaration');\n        declarationSupport.dynamicRegistration = true;\n        declarationSupport.linkSupport = true;\n    }\n    initialize(capabilities, documentSelector) {\n        const [id, options] = this.getRegistration(documentSelector, capabilities.declarationProvider);\n        if (!id || !options) {\n            return;\n        }\n        this.register(this.messages, { id: id, registerOptions: options });\n    }\n    registerLanguageProvider(options) {\n        const provider = {\n            provideDeclaration: (document, position, token) => {\n                const client = this._client;\n                const provideDeclaration = (document, position, token) => {\n                    return client.sendRequest(vscode_languageserver_protocol_1.DeclarationRequest.type, client.code2ProtocolConverter.asTextDocumentPositionParams(document, position), token).then(client.protocol2CodeConverter.asDeclarationResult, (error) => {\n                        client.logFailedRequest(vscode_languageserver_protocol_1.DeclarationRequest.type, error);\n                        return Promise.resolve(null);\n                    });\n                };\n                const middleware = client.clientOptions.middleware;\n                return middleware.provideDeclaration\n                    ? middleware.provideDeclaration(document, position, token, provideDeclaration)\n                    : provideDeclaration(document, position, token);\n            }\n        };\n        return [vscode_1.languages.registerDeclarationProvider(options.documentSelector, provider), provider];\n    }\n}\nexports.DeclarationFeature = DeclarationFeature;\n", "/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\n'use strict';\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst vscode_1 = require(\"vscode\");\nconst vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\nconst client_1 = require(\"./client\");\nfunction ensure(target, key) {\n    if (target[key] === void 0) {\n        target[key] = Object.create(null);\n    }\n    return target[key];\n}\nclass SelectionRangeFeature extends client_1.TextDocumentFeature {\n    constructor(client) {\n        super(client, vscode_languageserver_protocol_1.SelectionRangeRequest.type);\n    }\n    fillClientCapabilities(capabilites) {\n        let capability = ensure(ensure(capabilites, 'textDocument'), 'selectionRange');\n        capability.dynamicRegistration = true;\n    }\n    initialize(capabilities, documentSelector) {\n        let [id, options] = this.getRegistration(documentSelector, capabilities.selectionRangeProvider);\n        if (!id || !options) {\n            return;\n        }\n        this.register(this.messages, { id: id, registerOptions: options });\n    }\n    registerLanguageProvider(options) {\n        const provider = {\n            provideSelectionRanges: (document, positions, token) => {\n                const client = this._client;\n                const provideSelectionRanges = (document, positions, token) => {\n                    const requestParams = {\n                        textDocument: client.code2ProtocolConverter.asTextDocumentIdentifier(document),\n                        positions: client.code2ProtocolConverter.asPositions(positions)\n                    };\n                    return client.sendRequest(vscode_languageserver_protocol_1.SelectionRangeRequest.type, requestParams, token).then((ranges) => client.protocol2CodeConverter.asSelectionRanges(ranges), (error) => {\n                        client.logFailedRequest(vscode_languageserver_protocol_1.SelectionRangeRequest.type, error);\n                        return Promise.resolve(null);\n                    });\n                };\n                const middleware = client.clientOptions.middleware;\n                return middleware.provideSelectionRanges\n                    ? middleware.provideSelectionRanges(document, positions, token, provideSelectionRanges)\n                    : provideSelectionRanges(document, positions, token);\n            }\n        };\n        return [vscode_1.languages.registerSelectionRangeProvider(options.documentSelector, provider), provider];\n    }\n}\nexports.SelectionRangeFeature = SelectionRangeFeature;\n", "/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\n'use strict';\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\nconst progressPart_1 = require(\"./progressPart\");\nfunction ensure(target, key) {\n    if (target[key] === void 0) {\n        target[key] = Object.create(null);\n    }\n    return target[key];\n}\nclass ProgressFeature {\n    constructor(_client) {\n        this._client = _client;\n    }\n    fillClientCapabilities(capabilities) {\n        ensure(capabilities, 'window').workDoneProgress = true;\n    }\n    initialize() {\n        let client = this._client;\n        let createHandler = (params) => {\n            new progressPart_1.ProgressPart(this._client, params.token);\n        };\n        client.onRequest(vscode_languageserver_protocol_1.WorkDoneProgressCreateRequest.type, createHandler);\n    }\n}\nexports.ProgressFeature = ProgressFeature;\n", "/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\n'use strict';\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst vscode_1 = require(\"vscode\");\nconst vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\nconst client_1 = require(\"./client\");\nfunction ensure(target, key) {\n    if (target[key] === void 0) {\n        target[key] = {};\n    }\n    return target[key];\n}\nvar protocol2code;\n(function (protocol2code) {\n    function asCallHierarchyItem(converter, item) {\n        if (item === null) {\n            return undefined;\n        }\n        let result = new vscode_1.CallHierarchyItem(converter.asSymbolKind(item.kind), item.name, item.detail || '', converter.asUri(item.uri), converter.asRange(item.range), converter.asRange(item.selectionRange));\n        if (item.tags !== undefined) {\n            result.tags = converter.asSymbolTags(item.tags);\n        }\n        return result;\n    }\n    protocol2code.asCallHierarchyItem = asCallHierarchyItem;\n    function asCallHierarchyItems(converter, items) {\n        if (items === null) {\n            return undefined;\n        }\n        let result = items.map(item => asCallHierarchyItem(converter, item));\n        return result[0];\n    }\n    protocol2code.asCallHierarchyItems = asCallHierarchyItems;\n    function asCallHierarchyIncomingCall(converter, item) {\n        return new vscode_1.CallHierarchyIncomingCall(asCallHierarchyItem(converter, item.from), converter.asRanges(item.fromRanges));\n    }\n    protocol2code.asCallHierarchyIncomingCall = asCallHierarchyIncomingCall;\n    function asCallHierarchyIncomingCalls(converter, items) {\n        if (items === null) {\n            return undefined;\n        }\n        return items.map(item => asCallHierarchyIncomingCall(converter, item));\n    }\n    protocol2code.asCallHierarchyIncomingCalls = asCallHierarchyIncomingCalls;\n    function asCallHierarchyOutgoingCall(converter, item) {\n        return new vscode_1.CallHierarchyOutgoingCall(asCallHierarchyItem(converter, item.to), converter.asRanges(item.fromRanges));\n    }\n    protocol2code.asCallHierarchyOutgoingCall = asCallHierarchyOutgoingCall;\n    function asCallHierarchyOutgoingCalls(converter, items) {\n        if (items === null) {\n            return undefined;\n        }\n        return items.map(item => asCallHierarchyOutgoingCall(converter, item));\n    }\n    protocol2code.asCallHierarchyOutgoingCalls = asCallHierarchyOutgoingCalls;\n})(protocol2code || (protocol2code = {}));\nvar code2protocol;\n(function (code2protocol) {\n    function asCallHierarchyItem(converter, value) {\n        const result = {\n            name: value.name,\n            kind: converter.asSymbolKind(value.kind),\n            uri: converter.asUri(value.uri),\n            range: converter.asRange(value.range),\n            selectionRange: converter.asRange(value.selectionRange)\n        };\n        if (value.detail !== undefined && value.detail.length > 0) {\n            result.detail = value.detail;\n        }\n        if (value.tags !== undefined) {\n            result.tags = converter.asSymbolTags(value.tags);\n        }\n        return result;\n    }\n    code2protocol.asCallHierarchyItem = asCallHierarchyItem;\n})(code2protocol || (code2protocol = {}));\nclass CallHierarchyProvider {\n    constructor(client) {\n        this.client = client;\n        this.middleware = client.clientOptions.middleware;\n    }\n    prepareCallHierarchy(document, position, token) {\n        const client = this.client;\n        const middleware = this.middleware;\n        const prepareCallHierarchy = (document, position, token) => {\n            const params = client.code2ProtocolConverter.asTextDocumentPositionParams(document, position);\n            return client.sendRequest(vscode_languageserver_protocol_1.Proposed.CallHierarchyPrepareRequest.type, params, token).then((result) => {\n                return protocol2code.asCallHierarchyItems(this.client.protocol2CodeConverter, result);\n            }, (error) => {\n                client.logFailedRequest(vscode_languageserver_protocol_1.Proposed.CallHierarchyPrepareRequest.type, error);\n                return Promise.resolve(null);\n            });\n        };\n        return middleware.prepareCallHierarchy\n            ? middleware.prepareCallHierarchy(document, position, token, prepareCallHierarchy)\n            : prepareCallHierarchy(document, position, token);\n    }\n    provideCallHierarchyIncomingCalls(item, token) {\n        const client = this.client;\n        const middleware = this.middleware;\n        const provideCallHierarchyIncomingCalls = (item, token) => {\n            const params = {\n                item: code2protocol.asCallHierarchyItem(client.code2ProtocolConverter, item)\n            };\n            return client.sendRequest(vscode_languageserver_protocol_1.Proposed.CallHierarchyIncomingCallsRequest.type, params, token).then((result) => {\n                return protocol2code.asCallHierarchyIncomingCalls(client.protocol2CodeConverter, result);\n            }, (error) => {\n                client.logFailedRequest(vscode_languageserver_protocol_1.Proposed.CallHierarchyIncomingCallsRequest.type, error);\n                return Promise.resolve(null);\n            });\n        };\n        return middleware.provideCallHierarchyIncomingCalls\n            ? middleware.provideCallHierarchyIncomingCalls(item, token, provideCallHierarchyIncomingCalls)\n            : provideCallHierarchyIncomingCalls(item, token);\n    }\n    provideCallHierarchyOutgoingCalls(item, token) {\n        const client = this.client;\n        const middleware = this.middleware;\n        const provideCallHierarchyOutgoingCalls = (item, token) => {\n            const params = {\n                item: code2protocol.asCallHierarchyItem(client.code2ProtocolConverter, item)\n            };\n            return client.sendRequest(vscode_languageserver_protocol_1.Proposed.CallHierarchyOutgoingCallsRequest.type, params, token).then((result) => {\n                return protocol2code.asCallHierarchyOutgoingCalls(client.protocol2CodeConverter, result);\n            }, (error) => {\n                client.logFailedRequest(vscode_languageserver_protocol_1.Proposed.CallHierarchyOutgoingCallsRequest.type, error);\n                return Promise.resolve(null);\n            });\n        };\n        return middleware.provideCallHierarchyOutgingCalls\n            ? middleware.provideCallHierarchyOutgingCalls(item, token, provideCallHierarchyOutgoingCalls)\n            : provideCallHierarchyOutgoingCalls(item, token);\n    }\n}\nclass CallHierarchyFeature extends client_1.TextDocumentFeature {\n    constructor(client) {\n        super(client, vscode_languageserver_protocol_1.Proposed.CallHierarchyPrepareRequest.type);\n    }\n    fillClientCapabilities(cap) {\n        const capabilites = cap;\n        const capability = ensure(ensure(capabilites, 'textDocument'), 'callHierarchy');\n        capability.dynamicRegistration = true;\n    }\n    initialize(cap, documentSelector) {\n        const capabilities = cap;\n        const [id, options] = this.getRegistration(documentSelector, capabilities.callHierarchyProvider);\n        if (!id || !options) {\n            return;\n        }\n        this.register(this.messages, { id: id, registerOptions: options });\n    }\n    registerLanguageProvider(options) {\n        const client = this._client;\n        const provider = new CallHierarchyProvider(client);\n        return [vscode_1.languages.registerCallHierarchyProvider(options.documentSelector, provider), provider];\n    }\n}\nexports.CallHierarchyFeature = CallHierarchyFeature;\n", "/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\n'use strict';\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst vscode = require(\"vscode\");\nconst client_1 = require(\"./client\");\nconst vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\nfunction ensure(target, key) {\n    if (target[key] === void 0) {\n        target[key] = {};\n    }\n    return target[key];\n}\nvar protocol2code;\n(function (protocol2code) {\n    function asSemanticTokens(value) {\n        if (value === undefined || value === null) {\n            return undefined;\n        }\n        return new vscode.SemanticTokens(new Uint32Array(value.data), value.resultId);\n    }\n    protocol2code.asSemanticTokens = asSemanticTokens;\n    function asSemanticTokensEdit(value) {\n        return new vscode.SemanticTokensEdit(value.start, value.deleteCount, value.data !== undefined ? new Uint32Array(value.data) : undefined);\n    }\n    protocol2code.asSemanticTokensEdit = asSemanticTokensEdit;\n    function asSemanticTokensEdits(value) {\n        if (value === undefined || value === null) {\n            return undefined;\n        }\n        return new vscode.SemanticTokensEdits(value.edits.map(asSemanticTokensEdit), value.resultId);\n    }\n    protocol2code.asSemanticTokensEdits = asSemanticTokensEdits;\n    function asLegend(value) {\n        return value;\n    }\n    protocol2code.asLegend = asLegend;\n})(protocol2code || (protocol2code = {}));\nclass SemanticTokensFeature extends client_1.TextDocumentFeature {\n    constructor(client) {\n        super(client, vscode_languageserver_protocol_1.Proposed.SemanticTokensRequest.type);\n    }\n    fillClientCapabilities(cap) {\n        const capabilites = cap;\n        let capability = ensure(ensure(capabilites, 'textDocument'), 'semanticTokens');\n        capability.dynamicRegistration = true;\n        capability.tokenTypes = [\n            vscode_languageserver_protocol_1.Proposed.SemanticTokenTypes.comment,\n            vscode_languageserver_protocol_1.Proposed.SemanticTokenTypes.keyword,\n            vscode_languageserver_protocol_1.Proposed.SemanticTokenTypes.number,\n            vscode_languageserver_protocol_1.Proposed.SemanticTokenTypes.regexp,\n            vscode_languageserver_protocol_1.Proposed.SemanticTokenTypes.operator,\n            vscode_languageserver_protocol_1.Proposed.SemanticTokenTypes.namespace,\n            vscode_languageserver_protocol_1.Proposed.SemanticTokenTypes.type,\n            vscode_languageserver_protocol_1.Proposed.SemanticTokenTypes.struct,\n            vscode_languageserver_protocol_1.Proposed.SemanticTokenTypes.class,\n            vscode_languageserver_protocol_1.Proposed.SemanticTokenTypes.interface,\n            vscode_languageserver_protocol_1.Proposed.SemanticTokenTypes.enum,\n            vscode_languageserver_protocol_1.Proposed.SemanticTokenTypes.typeParameter,\n            vscode_languageserver_protocol_1.Proposed.SemanticTokenTypes.function,\n            vscode_languageserver_protocol_1.Proposed.SemanticTokenTypes.member,\n            vscode_languageserver_protocol_1.Proposed.SemanticTokenTypes.macro,\n            vscode_languageserver_protocol_1.Proposed.SemanticTokenTypes.variable,\n            vscode_languageserver_protocol_1.Proposed.SemanticTokenTypes.parameter,\n            vscode_languageserver_protocol_1.Proposed.SemanticTokenTypes.property,\n            vscode_languageserver_protocol_1.Proposed.SemanticTokenTypes.label\n        ];\n        capability.tokenModifiers = [\n            vscode_languageserver_protocol_1.Proposed.SemanticTokenModifiers.declaration,\n            vscode_languageserver_protocol_1.Proposed.SemanticTokenModifiers.documentation,\n            vscode_languageserver_protocol_1.Proposed.SemanticTokenModifiers.static,\n            vscode_languageserver_protocol_1.Proposed.SemanticTokenModifiers.abstract,\n            vscode_languageserver_protocol_1.Proposed.SemanticTokenModifiers.deprecated,\n            vscode_languageserver_protocol_1.Proposed.SemanticTokenModifiers.async,\n            vscode_languageserver_protocol_1.Proposed.SemanticTokenModifiers.readonly\n        ];\n    }\n    initialize(cap, documentSelector) {\n        const capabilities = cap;\n        let [id, options] = this.getRegistration(documentSelector, capabilities.semanticTokensProvider);\n        if (!id || !options) {\n            return;\n        }\n        this.register(this.messages, { id: id, registerOptions: options });\n    }\n    registerLanguageProvider(options) {\n        const hasEditProvider = options.documentProvider !== undefined && typeof options.documentProvider !== 'boolean' && options.documentProvider.edits === true;\n        const documentProvider = {\n            provideDocumentSemanticTokens: (document, token) => {\n                const client = this._client;\n                const middleware = client.clientOptions.middleware;\n                const provideDocumentSemanticTokens = (document, token) => {\n                    const params = {\n                        textDocument: client.code2ProtocolConverter.asTextDocumentIdentifier(document)\n                    };\n                    return client.sendRequest(vscode_languageserver_protocol_1.Proposed.SemanticTokensRequest.type, params, token).then((result) => {\n                        return protocol2code.asSemanticTokens(result);\n                    }, (error) => {\n                        client.logFailedRequest(vscode_languageserver_protocol_1.Proposed.SemanticTokensRequest.type, error);\n                        return undefined;\n                    });\n                };\n                return middleware.provideDocumentSemanticTokens\n                    ? middleware.provideDocumentSemanticTokens(document, token, provideDocumentSemanticTokens)\n                    : provideDocumentSemanticTokens(document, token);\n            },\n            provideDocumentSemanticTokensEdits: hasEditProvider\n                ? (document, previousResultId, token) => {\n                    const client = this._client;\n                    const middleware = client.clientOptions.middleware;\n                    const provideDocumentSemanticTokensEdits = (document, previousResultId, token) => {\n                        const params = {\n                            textDocument: client.code2ProtocolConverter.asTextDocumentIdentifier(document),\n                            previousResultId\n                        };\n                        return client.sendRequest(vscode_languageserver_protocol_1.Proposed.SemanticTokensEditsRequest.type, params, token).then((result) => {\n                            if (vscode_languageserver_protocol_1.Proposed.SemanticTokens.is(result)) {\n                                return protocol2code.asSemanticTokens(result);\n                            }\n                            else {\n                                return protocol2code.asSemanticTokensEdits(result);\n                            }\n                        }, (error) => {\n                            client.logFailedRequest(vscode_languageserver_protocol_1.Proposed.SemanticTokensEditsRequest.type, error);\n                            return undefined;\n                        });\n                    };\n                    return middleware.provideDocumentSemanticTokensEdits\n                        ? middleware.provideDocumentSemanticTokensEdits(document, previousResultId, token, provideDocumentSemanticTokensEdits)\n                        : provideDocumentSemanticTokensEdits(document, previousResultId, token);\n                }\n                : undefined\n        };\n        const hasRangeProvider = options.rangeProvider === true;\n        const rangeProvider = hasRangeProvider\n            ? {\n                provideDocumentRangeSemanticTokens: (document, range, token) => {\n                    const client = this._client;\n                    const middleware = client.clientOptions.middleware;\n                    const provideDocumentRangeSemanticTokens = (document, range, token) => {\n                        const params = {\n                            textDocument: client.code2ProtocolConverter.asTextDocumentIdentifier(document),\n                            range: client.code2ProtocolConverter.asRange(range)\n                        };\n                        return client.sendRequest(vscode_languageserver_protocol_1.Proposed.SemanticTokensRangeRequest.type, params, token).then((result) => {\n                            return protocol2code.asSemanticTokens(result);\n                        }, (error) => {\n                            client.logFailedRequest(vscode_languageserver_protocol_1.Proposed.SemanticTokensRangeRequest.type, error);\n                            return undefined;\n                        });\n                    };\n                    return middleware.provideDocumentRangeSemanticTokens\n                        ? middleware.provideDocumentRangeSemanticTokens(document, range, token, provideDocumentRangeSemanticTokens)\n                        : provideDocumentRangeSemanticTokens(document, range, token);\n                }\n            }\n            : undefined;\n        const disposables = [];\n        const legend = protocol2code.asLegend(options.legend);\n        disposables.push(vscode.languages.registerDocumentSemanticTokensProvider(options.documentSelector, documentProvider, legend));\n        if (rangeProvider !== undefined) {\n            disposables.push(vscode.languages.registerDocumentRangeSemanticTokensProvider(options.documentSelector, rangeProvider, legend));\n        }\n        return [new vscode.Disposable(() => disposables.forEach(item => item.dispose())), { document: documentProvider, range: rangeProvider }];\n    }\n}\nexports.SemanticTokensFeature = SemanticTokensFeature;\n", "/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\n'use strict';\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst cp = require(\"child_process\");\nconst path_1 = require(\"path\");\nconst isWindows = (process.platform === 'win32');\nconst isMacintosh = (process.platform === 'darwin');\nconst isLinux = (process.platform === 'linux');\nfunction terminate(process, cwd) {\n    if (isWindows) {\n        try {\n            // This we run in Atom execFileSync is available.\n            // Ignore stderr since this is otherwise piped to parent.stderr\n            // which might be already closed.\n            let options = {\n                stdio: ['pipe', 'pipe', 'ignore']\n            };\n            if (cwd) {\n                options.cwd = cwd;\n            }\n            cp.execFileSync('taskkill', ['/T', '/F', '/PID', process.pid.toString()], options);\n            return true;\n        }\n        catch (err) {\n            return false;\n        }\n    }\n    else if (isLinux || isMacintosh) {\n        try {\n            var cmd = path_1.join(__dirname, 'terminateProcess.sh');\n            var result = cp.spawnSync(cmd, [process.pid.toString()]);\n            return result.error ? false : true;\n        }\n        catch (err) {\n            return false;\n        }\n    }\n    else {\n        process.kill('SIGKILL');\n        return true;\n    }\n}\nexports.terminate = terminate;\n", "/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\n'use strict';\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst cp = require(\"child_process\");\nconst fs = require(\"fs\");\nconst SemVer = require(\"semver\");\nconst client_1 = require(\"./client\");\nconst vscode_1 = require(\"vscode\");\nconst vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\nconst colorProvider_1 = require(\"./colorProvider\");\nconst configuration_1 = require(\"./configuration\");\nconst implementation_1 = require(\"./implementation\");\nconst typeDefinition_1 = require(\"./typeDefinition\");\nconst workspaceFolders_1 = require(\"./workspaceFolders\");\nconst foldingRange_1 = require(\"./foldingRange\");\nconst declaration_1 = require(\"./declaration\");\nconst selectionRange_1 = require(\"./selectionRange\");\nconst progress_1 = require(\"./progress\");\nconst callHierarchy_proposed_1 = require(\"./callHierarchy.proposed\");\nconst semanticTokens_proposed_1 = require(\"./semanticTokens.proposed\");\nconst Is = require(\"./utils/is\");\nconst processes_1 = require(\"./utils/processes\");\n__export(require(\"./client\"));\nconst REQUIRED_VSCODE_VERSION = '^1.41.0'; // do not change format, updated by `updateVSCode` script\nvar Executable;\n(function (Executable) {\n    function is(value) {\n        return Is.string(value.command);\n    }\n    Executable.is = is;\n})(Executable || (Executable = {}));\nvar TransportKind;\n(function (TransportKind) {\n    TransportKind[TransportKind[\"stdio\"] = 0] = \"stdio\";\n    TransportKind[TransportKind[\"ipc\"] = 1] = \"ipc\";\n    TransportKind[TransportKind[\"pipe\"] = 2] = \"pipe\";\n    TransportKind[TransportKind[\"socket\"] = 3] = \"socket\";\n})(TransportKind = exports.TransportKind || (exports.TransportKind = {}));\nvar Transport;\n(function (Transport) {\n    function isSocket(value) {\n        let candidate = value;\n        return candidate && candidate.kind === TransportKind.socket && Is.number(candidate.port);\n    }\n    Transport.isSocket = isSocket;\n})(Transport || (Transport = {}));\nvar NodeModule;\n(function (NodeModule) {\n    function is(value) {\n        return Is.string(value.module);\n    }\n    NodeModule.is = is;\n})(NodeModule || (NodeModule = {}));\nvar StreamInfo;\n(function (StreamInfo) {\n    function is(value) {\n        let candidate = value;\n        return candidate && candidate.writer !== void 0 && candidate.reader !== void 0;\n    }\n    StreamInfo.is = is;\n})(StreamInfo || (StreamInfo = {}));\nvar ChildProcessInfo;\n(function (ChildProcessInfo) {\n    function is(value) {\n        let candidate = value;\n        return candidate && candidate.process !== void 0 && typeof candidate.detached === 'boolean';\n    }\n    ChildProcessInfo.is = is;\n})(ChildProcessInfo || (ChildProcessInfo = {}));\nclass LanguageClient extends client_1.BaseLanguageClient {\n    constructor(arg1, arg2, arg3, arg4, arg5) {\n        let id;\n        let name;\n        let serverOptions;\n        let clientOptions;\n        let forceDebug;\n        if (Is.string(arg2)) {\n            id = arg1;\n            name = arg2;\n            serverOptions = arg3;\n            clientOptions = arg4;\n            forceDebug = !!arg5;\n        }\n        else {\n            id = arg1.toLowerCase();\n            name = arg1;\n            serverOptions = arg2;\n            clientOptions = arg3;\n            forceDebug = arg4;\n        }\n        if (forceDebug === void 0) {\n            forceDebug = false;\n        }\n        super(id, name, clientOptions);\n        this._serverOptions = serverOptions;\n        this._forceDebug = forceDebug;\n        try {\n            this.checkVersion();\n        }\n        catch (error) {\n            if (Is.string(error.message)) {\n                this.outputChannel.appendLine(error.message);\n            }\n            throw error;\n        }\n    }\n    checkVersion() {\n        let codeVersion = SemVer.parse(vscode_1.version);\n        if (!codeVersion) {\n            throw new Error(`No valid VS Code version detected. Version string is: ${vscode_1.version}`);\n        }\n        // Remove the insider pre-release since we stay API compatible.\n        if (codeVersion.prerelease && codeVersion.prerelease.length > 0) {\n            codeVersion.prerelease = [];\n        }\n        if (!SemVer.satisfies(codeVersion, REQUIRED_VSCODE_VERSION)) {\n            throw new Error(`The language client requires VS Code version ${REQUIRED_VSCODE_VERSION} but received version ${vscode_1.version}`);\n        }\n    }\n    stop() {\n        return super.stop().then(() => {\n            if (this._serverProcess) {\n                let toCheck = this._serverProcess;\n                this._serverProcess = undefined;\n                if (this._isDetached === void 0 || !this._isDetached) {\n                    this.checkProcessDied(toCheck);\n                }\n                this._isDetached = undefined;\n            }\n        });\n    }\n    checkProcessDied(childProcess) {\n        if (!childProcess) {\n            return;\n        }\n        setTimeout(() => {\n            // Test if the process is still alive. Throws an exception if not\n            try {\n                process.kill(childProcess.pid, 0);\n                processes_1.terminate(childProcess);\n            }\n            catch (error) {\n                // All is fine.\n            }\n        }, 2000);\n    }\n    handleConnectionClosed() {\n        this._serverProcess = undefined;\n        super.handleConnectionClosed();\n    }\n    createMessageTransports(encoding) {\n        function getEnvironment(env, fork) {\n            if (!env && !fork) {\n                return undefined;\n            }\n            let result = Object.create(null);\n            Object.keys(process.env).forEach(key => result[key] = process.env[key]);\n            if (fork) {\n                result['ELECTRON_RUN_AS_NODE'] = '1';\n                result['ELECTRON_NO_ASAR'] = '1';\n            }\n            if (env) {\n                Object.keys(env).forEach(key => result[key] = env[key]);\n            }\n            return result;\n        }\n        const debugStartWith = ['--debug=', '--debug-brk=', '--inspect=', '--inspect-brk='];\n        const debugEquals = ['--debug', '--debug-brk', '--inspect', '--inspect-brk'];\n        function startedInDebugMode() {\n            let args = process.execArgv;\n            if (args) {\n                return args.some((arg) => {\n                    return debugStartWith.some(value => arg.startsWith(value)) ||\n                        debugEquals.some(value => arg === value);\n                });\n            }\n            return false;\n        }\n        function assertStdio(process) {\n            if (process.stdin === null || process.stdout === null || process.stderr === null) {\n                throw new Error('Process created without stdio streams');\n            }\n        }\n        let server = this._serverOptions;\n        // We got a function.\n        if (Is.func(server)) {\n            return server().then((result) => {\n                if (client_1.MessageTransports.is(result)) {\n                    this._isDetached = !!result.detached;\n                    return result;\n                }\n                else if (StreamInfo.is(result)) {\n                    this._isDetached = !!result.detached;\n                    return { reader: new vscode_languageserver_protocol_1.StreamMessageReader(result.reader), writer: new vscode_languageserver_protocol_1.StreamMessageWriter(result.writer) };\n                }\n                else {\n                    let cp;\n                    if (ChildProcessInfo.is(result)) {\n                        cp = result.process;\n                        this._isDetached = result.detached;\n                    }\n                    else {\n                        cp = result;\n                        this._isDetached = false;\n                    }\n                    cp.stderr.on('data', data => this.outputChannel.append(Is.string(data) ? data : data.toString(encoding)));\n                    return { reader: new vscode_languageserver_protocol_1.StreamMessageReader(cp.stdout), writer: new vscode_languageserver_protocol_1.StreamMessageWriter(cp.stdin) };\n                }\n            });\n        }\n        let json;\n        let runDebug = server;\n        if (runDebug.run || runDebug.debug) {\n            if (this._forceDebug || startedInDebugMode()) {\n                json = runDebug.debug;\n            }\n            else {\n                json = runDebug.run;\n            }\n        }\n        else {\n            json = server;\n        }\n        return this._getServerWorkingDir(json.options).then(serverWorkingDir => {\n            if (NodeModule.is(json) && json.module) {\n                let node = json;\n                let transport = node.transport || TransportKind.stdio;\n                if (node.runtime) {\n                    let args = [];\n                    let options = node.options || Object.create(null);\n                    if (options.execArgv) {\n                        options.execArgv.forEach(element => args.push(element));\n                    }\n                    args.push(node.module);\n                    if (node.args) {\n                        node.args.forEach(element => args.push(element));\n                    }\n                    let execOptions = Object.create(null);\n                    execOptions.cwd = serverWorkingDir;\n                    execOptions.env = getEnvironment(options.env, false);\n                    let pipeName = undefined;\n                    if (transport === TransportKind.ipc) {\n                        // exec options not correctly typed in lib\n                        execOptions.stdio = [null, null, null, 'ipc'];\n                        args.push('--node-ipc');\n                    }\n                    else if (transport === TransportKind.stdio) {\n                        args.push('--stdio');\n                    }\n                    else if (transport === TransportKind.pipe) {\n                        pipeName = vscode_languageserver_protocol_1.generateRandomPipeName();\n                        args.push(`--pipe=${pipeName}`);\n                    }\n                    else if (Transport.isSocket(transport)) {\n                        args.push(`--socket=${transport.port}`);\n                    }\n                    args.push(`--clientProcessId=${process.pid.toString()}`);\n                    if (transport === TransportKind.ipc || transport === TransportKind.stdio) {\n                        let serverProcess = cp.spawn(node.runtime, args, execOptions);\n                        if (!serverProcess || !serverProcess.pid) {\n                            return Promise.reject(`Launching server using runtime ${node.runtime} failed.`);\n                        }\n                        this._serverProcess = serverProcess;\n                        serverProcess.stderr.on('data', data => this.outputChannel.append(Is.string(data) ? data : data.toString(encoding)));\n                        if (transport === TransportKind.ipc) {\n                            serverProcess.stdout.on('data', data => this.outputChannel.append(Is.string(data) ? data : data.toString(encoding)));\n                            return Promise.resolve({ reader: new vscode_languageserver_protocol_1.IPCMessageReader(serverProcess), writer: new vscode_languageserver_protocol_1.IPCMessageWriter(serverProcess) });\n                        }\n                        else {\n                            return Promise.resolve({ reader: new vscode_languageserver_protocol_1.StreamMessageReader(serverProcess.stdout), writer: new vscode_languageserver_protocol_1.StreamMessageWriter(serverProcess.stdin) });\n                        }\n                    }\n                    else if (transport === TransportKind.pipe) {\n                        return vscode_languageserver_protocol_1.createClientPipeTransport(pipeName).then((transport) => {\n                            let process = cp.spawn(node.runtime, args, execOptions);\n                            if (!process || !process.pid) {\n                                return Promise.reject(`Launching server using runtime ${node.runtime} failed.`);\n                            }\n                            this._serverProcess = process;\n                            process.stderr.on('data', data => this.outputChannel.append(Is.string(data) ? data : data.toString(encoding)));\n                            process.stdout.on('data', data => this.outputChannel.append(Is.string(data) ? data : data.toString(encoding)));\n                            return transport.onConnected().then((protocol) => {\n                                return { reader: protocol[0], writer: protocol[1] };\n                            });\n                        });\n                    }\n                    else if (Transport.isSocket(transport)) {\n                        return vscode_languageserver_protocol_1.createClientSocketTransport(transport.port).then((transport) => {\n                            let process = cp.spawn(node.runtime, args, execOptions);\n                            if (!process || !process.pid) {\n                                return Promise.reject(`Launching server using runtime ${node.runtime} failed.`);\n                            }\n                            this._serverProcess = process;\n                            process.stderr.on('data', data => this.outputChannel.append(Is.string(data) ? data : data.toString(encoding)));\n                            process.stdout.on('data', data => this.outputChannel.append(Is.string(data) ? data : data.toString(encoding)));\n                            return transport.onConnected().then((protocol) => {\n                                return { reader: protocol[0], writer: protocol[1] };\n                            });\n                        });\n                    }\n                }\n                else {\n                    let pipeName = undefined;\n                    return new Promise((resolve, _reject) => {\n                        let args = node.args && node.args.slice() || [];\n                        if (transport === TransportKind.ipc) {\n                            args.push('--node-ipc');\n                        }\n                        else if (transport === TransportKind.stdio) {\n                            args.push('--stdio');\n                        }\n                        else if (transport === TransportKind.pipe) {\n                            pipeName = vscode_languageserver_protocol_1.generateRandomPipeName();\n                            args.push(`--pipe=${pipeName}`);\n                        }\n                        else if (Transport.isSocket(transport)) {\n                            args.push(`--socket=${transport.port}`);\n                        }\n                        args.push(`--clientProcessId=${process.pid.toString()}`);\n                        let options = node.options || Object.create(null);\n                        options.env = getEnvironment(options.env, true);\n                        options.execArgv = options.execArgv || [];\n                        options.cwd = serverWorkingDir;\n                        options.silent = true;\n                        if (transport === TransportKind.ipc || transport === TransportKind.stdio) {\n                            let sp = cp.fork(node.module, args || [], options);\n                            assertStdio(sp);\n                            this._serverProcess = sp;\n                            sp.stderr.on('data', data => this.outputChannel.append(Is.string(data) ? data : data.toString(encoding)));\n                            if (transport === TransportKind.ipc) {\n                                sp.stdout.on('data', data => this.outputChannel.append(Is.string(data) ? data : data.toString(encoding)));\n                                resolve({ reader: new vscode_languageserver_protocol_1.IPCMessageReader(this._serverProcess), writer: new vscode_languageserver_protocol_1.IPCMessageWriter(this._serverProcess) });\n                            }\n                            else {\n                                resolve({ reader: new vscode_languageserver_protocol_1.StreamMessageReader(sp.stdout), writer: new vscode_languageserver_protocol_1.StreamMessageWriter(sp.stdin) });\n                            }\n                        }\n                        else if (transport === TransportKind.pipe) {\n                            vscode_languageserver_protocol_1.createClientPipeTransport(pipeName).then((transport) => {\n                                let sp = cp.fork(node.module, args || [], options);\n                                assertStdio(sp);\n                                this._serverProcess = sp;\n                                sp.stderr.on('data', data => this.outputChannel.append(Is.string(data) ? data : data.toString(encoding)));\n                                sp.stdout.on('data', data => this.outputChannel.append(Is.string(data) ? data : data.toString(encoding)));\n                                transport.onConnected().then((protocol) => {\n                                    resolve({ reader: protocol[0], writer: protocol[1] });\n                                });\n                            });\n                        }\n                        else if (Transport.isSocket(transport)) {\n                            vscode_languageserver_protocol_1.createClientSocketTransport(transport.port).then((transport) => {\n                                let sp = cp.fork(node.module, args || [], options);\n                                assertStdio(sp);\n                                this._serverProcess = sp;\n                                sp.stderr.on('data', data => this.outputChannel.append(Is.string(data) ? data : data.toString(encoding)));\n                                sp.stdout.on('data', data => this.outputChannel.append(Is.string(data) ? data : data.toString(encoding)));\n                                transport.onConnected().then((protocol) => {\n                                    resolve({ reader: protocol[0], writer: protocol[1] });\n                                });\n                            });\n                        }\n                    });\n                }\n            }\n            else if (Executable.is(json) && json.command) {\n                let command = json;\n                let args = command.args || [];\n                let options = Object.assign({}, command.options);\n                options.cwd = options.cwd || serverWorkingDir;\n                let serverProcess = cp.spawn(command.command, args, options);\n                if (!serverProcess || !serverProcess.pid) {\n                    return Promise.reject(`Launching server using command ${command.command} failed.`);\n                }\n                serverProcess.stderr.on('data', data => this.outputChannel.append(Is.string(data) ? data : data.toString(encoding)));\n                this._serverProcess = serverProcess;\n                this._isDetached = !!options.detached;\n                return Promise.resolve({ reader: new vscode_languageserver_protocol_1.StreamMessageReader(serverProcess.stdout), writer: new vscode_languageserver_protocol_1.StreamMessageWriter(serverProcess.stdin) });\n            }\n            return Promise.reject(new Error(`Unsupported server configuration ` + JSON.stringify(server, null, 4)));\n        });\n    }\n    registerProposedFeatures() {\n        this.registerFeatures(ProposedFeatures.createAll(this));\n    }\n    registerBuiltinFeatures() {\n        super.registerBuiltinFeatures();\n        this.registerFeature(new configuration_1.ConfigurationFeature(this));\n        this.registerFeature(new typeDefinition_1.TypeDefinitionFeature(this));\n        this.registerFeature(new implementation_1.ImplementationFeature(this));\n        this.registerFeature(new colorProvider_1.ColorProviderFeature(this));\n        this.registerFeature(new workspaceFolders_1.WorkspaceFoldersFeature(this));\n        this.registerFeature(new foldingRange_1.FoldingRangeFeature(this));\n        this.registerFeature(new declaration_1.DeclarationFeature(this));\n        this.registerFeature(new selectionRange_1.SelectionRangeFeature(this));\n        this.registerFeature(new progress_1.ProgressFeature(this));\n    }\n    _mainGetRootPath() {\n        let folders = vscode_1.workspace.workspaceFolders;\n        if (!folders || folders.length === 0) {\n            return undefined;\n        }\n        let folder = folders[0];\n        if (folder.uri.scheme === 'file') {\n            return folder.uri.fsPath;\n        }\n        return undefined;\n    }\n    _getServerWorkingDir(options) {\n        let cwd = options && options.cwd;\n        if (!cwd) {\n            cwd = this.clientOptions.workspaceFolder\n                ? this.clientOptions.workspaceFolder.uri.fsPath\n                : this._mainGetRootPath();\n        }\n        if (cwd) {\n            // make sure the folder exists otherwise creating the process will fail\n            return new Promise(s => {\n                fs.lstat(cwd, (err, stats) => {\n                    s(!err && stats.isDirectory() ? cwd : undefined);\n                });\n            });\n        }\n        return Promise.resolve(undefined);\n    }\n}\nexports.LanguageClient = LanguageClient;\nclass SettingMonitor {\n    constructor(_client, _setting) {\n        this._client = _client;\n        this._setting = _setting;\n        this._listeners = [];\n    }\n    start() {\n        vscode_1.workspace.onDidChangeConfiguration(this.onDidChangeConfiguration, this, this._listeners);\n        this.onDidChangeConfiguration();\n        return new vscode_1.Disposable(() => {\n            if (this._client.needsStop()) {\n                this._client.stop();\n            }\n        });\n    }\n    onDidChangeConfiguration() {\n        let index = this._setting.indexOf('.');\n        let primary = index >= 0 ? this._setting.substr(0, index) : this._setting;\n        let rest = index >= 0 ? this._setting.substr(index + 1) : undefined;\n        let enabled = rest ? vscode_1.workspace.getConfiguration(primary).get(rest, false) : vscode_1.workspace.getConfiguration(primary);\n        if (enabled && this._client.needsStart()) {\n            this._client.start();\n        }\n        else if (!enabled && this._client.needsStop()) {\n            this._client.stop();\n        }\n    }\n}\nexports.SettingMonitor = SettingMonitor;\n// Exporting proposed protocol.\nvar ProposedFeatures;\n(function (ProposedFeatures) {\n    function createAll(client) {\n        let result = [\n            new callHierarchy_proposed_1.CallHierarchyFeature(client),\n            new semanticTokens_proposed_1.SemanticTokensFeature(client)\n        ];\n        return result;\n    }\n    ProposedFeatures.createAll = createAll;\n})(ProposedFeatures = exports.ProposedFeatures || (exports.ProposedFeatures = {}));\n", "/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n\r\nimport * as vscode from 'vscode';\r\nimport { workspace, ExtensionContext, commands, window, Selection } from 'vscode';\r\nimport {\r\n\tLanguageClient,\r\n\tLanguageClientOptions,\r\n\tServerOptions\r\n} from 'vscode-languageclient';\r\nimport * as requirements from './requirements';\r\nimport * as net from 'net';\r\nimport * as child_process from 'child_process';\r\nimport * as lc from 'vscode-languageclient';\r\nimport { activateDebug } from './activateDebug'\r\nimport { DebugAdapterFactory } from './debugFactory'\r\nimport { MoosebookContentProvider } from './moosebookProvider';\r\n\r\nexport let client: LanguageClient;\r\nlet socket: net.Socket;\r\n\r\nexport async function activate(context: ExtensionContext) {\r\n\t// Testing Pharo can be used\r\n\tconsole.info('Start Pharo Language extension');\r\n\treturn requirements.resolveRequirements().catch(error => {\r\n\t\twindow.showErrorMessage(error.message, error.label).then((selection) => {\r\n\t\t\tif (error.label && error.label === selection && error.command) {\r\n\t\t\t\tcommands.executeCommand(error.command, error.commandParam);\r\n\t\t\t}\r\n\t\t});\r\n\t}).then (\r\n\t\tasync (requirements : requirements.RequirementsData) => {\r\n\t\t\r\n\t\t// Create the pharo language server client\r\n\t\tclient = createPharoLanguageServer(requirements, context);\r\n\t\t\r\n\t\t// Start the client. This will also launch the server\r\n\t\tcontext.subscriptions.push(client.start());\r\n\t\twindow.showInformationMessage('Client started');\r\n\t\r\n\t\t// Create new command\r\n\t\tcreateCommands(context);\r\n\r\n\t\t// Create debugguer\r\n\t\tlet factory = new DebugAdapterFactory();\r\n\t\tactivateDebug(context, factory);\r\n\r\n\t\t// Create Moosebook\r\n\t\tconsole.info('Start moosebook');\r\n\t\tconst moosebookContentProvider = new MoosebookContentProvider();\r\n\t\tcontext.subscriptions.push(vscode.notebook.registerNotebookContentProvider('moosebook', moosebookContentProvider));\r\n\t})\r\n\r\n}\r\n\r\nfunction createCommands(context: ExtensionContext) {\r\n\tcontext.subscriptions.push(vscode.commands.registerCommand('pharo.extensionVersion', commandPharoExtensionVersion));\r\n\tcontext.subscriptions.push(vscode.commands.registerCommand('pharo.printIt', commandPharoPrintIt));\r\n\tcontext.subscriptions.push(vscode.commands.registerCommand('pharo.showIt', commandPharoShowIt));\r\n\tcontext.subscriptions.push(vscode.commands.registerCommand('pharo.save', commandPharoSave));\r\n}\r\n\r\n\r\n\r\nexport function deactivate() {\r\n}\r\n\r\n/*\r\n * Section with extension commands\r\n */\r\n\r\nfunction commandPharoExtensionVersion() {\r\n\tclient.sendRequest(\"command:version\").then((result: string) => {\r\n\t\tconsole.log(result);\r\n\t\twindow.showInformationMessage(result);\r\n\t});\r\n}\r\n\r\nfunction commandPharoPrintIt() {\r\n\tlet editor = vscode.window.activeTextEditor;\r\n\tlet selection = editor.selection;\r\n\tclient.sendRequest('command:printIt', {\"line\": editor.document.getText(selection)}).then( (result: string) => {\r\n\t\teditor.edit(editBuilder => {\r\n\t\t\teditBuilder.replace( new vscode.Selection(selection.end, selection.end), ' \"' + result + '\" ');\r\n\t\t})\r\n\t}).catch((error) => window.showErrorMessage(error));\r\n}\r\n\r\nfunction commandPharoShowIt() {\r\n\tlet editor = vscode.window.activeTextEditor;\r\n\tclient.sendRequest('command:printIt', {\"line\": editor.document.getText(editor.selection)}).then( (result: string) => {\r\n\t\twindow.showInformationMessage(result);\r\n\t}).catch((error) => window.showErrorMessage(error));\r\n}\r\n\r\nfunction commandPharoSave() {\r\n\tclient.sendRequest('command:save').then( (result: string) => {\r\n\t\twindow.showInformationMessage(result);\r\n\t}).catch((error) => window.showErrorMessage(error));\r\n}\r\n\r\n/*\r\n * Section with function for Pharo Language Server\r\n */\r\n\r\nfunction createPharoLanguageServer(requirements: requirements.RequirementsData, context: ExtensionContext) {\r\n\tlet serverOptions: ServerOptions = () => createServerWithSocket(requirements.pathToVM, requirements.pathToImage, context);\r\n\r\n\t// Options to control the language client\r\n\tlet clientOptions: LanguageClientOptions = {\r\n\t\t// Register the server for plain text documents\r\n\t\tdocumentSelector: [{ scheme: 'file', language: 'pharo' }],\r\n\t\tsynchronize: {\r\n\t\t\t// Notify the server about file changes to '.clientrc files contained in the workspace\r\n\t\t\tfileEvents: workspace.createFileSystemWatcher('**/.clientrc')\r\n\t\t}\r\n\t};\r\n\r\n\t// Create the language client and start the client.\r\n\treturn new LanguageClient(\r\n\t\t'pharoLanguageServer',\r\n\t\t'Pharo Language Server',\r\n\t\tserverOptions,\r\n\t\tclientOptions\r\n\t);\r\n}\r\n\r\nasync function createServerWithSocket(pharoPath: string, pathToImage: string, context: ExtensionContext) {\r\n    let dls: child_process.ChildProcess;\r\n\tdls = child_process.spawn(pharoPath.trim(), [\r\n\t\tpathToImage, 'st', context.asAbsolutePath('/res/run-server.st')\r\n\t]);\r\n\r\n\tawait sleep(8000); // Wait that the Pharo server start\r\n\r\n\tsocket = net.connect({ port: 4000, host: '127.0.0.1' }, () => {\r\n\t\t// 'connect' listener.\r\n\t\tconsole.log('connected to server!');\r\n\t});\r\n\r\n\tlet result: lc.StreamInfo = {\r\n\t\twriter: socket,\r\n\t\treader: socket\r\n\t};\r\n\treturn Promise.resolve(result);\r\n}\r\n\r\nasync function sleep(ms: number) {\r\n\treturn new Promise(resolve => setTimeout(resolve, ms));\r\n}\r\n", "import * as vscode from 'vscode';\r\n\r\nexport interface RequirementsData {\r\n    pathToVM: string;\r\n    pathToImage: string;\r\n}\r\n\r\ninterface ErrorData {\r\n    message: string;\r\n    label: string;\r\n    command: string;\r\n    commandParam: any;\r\n}\r\n\r\nexport async function resolveRequirements(): Promise<RequirementsData> {\r\n    const pathToVM = await checkPathToVM();\r\n\tconst pathToImage = await checkPathToImage();\r\n    return Promise.resolve({ pathToVM: pathToVM, pathToImage: pathToImage });\r\n}\r\n\r\nasync function checkPathToVM(): Promise<string> {\r\n\treturn new Promise(async (resolve, reject) => {\r\n\t\tif (vscode.workspace.getConfiguration('pharo').get('pathToVM') === '') {\r\n\t\t\treject({\r\n\t\t\t\tmessage: 'Path to VM not set',\r\n\t\t\t\tlabel: 'Open settings',\r\n\t\t\t\tcommand: 'workbench.action.openSettingsJson'\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn resolve(vscode.workspace.getConfiguration('pharo').get('pathToVM'));\r\n\r\n\t});\r\n}\r\n\r\nasync function checkPathToImage(): Promise<string> {\r\n\treturn new Promise(async (resolve, reject) => {\r\n\t\tif (vscode.workspace.getConfiguration('pharo').get('pathToImage') === '') {\r\n\t\t\treject({\r\n\t\t\t\tmessage: 'Path to Image not set',\r\n\t\t\t\tlabel: 'Open settings',\r\n\t\t\t\tcommand: 'workbench.action.openSettingsJson'\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn resolve(vscode.workspace.getConfiguration('pharo').get('pathToImage'));\r\n\t});\r\n}", "import * as vscode from 'vscode';\r\n\r\nexport function activateDebug(context: vscode.ExtensionContext, factory: vscode.DebugAdapterDescriptorFactory) {\r\n\tcontext.subscriptions.push(\r\n\t\tvscode.commands.registerCommand('extension.pharo-debug.debugEditorContents', (resource: vscode.Uri) => {\r\n\t\t\tlet targetResource = resource;\r\n\t\t\tif (!targetResource && vscode.window.activeTextEditor) {\r\n\t\t\t\ttargetResource = vscode.window.activeTextEditor.document.uri;\r\n\t\t\t}\r\n\t\t\tif (targetResource) {\r\n\t\t\t\tvscode.debug.startDebugging(undefined, {\r\n\t\t\t\t\ttype: 'pharodb',\r\n\t\t\t\t\tname: 'Debug File',\r\n\t\t\t\t\trequest: 'launch',\r\n\t\t\t\t\tprogram: targetResource.fsPath\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t})\r\n\t);\r\n\r\n\r\n\tcontext.subscriptions.push(vscode.debug.registerDebugAdapterDescriptorFactory('pharodb', factory));\r\n\r\n}", "import * as vscode from 'vscode';\r\nimport { client } from './extension';\r\n\r\nexport class DebugAdapterFactory implements vscode.DebugAdapterDescriptorFactory {\r\n\r\n\tasync createDebugAdapterDescriptor(session: vscode.DebugSession, executable: vscode.DebugAdapterExecutable): Promise<vscode.ProviderResult<vscode.DebugAdapterDescriptor>> {\r\n\r\n\t\tconst port : Promise<number> = client.sendRequest('dap:startServer', { }).then((result: number) => {\r\n\t\t\treturn result;\r\n\t\t})\r\n\r\n\t\t// make VS Code connect to debug server\r\n\t\treturn new vscode.DebugAdapterServer(await port, 'localhost');\r\n\t}\r\n\r\n}", "import * as vscode from 'vscode';\r\nimport { Moosebook } from './moosebook';\r\n\r\ninterface RawNotebookCell {\r\n\tlanguage: string;\r\n\tvalue: string;\r\n\tkind: vscode.NotebookCellKind;\r\n\teditable?: boolean;\r\n}\r\n\r\ninterface ProjectAssociation {\r\n\t(key: string): boolean;\r\n}\r\n\r\n\r\nexport class MoosebookContentProvider implements  vscode.NotebookContentProvider, vscode.NotebookKernel {\r\n\treadonly id = 'moosebookKernel';\r\n\tpublic label = 'Moosebook Kernel';\r\n\r\n\tprivate readonly _associations = new Map<string, [ProjectAssociation, Moosebook]>();\r\n\tprivate _localDisposables: vscode.Disposable[] = [];\r\n\tsupportedLanguages?: string[] = ['pharo'];\r\n\tprivate _executionOrder = 0;\r\n\r\n\tconstructor() {\r\n\t\tthis._localDisposables.push(\r\n\t\t\tvscode.notebook.onDidOpenNotebookDocument(document => {\r\n\t\t\t\tconst docKey = document.uri.toString();\r\n\t\t\t\tif (!this.lookupMoosebook(docKey)) {\r\n\t\t\t\t\tconst project = new Moosebook(document);\r\n\t\t\t\t\tthis.register(\r\n\t\t\t\t\t\tdocKey,\r\n\t\t\t\t\t\tproject,\r\n\t\t\t\t\t\tkey => document.cells.some(cell => cell.index.toString() === key) || (key === docKey),\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t}),\r\n\t\t\tvscode.notebook.onDidCloseNotebookDocument(document => {\r\n\t\t\t\tconst project = this.unregister(document.uri.toString());\r\n\t\t\t\tif (project) {\r\n\t\t\t\t\tproject.dispose();\r\n\t\t\t\t}\r\n\t\t\t}),\r\n\t\t);\r\n\t\tvscode.notebook.registerNotebookKernelProvider({\r\n\t\t\tviewType: 'moosebook',\r\n\t\t}, {\r\n\t\t\tprovideKernels: () => {\r\n\t\t\t\treturn [this];\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tinterrupt?(document: vscode.NotebookDocument): void {\r\n\t\tthrow new Error('Method not implemented.');\r\n\t}\r\n\r\n\tasync executeCellsRequest(document: vscode.NotebookDocument, ranges: vscode.NotebookCellRange[]) {\r\n\t\tconst cells: vscode.NotebookCell[] = [];\r\n\t\tfor (let range of ranges) {\r\n\t\t\tfor (let i = range.start; i < range.end; i++) {\r\n\t\t\t\tcells.push(document.cells[i]);\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis._executeCells(cells);\r\n\t}\r\n\r\n\tprivate async _executeCells(cells: vscode.NotebookCell[]): Promise<void> {\r\n\t\tfor (const cell of cells) {\r\n\t\t\tconst execution = vscode.notebook.createNotebookCellExecutionTask(cell.notebook.uri, cell.index, this.id)!;\r\n\t\t\tawait this._doExecuteCell(execution);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate async _doExecuteCell(execution: vscode.NotebookCellExecutionTask): Promise<void> {\r\n\r\n\t\texecution.executionOrder = ++this._executionOrder;\r\n\t\texecution.start({ startTime: Date.now() });\r\n\r\n\t\tlet output = {mimetype: 'text/html', content: 'error... '};\r\n\t\tlet error: Error | undefined;\r\n\t\tconst moosebook = this.lookupMoosebook(execution.cell.index);\r\n\t\ttry {\r\n\t\t\toutput = await moosebook.eval(execution.cell);\r\n\t\t} catch(err) {\r\n\t\t\texecution.replaceOutput([new vscode.NotebookCellOutput([\r\n\t\t\t\tnew vscode.NotebookCellOutputItem('application/x.notebook.error-traceback', {\r\n\t\t\t\t\tename: err instanceof Error && err.name || 'error',\r\n\t\t\t\t\tevalue: err instanceof Error && err.message || JSON.stringify(err, undefined, 4),\r\n\t\t\t\t\ttraceback: []\r\n\t\t\t\t})\r\n\t\t\t])]);\r\n\t\t\texecution.end({ success: false });\r\n\t\t\treturn;\r\n\t\t}\r\n\t\r\n\r\n\t\texecution.replaceOutput([new vscode.NotebookCellOutput([\r\n\t\t\tnew vscode.NotebookCellOutputItem(output.mimetype, output.content)])]);\r\n\t\texecution.end({ success: true });\r\n\t}\r\n\r\n\r\n\r\n\r\n\tpublic lookupMoosebook(keyOrUri: string | number | vscode.Uri | undefined): Moosebook | undefined {\r\n\t\tif (keyOrUri) {\r\n\t\t\tlet key: string;\r\n\t\t\tif (typeof keyOrUri === 'string') {\r\n\t\t\t\tkey = keyOrUri;\r\n\t\t\t} else {\r\n\t\t\t\tkey = keyOrUri.toString();\r\n\t\t\t}\r\n\t\t\tfor (let [association, value] of this._associations.values()) {\r\n\t\t\t\tif (association(key)) {\r\n\t\t\t\t\treturn value;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn undefined;\r\n\t}\r\n\r\n\tasync openNotebook(uri: vscode.Uri): Promise<vscode.NotebookData> {\r\n\t\tlet contents = '';\r\n\t\ttry {\r\n\t\t\tcontents = Buffer.from(await vscode.workspace.fs.readFile(uri)).toString('utf8');\r\n\t\t} catch {\r\n\t\t}\r\n\r\n\t\tlet raw: RawNotebookCell[];\r\n\t\ttry {\r\n\t\t\traw = <RawNotebookCell[]>JSON.parse(contents);\r\n\t\t} catch {\r\n\t\t\traw = [];\r\n\t\t}\r\n\r\n\t\tconst notebookData: vscode.NotebookData = {\r\n\t\t\tmetadata: new vscode.NotebookDocumentMetadata().with({ editable: true }),\r\n\t\t\tcells: raw.map(item => ({\r\n\t\t\t\tkind: item.kind,\r\n\t\t\t\tsource: item.value,\r\n\t\t\t\tlanguage: item.language,\r\n\t\t\t\toutputs: [],\r\n\t\t\t\tmetadata: new vscode.NotebookCellMetadata().with({\r\n\t\t\t\t\teditable: true,\r\n\t\t\t\t\tbreakpointMargin: false\r\n\t\t\t\t })\r\n\t\t\t}))\r\n\t\t};\r\n\t\treturn notebookData;\r\n\t}\r\n\r\n\tpublic saveNotebook(document: vscode.NotebookDocument, _cancellation: vscode.CancellationToken): Promise<void> {\r\n\t\treturn this._save(document, document.uri);\r\n\t}\r\n\r\n\tpublic saveNotebookAs(targetResource: vscode.Uri, document: vscode.NotebookDocument, _cancellation: vscode.CancellationToken): Promise<void> {\r\n\t\treturn this._save(document, targetResource);\r\n\t}\r\n\r\n\tasync resolveNotebook(_document: vscode.NotebookDocument, _webview: vscode.NotebookCommunication): Promise<void> {\r\n\t\t// nothing\r\n\t}\r\n\r\n\tasync backupNotebook(document: vscode.NotebookDocument, context: vscode.NotebookDocumentBackupContext, _cancellation: vscode.CancellationToken): Promise<vscode.NotebookDocumentBackup> {\r\n\t\treturn { id: '', delete: () => {} };\r\n\t}\r\n\r\n\tpublic dispose() {\r\n\t}\r\n\r\n\t// ---- private ----\r\n\r\n\tprivate async _save(document: vscode.NotebookDocument, targetResource: vscode.Uri): Promise<void> {\r\n\t\tlet contents: RawNotebookCell[] = [];\r\n\t\tfor (let cell of document.cells) {\r\n\t\t\tcontents.push({\r\n\t\t\t\tkind: cell.kind,\r\n\t\t\t\tlanguage: cell.document.languageId,\r\n\t\t\t\tvalue: cell.document.getText(),\r\n\t\t\t});\r\n\t\t}\r\n\t\tawait vscode.workspace.fs.writeFile(targetResource, Buffer.from(JSON.stringify(contents)));\r\n\t}\r\n\r\n\tprivate register(key: string, project: Moosebook, association: ProjectAssociation) {\r\n\t\tthis._associations.set(key, [association, project]);\r\n\t}\r\n\r\n\tprivate unregister(key: string): Moosebook | undefined {\r\n\t\tconst project = this.lookupMoosebook(key);\r\n\t\tif (project) {\r\n\t\t\tthis._associations.delete(key);\r\n\t\t}\r\n\t\treturn project;\r\n\t}\r\n}", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n\r\nimport * as vscode from 'vscode';\r\nimport { client } from './extension';\r\n\r\ninterface PharoResponse {\r\n\tmimetype: string,\r\n\tcontent: string\r\n}\r\n\r\n\r\nexport class Moosebook implements vscode.Disposable {\r\n\r\n\r\n\tconstructor(doc: vscode.NotebookDocument) {\r\n\t\t\r\n\t}\r\n\r\n\tasync dispose() {\r\n\t\t\r\n\t}\r\n\r\n\tpublic async restartKernel() {\r\n\r\n\t}\r\n\r\n\tpublic async toggleDebugging(document: vscode.NotebookDocument) {\r\n\r\n\t}\r\n\r\n\tpublic async eval(cell: vscode.NotebookCell): Promise<PharoResponse> {\r\n\t\t// Eval\r\n\t\treturn client.sendRequest('command:notebookPrintIt', {\"line\": cell.document.getText()}).then( (result: PharoResponse) => {\r\n\t\t\tif (result.mimetype == 'error')\r\n\t\t\tthrow new Error(result.content);\r\n\t\t\treturn result;\r\n\t\t}).catch((error) => { throw new Error(error);\r\n\t\t});\r\n\t}\r\n\r\n\tpublic addDebugSession(session: vscode.DebugSession) {\r\n\r\n\t}\r\n\r\n\tpublic removeDebugSession(session: vscode.DebugSession) {\r\n\r\n\t}\r\n\r\n}\r\n"],
  "mappings": "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",
  "names": []
}
